{"dt": "2017-10-16 05:50", "users": [["User", "jilljenn", "https://avatars1.githubusercontent.com/u/1729581?v=4", [["tryalgo", "https://github.com/jilljenn/tryalgo", "Basic and advanced algorithms and data structures", 79, "Python"]]], ["User", "levelfour", "https://avatars1.githubusercontent.com/u/3879440?v=4", [["machine-learning-2014", "https://github.com/levelfour/machine-learning-2014", "\u6a5f\u68b0\u5b66\u7fd2\u5206\u79d1\u4f1a for TSG2014 winter", 84, "Python"]]], ["User", "yamahigashi", "https://avatars0.githubusercontent.com/u/523673?v=4", [["fabric-fabrik-fullbody-ik", "https://github.com/yamahigashi/fabric-fabrik-fullbody-ik", "Fabric Engine Canvas tool for full-body IK system, based on FABRIK (Forward And Backward Reaching Inverse Kinematics) ", 34, "Python"]]], ["User", "fujita", "https://avatars3.githubusercontent.com/u/726426?v=4", []], ["User", "rezoo", "https://avatars0.githubusercontent.com/u/212315?v=4", [["illustration2vec", "https://github.com/rezoo/illustration2vec", "A simple deep learning library for estimating a set of tags and extracting semantic feature vectors from given illustrations.", 246, "Python"]]], ["User", "nineties", "https://avatars2.githubusercontent.com/u/172570?v=4", [["py-videocore", "https://github.com/nineties/py-videocore", "Python library for GPGPU on Raspberry Pi", 392, "Python"]]], ["User", "wellflat", "https://avatars1.githubusercontent.com/u/363364?v=4", [["cat-fancier", "https://github.com/wellflat/cat-fancier", "cat detection, recognition, classifier engine :cat:", 52, "Python"]]], ["User", "icoxfog417", "https://avatars0.githubusercontent.com/u/544269?v=4", [["tensorflow_qrnn", "https://github.com/icoxfog417/tensorflow_qrnn", "QRNN implementation for TensorFlow", 178, "Python"], ["fastTextJapaneseTutorial", "https://github.com/icoxfog417/fastTextJapaneseTutorial", "Tutorial to train fastText with Japanese corpus", 73, "Python"], ["techcircle_openai_handson", "https://github.com/icoxfog417/techcircle_openai_handson", "Tech-Circle OpenAI Handson Repository", 45, "Python"]]], ["User", "knok", "https://avatars0.githubusercontent.com/u/1149984?v=4", [["rcnn-text-classification", "https://github.com/knok/rcnn-text-classification", "Recurrent Conventinal NN Text Classification for chainer", 89, "Python"]]], ["User", "fukatani", "https://avatars0.githubusercontent.com/u/8858287?v=4", [["stacked_generalization", "https://github.com/fukatani/stacked_generalization", "Library for machine learning stacking generalization.", 61, "Python"]]], ["User", "hvy", "https://avatars2.githubusercontent.com/u/5983694?v=4", [["chainer-visualization", "https://github.com/hvy/chainer-visualization", "Chainer implementation of the paper Visualizing and Understanding Convolutional Networks, 2013", 38, "Python"]]], ["User", "tk0miya", "https://avatars2.githubusercontent.com/u/748828?v=4", [["testing.postgresql", "https://github.com/tk0miya/testing.postgresql", null, 69, "Python"]]], ["User", "qpSHiNqp", "https://avatars3.githubusercontent.com/u/1808432?v=4", []], ["User", "atsuoishimoto", "https://avatars1.githubusercontent.com/u/1088786?v=4", [["tse", "https://github.com/atsuoishimoto/tse", "Text Stream Editor in Python", 32, "Python"]]], ["User", "minhpqn", "https://avatars1.githubusercontent.com/u/7865331?v=4", [["nlp_100_drill_exercises", "https://github.com/minhpqn/nlp_100_drill_exercises", "100 b\u00e0i luy\u1ec7n t\u1eadp x\u1eed l\u00fd ng\u00f4n ng\u1eef t\u1ef1 nhi\u00ean", 62, "Python"]]], ["User", "aonotas", "https://avatars3.githubusercontent.com/u/5954536?v=4", [["deep-crf", "https://github.com/aonotas/deep-crf", "An implementation of Conditional Random Fields (CRFs) with Deep Learning Method", 50, "Python"]]], ["User", "cournape", "https://avatars1.githubusercontent.com/u/25111?v=4", [["Bento", "https://github.com/cournape/Bento", "A tool to nicely wrap-up your python softwares", 144, "Python"]]], ["User", "miyakogi", "https://avatars1.githubusercontent.com/u/3213998?v=4", [["pyppeteer", "https://github.com/miyakogi/pyppeteer", "Headless chrome/chromium automation library (unofficial port of puppeteer)", 128, "Python"]]], ["User", "vpelletier", "https://avatars1.githubusercontent.com/u/191204?v=4", [["pprofile", "https://github.com/vpelletier/pprofile", "Line-granularity, thread-aware deterministic and statistic pure-python profiler", 128, "Python"], ["python-libusb1", "https://github.com/vpelletier/python-libusb1", "Python ctype-based wrapper around libusb1", 63, "Python"]]], ["User", "takuti", "https://avatars1.githubusercontent.com/u/853567?v=4", [["flurs", "https://github.com/takuti/flurs", ":ocean: FluRS: A Python library for streaming recommendation algorithms", 39, "Python"]]], ["User", "shimizukawa", "https://avatars1.githubusercontent.com/u/151623?v=4", [["django-redshift-backend", "https://github.com/shimizukawa/django-redshift-backend", "Redshift database backend for Django", 38, "Python"]]], ["User", "marcan", "https://avatars0.githubusercontent.com/u/98387?v=4", [["cl-waifu2x", "https://github.com/marcan/cl-waifu2x", "OpenCL implementation of waifu2x image upscaling", 56, "Python"], ["blitzloop", "https://github.com/marcan/blitzloop", "Open source karaoke software", 39, "Python"]]], ["User", "sinhrks", "https://avatars1.githubusercontent.com/u/1696302?v=4", [["japandas", "https://github.com/sinhrks/japandas", "pandas japanese extension", 46, "Python"]]], ["User", "wkentaro", "https://avatars2.githubusercontent.com/u/4310419?v=4", [["pytorch-fcn", "https://github.com/wkentaro/pytorch-fcn", "PyTorch Implementation of Fully Convolutional Networks.", 178, "Python"], ["labelme", "https://github.com/wkentaro/labelme", "Image Annotation Tool with Python.", 143, "Python"], ["fcn", "https://github.com/wkentaro/fcn", "Chainer Implementation of Fully Convolutional Networks.", 94, "Python"]]], ["User", "yukitsuji", "https://avatars1.githubusercontent.com/u/9513712?v=4", [["3D_CNN_tensorflow", "https://github.com/yukitsuji/3D_CNN_tensorflow", "KITTI data processing and 3D CNN for Vehicle Detection", 32, "Python"]]], ["User", "TakahiroHaruyama", "https://avatars0.githubusercontent.com/u/6092487?v=4", [["openioc_scan", "https://github.com/TakahiroHaruyama/openioc_scan", "openioc_scan Volatility Framework plugin", 34, "Python"]]], ["User", "yosida95", "https://avatars0.githubusercontent.com/u/767275?v=4", []], ["User", "laysakura", "https://avatars1.githubusercontent.com/u/498788?v=4", [["rainbow_logging_handler", "https://github.com/laysakura/rainbow_logging_handler", "Ultimate Python colorized logger - https://pypi.python.org/pypi/rainbow_logging_handler", 63, "Python"]]], ["User", "philipperemy", "https://avatars1.githubusercontent.com/u/4516927?v=4", [["keras-attention-mechanism", "https://github.com/philipperemy/keras-attention-mechanism", "Attention mechanism Implementation for Keras.", 254, "Python"], ["Deep-Learning-Tinder", "https://github.com/philipperemy/Deep-Learning-Tinder", "Simple Tinder algorithm able to swipe left and right based on the recommendations of a pre-trained deep neural network (Machine Learning).", 74, "Python"], ["Reuters-full-data-set", "https://github.com/philipperemy/Reuters-full-data-set", "Full dataset of Reuters composed of 8,551,441 news titles, links and timestamps (Jan 2007 - Aug 2016). Generate your own up to today!", 72, "Python"], ["tensorflow-phased-lstm", "https://github.com/philipperemy/tensorflow-phased-lstm", "Phased LSTM: Accelerating Recurrent Network Training for Long or Event-based Sequences (NIPS 2016) - Tensorflow 1.0", 71, "Python"], ["keras-visualize-activations", "https://github.com/philipperemy/keras-visualize-activations", "Activation Maps Visualisation for Keras.", 65, "Python"], ["Stanford-OpenIE-Python", "https://github.com/philipperemy/Stanford-OpenIE-Python", "Stanford Open Information Extraction - Python Wrapper", 61, "Python"], ["deep-learning-bitcoin", "https://github.com/philipperemy/deep-learning-bitcoin", "Exploiting Bitcoin prices patterns with Deep Learning.", 51, "Python"]]], ["User", "mokemokechicken", "https://avatars3.githubusercontent.com/u/606549?v=4", [["keras_npi", "https://github.com/mokemokechicken/keras_npi", "NPI(Neural Programmer-Interpreters) implementation with Keras", 186, "Python"]]], ["User", "lucidfrontier45", "https://avatars2.githubusercontent.com/u/655305?v=4", []], ["User", "ks888", "https://avatars2.githubusercontent.com/u/8448120?v=4", [["ansible-playbook-debugger", "https://github.com/ks888/ansible-playbook-debugger", "A Debugger for Ansible Playbook", 148, "Python"]]], ["User", "fujiyuu75", "https://avatars3.githubusercontent.com/u/4550545?v=4", []], ["User", "ntddk", "https://avatars2.githubusercontent.com/u/2392750?v=4", []], ["User", "ojii", "https://avatars0.githubusercontent.com/u/141122?v=4", [["django-sekizai", "https://github.com/ojii/django-sekizai", "Django Template Blocks with extra functionality", 285, "Python"], ["django-classy-tags", "https://github.com/ojii/django-classy-tags", "Class based template tags for django", 284, "Python"], ["pymaging", "https://github.com/ojii/pymaging", "Pure Python imaging library with Python 2.6, 2.7, 3.1+ support", 247, "Python"], ["django-multilingual-ng", "https://github.com/ojii/django-multilingual-ng", "THIS PROJECT IS *NOT* SUPPORTED AND SHOULD NOT BE USED UNLESS YOU KNOW EXACTLY WHAT YOU'RE DOING!!!", 57, "Python"]]], ["User", "mikeknapp", "https://avatars1.githubusercontent.com/u/103593?v=4", [["AppEngine-OAuth-Library", "https://github.com/mikeknapp/AppEngine-OAuth-Library", "An OAuth library for interacting with Twitter, MySpace, LinkedIn and Yahoo on AppEngine", 251, "Python"]]], ["User", "nya3jp", "https://avatars0.githubusercontent.com/u/118475?v=4", []], ["User", "kfdm", "https://avatars0.githubusercontent.com/u/89725?v=4", [["gntp", "https://github.com/kfdm/gntp", "GNTP Python Library - #growl #gntp", 193, "Python"]]], ["User", "merkremont", "https://avatars2.githubusercontent.com/u/31154834?v=4", [["LineVodka", "https://github.com/merkremont/LineVodka", "May the Vodka be with you...", 39, "Python"]]], ["User", "hirofumi0810", "https://avatars0.githubusercontent.com/u/17924227?v=4", [["tensorflow_end2end_speech_recognition", "https://github.com/hirofumi0810/tensorflow_end2end_speech_recognition", "End-to-End speech recognition implementation base on TensorFlow (CTC, Attention)", 37, "Python"]]], ["User", "methane", "https://avatars2.githubusercontent.com/u/199592?v=4", [["git-largefile", "https://github.com/methane/git-largefile", "Store binary files in git to S3", 44, "Python"], ["wsaccel", "https://github.com/methane/wsaccel", "Accelerator for ws4py and AutobahnPython", 55, "Python"]]], ["User", "yagays", "https://avatars1.githubusercontent.com/u/131779?v=4", [["pybitflyer", "https://github.com/yagays/pybitflyer", "Python wrapper for bitFlyer's REST API.", 43, "Python"]]], ["User", "doloopwhile", "https://avatars3.githubusercontent.com/u/1269088?v=4", [["PyExecJS", "https://github.com/doloopwhile/PyExecJS", "Run JavaScript code from Python", 374, "Python"], ["Python-CoffeeScript", "https://github.com/doloopwhile/Python-CoffeeScript", "A bridge to the JS CoffeeScript compiler.", 78, "Python"]]], ["User", "dsanno", "https://avatars0.githubusercontent.com/u/2349794?v=4", [["chainer-dfi", "https://github.com/dsanno/chainer-dfi", "Implementation of Deep Feature Interpolation", 51, "Python"], ["chainer-image-caption", "https://github.com/dsanno/chainer-image-caption", null, 36, "Python"]]], ["User", "hanks", "https://avatars2.githubusercontent.com/u/759107?v=4", []], ["User", "dblN", "https://avatars2.githubusercontent.com/u/10726958?v=4", [["stochastic_depth_keras", "https://github.com/dblN/stochastic_depth_keras", "Rewriting code for \"Deep Networks with Stochastic Depth\" http://arxiv.org/abs/1603.09382 in keras", 128, "Python"]]], ["User", "Yukinoshita47", "https://avatars2.githubusercontent.com/u/16714408?v=4", [["Yuki-Chan-The-Auto-Pentest", "https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest", "Automate Pentest Tool", 160, "Python"]]], ["User", "muellermichel", "https://avatars1.githubusercontent.com/u/3378634?v=4", [["Hybrid-Fortran", "https://github.com/muellermichel/Hybrid-Fortran", "Accelerate with CUDA, OpenACC and OpenMP - Unified and Performance Portable", 69, "Python"]]], ["User", "tkamishima", "https://avatars0.githubusercontent.com/u/333861?v=4", [["mlmpy", "https://github.com/tkamishima/mlmpy", "Machine Learning Meets Python : A tutorial of NumPy / SciPy for machine learners who want to implement their own algotithms in Python (written in Japanese)", 83, "Python"]]], ["User", "liaoziyang", "https://avatars0.githubusercontent.com/u/6022969?v=4", [["Stanford-OpenIE-Spider", "https://github.com/liaoziyang/Stanford-OpenIE-Spider", "Extract Information from web corpus using Stanford Open Information Extraction.", 37, "Python"], ["negapoji", "https://github.com/liaoziyang/negapoji", "Japanese negative positive classification.\u65e5\u672c\u8a9e\u6587\u66f8\u306e\u30cd\u30ac\u30dd\u30b8\u3092\u5224\u5b9a\u3002", 34, "Python"]]], ["User", "yusugomori", "https://avatars3.githubusercontent.com/u/770299?v=4", [["deeplearning-tensorflow-keras", "https://github.com/yusugomori/deeplearning-tensorflow-keras", null, 51, "Python"]]], ["User", "mkasa", "https://avatars2.githubusercontent.com/u/416897?v=4", []], ["User", "Hironsan", "https://avatars2.githubusercontent.com/u/6737785?v=4", [["BossSensor", "https://github.com/Hironsan/BossSensor", "Hide screen when boss is approaching.", 4504, "Python"], ["anago", "https://github.com/Hironsan/anago", "Bidirectional LSTM-CRF for Sequence Labeling. Easy-to-use and state-of-the-art performance.", 257, "Python"], ["HotPepperGourmetDialogue", "https://github.com/Hironsan/HotPepperGourmetDialogue", "Restaurant Search System through Dialogue in Japanese.", 173, "Python"]]], ["User", "lepture", "https://avatars2.githubusercontent.com/u/290496?v=4", [["flask-oauthlib", "https://github.com/lepture/flask-oauthlib", "OAuthlib implementation for Flask.", 1084, "Python"], ["mistune", "https://github.com/lepture/mistune", "The fastest markdown parser in pure Python with renderer feature.", 1029, "Python"], ["flask-wtf", "https://github.com/lepture/flask-wtf", "Simple integration of Flask and WTForms, including CSRF, file upload and Recaptcha integration.", 669, "Python"], ["python-livereload", "https://github.com/lepture/python-livereload", "livereload server in python", 608, "Python"], ["captcha", "https://github.com/lepture/captcha", "A captcha library that generates audio and image CAPTCHAs.", 267, "Python"], ["example-oauth2-server", "https://github.com/lepture/example-oauth2-server", "Example for OAuth 2 Server", 188, "Python"], ["zerqu", "https://github.com/lepture/zerqu", "ZERQU is a content-focused API-based platform.", 142, "Python"], ["flask-weixin", "https://github.com/lepture/flask-weixin", "Weixin implementation in Flask.", 130, "Python"], ["otpauth", "https://github.com/lepture/otpauth", "Implements two-step verification of HOTP/TOTP. Also known as one time password.", 83, "Python"], ["tornado.ext", "https://github.com/lepture/tornado.ext", "!!!DEACTIVATE!!!", 80, "Python"], ["safe", "https://github.com/lepture/safe", "Is your password safe?", 49, "Python"], ["july", "https://github.com/lepture/july", "DEACTIVATE.", 45, "Python"], ["opencc-python", "https://github.com/lepture/opencc-python", "OpenCC binding for Python.", 40, "Python"], ["terminal", "https://github.com/lepture/terminal", "A terminal environment tools for python.", 40, "Python"], ["tower-slack", "https://github.com/lepture/tower-slack", "\u5c06 Tower.im \u7684\u6d88\u606f\u53d1\u9001\u5230 Slack \u4e0a", 37, "Python"], ["tornado.third", "https://github.com/lepture/tornado.third", "third party for tornado, see howto at https://github.com/lepture/tornado.ext", 35, "Python"]]], ["User", "nothingcosmos", "https://avatars0.githubusercontent.com/u/1210434?v=4", []], ["User", "miyosuda", "https://avatars0.githubusercontent.com/u/537493?v=4", [["async_deep_reinforce", "https://github.com/miyosuda/async_deep_reinforce", "Asynchronous Methods for Deep Reinforcement Learning", 409, "Python"], ["unreal", "https://github.com/miyosuda/unreal", "Reinforcement learning with unsupervised auxiliary tasks", 212, "Python"]]], ["User", "ChunML", "https://avatars3.githubusercontent.com/u/22028884?v=4", [["seq2seq", "https://github.com/ChunML/seq2seq", null, 34, "Python"]]], ["User", "aidiary", "https://avatars1.githubusercontent.com/u/719901?v=4", [["PRML", "https://github.com/aidiary/PRML", "PRML\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092Python\u3067\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0", 82, "Python"], ["keras-examples", "https://github.com/aidiary/keras-examples", "Keras\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0", 35, "Python"]]], ["User", "mpenkov", "https://avatars2.githubusercontent.com/u/1101396?v=4", []], ["User", "karlcow", "https://avatars0.githubusercontent.com/u/505230?v=4", [["markdown-testsuite", "https://github.com/karlcow/markdown-testsuite", "A markdown test suite", 92, "Python"]]], ["User", "takerum", "https://avatars0.githubusercontent.com/u/11573649?v=4", [["vat", "https://github.com/takerum/vat", "Code for reproducing the results on the MNIST dataset in the paper \"Distributional Smoothing with Virtual Adversarial Training\"", 49, "Python"]]], ["User", "mkouhei", "https://avatars3.githubusercontent.com/u/49910?v=4", []], ["User", "crftwr", "https://avatars1.githubusercontent.com/u/4488402?v=4", [["keyhac", "https://github.com/crftwr/keyhac", "python based key customization utility", 69, "Python"]]], ["User", "nakagami", "https://avatars2.githubusercontent.com/u/415278?v=4", [["pyfirebirdsql", "https://github.com/nakagami/pyfirebirdsql", "Python DBAPI module for FirebirdSQL", 42, "Python"]]], ["User", "leetenki", "https://avatars2.githubusercontent.com/u/5693644?v=4", [["YOLOv2", "https://github.com/leetenki/YOLOv2", "YOLOv2\u306echainer\u306e\u518d\u73fe\u5b9f\u88c5\u3067\u3059(darknet\u306echainer\u30ed\u30fc\u30c0\u3068\u3001\u5b8c\u5168\u306achainer\u4e0a\u3067\u306e\u8a13\u7df4\u30b3\u30fc\u30c9\u3092\u542b\u307f\u307e\u3059)", 208, "Python"]]], ["User", "thombashi", "https://avatars0.githubusercontent.com/u/15517661?v=4", [["sqlitebiter", "https://github.com/thombashi/sqlitebiter", "A CLI tool to convert CSV/Excel/HTML/JSON/LTSV/Markdown/SQLite/TSV/Google-Sheets to a SQLite database file.", 251, "Python"], ["tcconfig", "https://github.com/thombashi/tcconfig", "A simple tc command wrapper tool. Easy to setup traffic control of network bandwidth/latency/packet-loss/packet-corruption to network interfaces.", 236, "Python"], ["pytablewriter", "https://github.com/thombashi/pytablewriter", "A Python library to write a table in various formats: CSV / Elasticsearch / HTML / JavaScript / JSON / Jupyter Notebook / LaTeX / LTSV / Markdown / MediaWiki / NumPy / Excel / Pandas / Python / reStructuredText / SQLite / TOML / TSV.", 127, "Python"], ["SimpleSQLite", "https://github.com/thombashi/SimpleSQLite", "SimpleSQLite is a Python library to simplify SQLite database operations: table creation, data insertion and get data as other data formats.", 61, "Python"]]], ["User", "tkmru", "https://avatars3.githubusercontent.com/u/1628214?v=4", [["nao", "https://github.com/tkmru/nao", "No-meaning Assembly Omitter for IDA pro", 157, "Python"], ["pwn_collection", "https://github.com/tkmru/pwn_collection", "CTF & practice exploit collection", 42, "Python"]]], ["User", "mumumu", "https://avatars2.githubusercontent.com/u/26536?v=4", [["pep8-ja", "https://github.com/mumumu/pep8-ja", "PEP8 \u65e5\u672c\u8a9e\u7248", 81, "Python"]]], ["User", "belltailjp", "https://avatars1.githubusercontent.com/u/403968?v=4", [["selective_search_py", "https://github.com/belltailjp/selective_search_py", "Python-based implementation of the Selective Search for Object Recognition.", 231, "Python"]]], ["User", "hirokiky", "https://avatars1.githubusercontent.com/u/854049?v=4", [["django-reportmail", "https://github.com/hirokiky/django-reportmail", "Django library to send 'report' mail of django management command easily. ", 55, "Python"]]], ["User", "euske", "https://avatars1.githubusercontent.com/u/143989?v=4", [["pdfminer", "https://github.com/euske/pdfminer", "Python PDF Parser", 2387, "Python"]]], ["User", "cocuh", "https://avatars2.githubusercontent.com/u/1741999?v=4", []], ["User", "youzaka", "https://avatars2.githubusercontent.com/u/27234?v=4", [["ariblib", "https://github.com/youzaka/ariblib", "python implementation of arib-std-b10 and arib-stb-b24", 41, "Python"]]], ["User", "Joker316701882", "https://avatars3.githubusercontent.com/u/18679821?v=4", [["Deep-Image-Matting", "https://github.com/Joker316701882/Deep-Image-Matting", "This is tensorflow implementation for paper \"Deep Image Matting\"", 75, "Python"]]], ["User", "djour", "https://avatars0.githubusercontent.com/u/1555170?v=4", [["PyBRML", "https://github.com/djour/PyBRML", "Python Version of BRML toolbox for Bayesian Reasoning and Machine Learning", 107, "Python"]]], ["User", "shiba24", "https://avatars3.githubusercontent.com/u/15135624?v=4", [["learning2rank", "https://github.com/shiba24/learning2rank", "Learning to rank with neuralnet - RankNet and ListNet", 82, "Python"], ["3d-unet", "https://github.com/shiba24/3d-unet", "Tensorflow, Pytorch, and Chainer implementations of 3D UNet", 36, "Python"]]], ["User", "i2y", "https://avatars1.githubusercontent.com/u/6240399?v=4", [["mochi", "https://github.com/i2y/mochi", "Dynamically typed functional programming language", 877, "Python"]]], ["User", "ymyzk", "https://avatars2.githubusercontent.com/u/3383281?v=4", [["kawasemi", "https://github.com/ymyzk/kawasemi", "A Python library for sending notifications to services such as Slack, HipChat, Twitter, and so on.", 34, "Python"]]], ["User", "MiCHiLU", "https://avatars2.githubusercontent.com/u/15713?v=4", [["python-functools32", "https://github.com/MiCHiLU/python-functools32", "Backport of the functools module from Python 3.2.3 for use with Python 2.7 and PyPy. Includes `lru_cache` (Least-recently-used cache decorator)", 32, "Python"]]], ["User", "mblondel", "https://avatars2.githubusercontent.com/u/233706?v=4", [["soft-dtw", "https://github.com/mblondel/soft-dtw", "Python implementation of soft-DTW.", 53, "Python"], ["ivalice", "https://github.com/mblondel/ivalice", "Boosting and ensemble learning in Python.", 40, "Python"]]]], "min_followers": 10, "min_stars": 29}