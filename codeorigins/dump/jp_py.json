{"dt": "2018-05-27 12:47", "min_followers": 10, "min_stars": 37, "users": [["User", "lepture", "https://avatars2.githubusercontent.com/u/290496?v=4", [["flask-oauthlib", "https://github.com/lepture/flask-oauthlib", " If you are a company, you should use https://github.com/lepture/authlib instead.", 1223, "Python"], ["mistune", "https://github.com/lepture/mistune", "The fastest markdown parser in pure Python with renderer feature.", 1205, "Python"], ["flask-wtf", "https://github.com/lepture/flask-wtf", "Simple integration of Flask and WTForms, including CSRF, file upload and Recaptcha integration.", 767, "Python"], ["python-livereload", "https://github.com/lepture/python-livereload", "livereload server in python", 661, "Python"], ["authlib", "https://github.com/lepture/authlib", "The ultimate Python library in building OAuth and OpenID Connect servers. JWS,JWK,JWA,JWT included.", 471, "Python"], ["captcha", "https://github.com/lepture/captcha", "A captcha library that generates audio and image CAPTCHAs.", 350, "Python"], ["zerqu", "https://github.com/lepture/zerqu", "ZERQU is a content-focused API-based platform.", 156, "Python"], ["flask-weixin", "https://github.com/lepture/flask-weixin", "Weixin implementation in Flask.", 143, "Python"], ["otpauth", "https://github.com/lepture/otpauth", "Implements two-step verification of HOTP/TOTP. Also known as one time password.", 88, "Python"], ["tornado.ext", "https://github.com/lepture/tornado.ext", "!!!DEACTIVATE!!!", 79, "Python"], ["safe", "https://github.com/lepture/safe", "Is your password safe?", 51, "Python"], ["july", "https://github.com/lepture/july", "DEACTIVATE.", 46, "Python"], ["opencc-python", "https://github.com/lepture/opencc-python", "OpenCC binding for Python.", 46, "Python"], ["terminal", "https://github.com/lepture/terminal", "A terminal environment tools for python.", 44, "Python"]]], ["User", "mblondel", "https://avatars2.githubusercontent.com/u/233706?v=4", [["soft-dtw", "https://github.com/mblondel/soft-dtw", "Python implementation of soft-DTW.", 101, "Python"], ["ivalice", "https://github.com/mblondel/ivalice", "Boosting and ensemble learning in Python.", 44, "Python"]]], ["User", "marcan", "https://avatars0.githubusercontent.com/u/98387?v=4", [["cl-waifu2x", "https://github.com/marcan/cl-waifu2x", "OpenCL implementation of waifu2x image upscaling", 69, "Python"], ["blitzloop", "https://github.com/marcan/blitzloop", "Open source karaoke software", 50, "Python"]]], ["User", "Hironsan", "https://avatars2.githubusercontent.com/u/6737785?v=4", [["BossSensor", "https://github.com/Hironsan/BossSensor", "Hide screen when boss is approaching.", 4929, "Python"], ["anago", "https://github.com/Hironsan/anago", "Bidirectional LSTM-CRF for Sequence Labeling. Easy-to-use and state-of-the-art performance.", 557, "Python"], ["HotPepperGourmetDialogue", "https://github.com/Hironsan/HotPepperGourmetDialogue", "Restaurant Search System through Dialogue in Japanese.", 205, "Python"], ["natural-language-preprocessings", "https://github.com/Hironsan/natural-language-preprocessings", "Some recipes of natural language pre-processing", 43, "Python"]]], ["User", "yusugomori", "https://avatars3.githubusercontent.com/u/770299?v=4", [["deeplearning-tensorflow-keras", "https://github.com/yusugomori/deeplearning-tensorflow-keras", null, 110, "Python"]]], ["User", "wkentaro", "https://avatars2.githubusercontent.com/u/4310419?v=4", [["labelme", "https://github.com/wkentaro/labelme", "Image Polygonal Annotation with Python.", 717, "Python"], ["pytorch-fcn", "https://github.com/wkentaro/pytorch-fcn", "PyTorch Implementation of Fully Convolutional Networks.", 365, "Python"], ["fcn", "https://github.com/wkentaro/fcn", "Chainer Implementation of Fully Convolutional Networks.", 132, "Python"]]], ["User", "AtsushiSakai", "https://avatars3.githubusercontent.com/u/3813847?v=4", [["PythonRobotics", "https://github.com/AtsushiSakai/PythonRobotics", "Python sample codes for robotics algorithms.", 785, "Python"]]], ["User", "methane", "https://avatars2.githubusercontent.com/u/199592?v=4", [["git-largefile", "https://github.com/methane/git-largefile", "Store binary files in git to S3", 44, "Python"], ["wsaccel", "https://github.com/methane/wsaccel", "Accelerator for ws4py and AutobahnPython", 58, "Python"]]], ["User", "ojii", "https://avatars0.githubusercontent.com/u/141122?v=4", [["pymaging", "https://github.com/ojii/pymaging", "Pure Python imaging library with Python 2.6, 2.7, 3.1+ support", 250, "Python"], ["django-multilingual-ng", "https://github.com/ojii/django-multilingual-ng", "THIS PROJECT IS *NOT* SUPPORTED AND SHOULD NOT BE USED UNLESS YOU KNOW EXACTLY WHAT YOU'RE DOING!!!", 56, "Python"]]], ["User", "cournape", "https://avatars1.githubusercontent.com/u/25111?v=4", [["Bento", "https://github.com/cournape/Bento", "A tool to nicely wrap-up your python softwares", 143, "Python"]]], ["User", "miyosuda", "https://avatars0.githubusercontent.com/u/537493?v=4", [["async_deep_reinforce", "https://github.com/miyosuda/async_deep_reinforce", "Asynchronous Methods for Deep Reinforcement Learning", 484, "Python"], ["unreal", "https://github.com/miyosuda/unreal", "Reinforcement learning with unsupervised auxiliary tasks", 284, "Python"], ["disentangled_vae", "https://github.com/miyosuda/disentangled_vae", "Replicating \"Understanding disentangling in \u03b2-VAE\"", 65, "Python"]]], ["User", "arubdesu", "https://avatars3.githubusercontent.com/u/388808?v=4", [["Moscargo", "https://github.com/arubdesu/Moscargo", "Helps techs and other savvy folk find the most current version of the software you curate, and makes them available for ad-hoc download.", 42, "Python"], ["Extinguish", "https://github.com/arubdesu/Extinguish", "Generates configuration profiles to set Sparkle-updater-enabled apps off by default  ", 41, "Python"]]], ["User", "icoxfog417", "https://avatars0.githubusercontent.com/u/544269?v=4", [["tensorflow_qrnn", "https://github.com/icoxfog417/tensorflow_qrnn", "QRNN implementation for TensorFlow", 196, "Python"], ["fastTextJapaneseTutorial", "https://github.com/icoxfog417/fastTextJapaneseTutorial", "Tutorial to train fastText with Japanese corpus", 111, "Python"], ["techcircle_openai_handson", "https://github.com/icoxfog417/techcircle_openai_handson", "Tech-Circle OpenAI Handson Repository", 48, "Python"]]], ["User", "nineties", "https://avatars2.githubusercontent.com/u/172570?v=4", [["py-videocore", "https://github.com/nineties/py-videocore", "Python library for GPGPU on Raspberry Pi", 452, "Python"]]], ["User", "ntddk", "https://avatars2.githubusercontent.com/u/2392750?v=4", []], ["User", "sinhrks", "https://avatars1.githubusercontent.com/u/1696302?v=4", [["japandas", "https://github.com/sinhrks/japandas", "pandas japanese extension", 53, "Python"]]], ["User", "ianlewis", "https://avatars0.githubusercontent.com/u/49289?v=4", []], ["User", "euske", "https://avatars1.githubusercontent.com/u/143989?v=4", [["pyrexecd", "https://github.com/euske/pyrexecd", "Standalone SSH server for Windows", 186, "Python"]]], ["User", "karlcow", "https://avatars0.githubusercontent.com/u/505230?v=4", [["markdown-testsuite", "https://github.com/karlcow/markdown-testsuite", "A markdown test suite", 92, "Python"]]], ["User", "ChunML", "https://avatars3.githubusercontent.com/u/22028884?v=4", [["text-generator", "https://github.com/ChunML/text-generator", "Having fun with LSTMs by creating a simple text generator.", 60, "Python"], ["seq2seq", "https://github.com/ChunML/seq2seq", null, 55, "Python"]]], ["User", "Yukinoshita47", "https://avatars2.githubusercontent.com/u/16714408?v=4", [["Yuki-Chan-The-Auto-Pentest", "https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest", "Automate Pentest Tool", 288, "Python"]]], ["User", "hiroharu-kato", "https://avatars1.githubusercontent.com/u/15853190?v=4", [["neural_renderer", "https://github.com/hiroharu-kato/neural_renderer", "Code for the paper \"Neural 3D Mesh Renderer\" (CVPR 2018) by H. Kato, Y. Ushiku, and T. Harada.", 242, "Python"], ["mesh_reconstruction", "https://github.com/hiroharu-kato/mesh_reconstruction", "Code of single-image 3D reconstruction \"Neural 3D Mesh Renderer\" by H. Kato, Y. Ushiku, and T. Harada.", 40, "Python"]]], ["User", "takerum", "https://avatars0.githubusercontent.com/u/11573649?v=4", [["vat_tf", "https://github.com/takerum/vat_tf", "Virtual adversarial training with Tensorflow", 75, "Python"], ["vat", "https://github.com/takerum/vat", "Code for reproducing the results on the MNIST dataset in the paper \"Distributional Smoothing with Virtual Adversarial Training\"", 67, "Python"]]], ["User", "jilljenn", "https://avatars1.githubusercontent.com/u/1729581?v=4", [["tryalgo", "https://github.com/jilljenn/tryalgo", "Basic and advanced algorithms and data structures", 98, "Python"]]], ["User", "Ceruleanacg", "https://avatars3.githubusercontent.com/u/4054687?v=4", [["Personae", "https://github.com/Ceruleanacg/Personae", "\ud83d\udcc8 Personae is a repo of implements and environment of Deep Reinforcement Learning & Supervised Learning for Quantitative Trading.", 454, "Python"], ["Reinforcement-Learning", "https://github.com/Ceruleanacg/Reinforcement-Learning", "\ud83e\udd16 Implements of Reinforcement Learning algorithms.", 68, "Python"]]], ["User", "unnonouno", "https://avatars1.githubusercontent.com/u/740680?v=4", [["cudnnenv", "https://github.com/unnonouno/cudnnenv", null, 55, "Python"]]], ["User", "merkremont", "https://avatars2.githubusercontent.com/u/31154834?v=4", [["LineVodka", "https://github.com/merkremont/LineVodka", "May the Vodka be with you...", 89, "Python"], ["LineChivas", "https://github.com/merkremont/LineChivas", "May the Chivas be with you...", 43, "Python"]]], ["User", "aidiary", "https://avatars1.githubusercontent.com/u/719901?v=4", [["PRML", "https://github.com/aidiary/PRML", "PRML\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092Python\u3067\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0", 90, "Python"], ["keras-examples", "https://github.com/aidiary/keras-examples", "Keras\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0", 62, "Python"]]], ["User", "ikegami-yukino", "https://avatars3.githubusercontent.com/u/780831?v=4", [["neologdn", "https://github.com/ikegami-yukino/neologdn", "Japanese text normalizer for mecab-neologd", 49, "Python"]]], ["User", "shimizukawa", "https://avatars1.githubusercontent.com/u/151623?v=4", [["django-redshift-backend", "https://github.com/shimizukawa/django-redshift-backend", "Redshift database backend for Django", 41, "Python"]]], ["User", "soskek", "https://avatars3.githubusercontent.com/u/9245278?v=4", [["dynamic_routing_between_capsules", "https://github.com/soskek/dynamic_routing_between_capsules", "Implementation of Dynamic Routing Between Capsules, Sara Sabour, Nicholas Frosst, Geoffrey E Hinton, NIPS 2017", 182, "Python"], ["convolutional_seq2seq", "https://github.com/soskek/convolutional_seq2seq", "fairseq: Convolutional Sequence to Sequence Learning (Gehring et al. 2017) by Chainer", 42, "Python"]]], ["User", "CaiJiJi", "https://avatars0.githubusercontent.com/u/10561685?v=4", [["VulScritp", "https://github.com/CaiJiJi/VulScritp", "\u5185\u7f51\u6e17\u900f\u811a\u672c", 74, "Python"]]], ["User", "takuti", "https://avatars1.githubusercontent.com/u/853567?v=4", [["flurs", "https://github.com/takuti/flurs", ":ocean: FluRS: A Python library for streaming recommendation algorithms", 57, "Python"]]], ["User", "hvy", "https://avatars2.githubusercontent.com/u/5983694?v=4", [["chainer-visualization", "https://github.com/hvy/chainer-visualization", "Chainer implementation of the paper Visualizing and Understanding Convolutional Networks, 2013", 48, "Python"]]], ["User", "tkmru", "https://avatars3.githubusercontent.com/u/1628214?v=4", [["nao", "https://github.com/tkmru/nao", "Simple No-meaning Assembly Omitter for IDA Pro (CURRENTLY UNDER DEVELOPMENT)", 170, "Python"], ["pwn_collection", "https://github.com/tkmru/pwn_collection", "CTF & practice exploit collection", 41, "Python"]]], ["User", "tkamishima", "https://avatars0.githubusercontent.com/u/333861?v=4", [["mlmpy", "https://github.com/tkamishima/mlmpy", "Machine Learning Meets Python : A tutorial of NumPy / SciPy for machine learners who want to implement their own algotithms in Python (written in Japanese)", 90, "Python"]]], ["User", "hirokiky", "https://avatars1.githubusercontent.com/u/854049?v=4", [["django-reportmail", "https://github.com/hirokiky/django-reportmail", "Django library to send 'report' mail of django management command easily. ", 53, "Python"]]], ["User", "wellflat", "https://avatars1.githubusercontent.com/u/363364?v=4", []], ["User", "mokemokechicken", "https://avatars3.githubusercontent.com/u/606549?v=4", [["keras_npi", "https://github.com/mokemokechicken/keras_npi", "NPI(Neural Programmer-Interpreters) implementation with Keras", 212, "Python"]]], ["User", "cocuh", "https://avatars2.githubusercontent.com/u/1741999?v=4", []], ["User", "hanks", "https://avatars2.githubusercontent.com/u/759107?v=4", []], ["User", "mpenkov", "https://avatars2.githubusercontent.com/u/1101396?v=4", []], ["User", "leetenki", "https://avatars2.githubusercontent.com/u/5693644?v=4", [["YOLOv2", "https://github.com/leetenki/YOLOv2", "YOLOv2\u306echainer\u306e\u518d\u73fe\u5b9f\u88c5\u3067\u3059(darknet\u306echainer\u30ed\u30fc\u30c0\u3068\u3001\u5b8c\u5168\u306achainer\u4e0a\u3067\u306e\u8a13\u7df4\u30b3\u30fc\u30c9\u3092\u542b\u307f\u307e\u3059)", 282, "Python"]]], ["User", "mkouhei", "https://avatars3.githubusercontent.com/u/49910?v=4", []], ["User", "shiba24", "https://avatars3.githubusercontent.com/u/15135624?v=4", [["learning2rank", "https://github.com/shiba24/learning2rank", "Learning to rank with neuralnet - RankNet and ListNet", 153, "Python"], ["3d-unet", "https://github.com/shiba24/3d-unet", "Chainer implementations of 3D UNet", 81, "Python"], ["deep-learning-for-human-part-discovery-in-images", "https://github.com/shiba24/deep-learning-for-human-part-discovery-in-images", "Implementation with Chainer", 52, "Python"]]], ["User", "tk0miya", "https://avatars2.githubusercontent.com/u/748828?v=4", [["testing.postgresql", "https://github.com/tk0miya/testing.postgresql", null, 82, "Python"]]], ["User", "fujita", "https://avatars3.githubusercontent.com/u/726426?v=4", []], ["User", "yosida95", "https://avatars0.githubusercontent.com/u/767275?v=4", []], ["User", "rezoo", "https://avatars0.githubusercontent.com/u/212315?v=4", [["illustration2vec", "https://github.com/rezoo/illustration2vec", "A simple deep learning library for estimating a set of tags and extracting semantic feature vectors from given illustrations.", 335, "Python"]]], ["User", "OsciiArt", "https://avatars1.githubusercontent.com/u/24198071?v=4", [["DeepAA", "https://github.com/OsciiArt/DeepAA", "make ASCII Art by Deep Learning", 1025, "Python"]]], ["User", "lucidfrontier45", "https://avatars2.githubusercontent.com/u/655305?v=4", []], ["User", "Hiroshiba", "https://avatars0.githubusercontent.com/u/4987327?v=4", [["become-yukarin", "https://github.com/Hiroshiba/become-yukarin", "\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u529b\u3067\u7d50\u6708\u3086\u304b\u308a\u306e\u58f0\u306b\u306a\u308b\u30ea\u30dd\u30b8\u30c8\u30ea", 162, "Python"]]], ["User", "miyakogi", "https://avatars1.githubusercontent.com/u/3213998?v=4", [["pyppeteer", "https://github.com/miyakogi/pyppeteer", "Headless chrome/chromium automation library (unofficial port of puppeteer)", 632, "Python"]]], ["User", "laysakura", "https://avatars1.githubusercontent.com/u/498788?v=4", [["rainbow_logging_handler", "https://github.com/laysakura/rainbow_logging_handler", "Ultimate Python colorized logger - https://pypi.python.org/pypi/rainbow_logging_handler", 66, "Python"]]], ["User", "yukitsuji", "https://avatars1.githubusercontent.com/u/9513712?v=4", [["3D_CNN_tensorflow", "https://github.com/yukitsuji/3D_CNN_tensorflow", "KITTI data processing and 3D CNN for Vehicle Detection", 100, "Python"]]], ["User", "kfdm", "https://avatars0.githubusercontent.com/u/89725?v=4", [["gntp", "https://github.com/kfdm/gntp", "GNTP Python Library - #growl #gntp", 197, "Python"]]], ["User", "liaoziyang", "https://avatars0.githubusercontent.com/u/6022969?v=4", [["OpenIE-Spider", "https://github.com/liaoziyang/OpenIE-Spider", "Extract Information from web corpus using Open Information Extraction.", 178, "Python"], ["negapoji", "https://github.com/liaoziyang/negapoji", "Japanese negative positive classification.\u65e5\u672c\u8a9e\u6587\u66f8\u306e\u30cd\u30ac\u30dd\u30b8\u3092\u5224\u5b9a\u3002", 169, "Python"]]], ["User", "nutszebra", "https://avatars0.githubusercontent.com/u/10476902?v=4", [["neural_architecture_search_with_reinforcement_learning_appendix_a", "https://github.com/nutszebra/neural_architecture_search_with_reinforcement_learning_appendix_a", "Implementation of Appendix A (Neural Architecture Search with Reinforcement Learning: https://arxiv.org/abs/1611.01578) by chainer", 51, "Python"]]], ["User", "youzaka", "https://avatars2.githubusercontent.com/u/27234?v=4", [["ariblib", "https://github.com/youzaka/ariblib", "python implementation of arib-std-b10 and arib-stb-b24", 43, "Python"]]], ["User", "dsanno", "https://avatars0.githubusercontent.com/u/2349794?v=4", [["chainer-dfi", "https://github.com/dsanno/chainer-dfi", "Implementation of Deep Feature Interpolation", 52, "Python"], ["chainer-image-caption", "https://github.com/dsanno/chainer-image-caption", null, 41, "Python"]]], ["User", "13o-bbr-bbq", "https://avatars3.githubusercontent.com/u/12124329?v=4", [["machine_learning_security", "https://github.com/13o-bbr-bbq/machine_learning_security", "Source code about machine learning and security.", 156, "Python"]]], ["User", "yagays", "https://avatars1.githubusercontent.com/u/131779?v=4", [["pybitflyer", "https://github.com/yagays/pybitflyer", "Python wrapper for bitFlyer's REST API.", 127, "Python"]]], ["User", "nakagami", "https://avatars2.githubusercontent.com/u/415278?v=4", [["pyfirebirdsql", "https://github.com/nakagami/pyfirebirdsql", "Python DBAPI module for FirebirdSQL", 47, "Python"]]], ["User", "aonotas", "https://avatars3.githubusercontent.com/u/5954536?v=4", [["deep-crf", "https://github.com/aonotas/deep-crf", "An implementation of Conditional Random Fields (CRFs) with Deep Learning Method", 94, "Python"]]], ["User", "nya3jp", "https://avatars0.githubusercontent.com/u/118475?v=4", []], ["User", "MasazI", "https://avatars0.githubusercontent.com/u/10173988?v=4", [["cnn_depth_tensorflow", "https://github.com/MasazI/cnn_depth_tensorflow", "depth estimation using tensorflow", 53, "Python"]]], ["User", "dhgrs", "https://avatars2.githubusercontent.com/u/22191150?v=4", [["chainer-VQ-VAE", "https://github.com/dhgrs/chainer-VQ-VAE", "A Chainer implementation of VQ-VAE.", 51, "Python"]]], ["User", "doloopwhile", "https://avatars3.githubusercontent.com/u/1269088?v=4", [["PyExecJS", "https://github.com/doloopwhile/PyExecJS", "Run JavaScript code from Python (EOL: https://gist.github.com/doloopwhile/8c6ec7dd4703e8a44e559411cb2ea221)", 444, "Python"], ["Python-CoffeeScript", "https://github.com/doloopwhile/Python-CoffeeScript", "A bridge to the JS CoffeeScript compiler.", 79, "Python"]]], ["User", "levelfour", "https://avatars1.githubusercontent.com/u/3879440?v=4", [["machine-learning-2014", "https://github.com/levelfour/machine-learning-2014", "\u6a5f\u68b0\u5b66\u7fd2\u5206\u79d1\u4f1a for TSG2014 winter", 87, "Python"]]], ["User", "yukoba", "https://avatars3.githubusercontent.com/u/194666?v=4", [["CnnJapaneseCharacter", "https://github.com/yukoba/CnnJapaneseCharacter", null, 44, "Python"]]], ["User", "i2y", "https://avatars1.githubusercontent.com/u/6240399?v=4", [["mochi", "https://github.com/i2y/mochi", "Dynamically typed functional programming language", 880, "Python"]]], ["User", "jyapayne", "https://avatars0.githubusercontent.com/u/2645657?v=4", [["Web2Executable", "https://github.com/jyapayne/Web2Executable", "Uses NW.js to generate \"native\" apps for already existing web apps.", 776, "Python"], ["Electrify", "https://github.com/jyapayne/Electrify", "Create desktop web applications exported using Electron!", 52, "Python"]]], ["User", "thombashi", "https://avatars0.githubusercontent.com/u/15517661?v=4", [["sqlitebiter", "https://github.com/thombashi/sqlitebiter", "A CLI tool to convert CSV/Excel/HTML/JSON/LTSV/Markdown/SQLite/SSV/TSV/Google-Sheets to a SQLite database file.", 317, "Python"], ["tcconfig", "https://github.com/thombashi/tcconfig", "A simple tc command wrapper tool. Easy to setup traffic control of network bandwidth/latency/packet-loss/packet-corruption to network interfaces.", 280, "Python"], ["pytablewriter", "https://github.com/thombashi/pytablewriter", "A Python library to write a table in various formats: CSV / Elasticsearch / HTML / JavaScript / JSON / Jupyter Notebook / LaTeX / LTSV / Markdown / MediaWiki / NumPy / Excel / Pandas / Python / reStructuredText / SQLite / TOML / TSV.", 177, "Python"], ["SimpleSQLite", "https://github.com/thombashi/SimpleSQLite", "SimpleSQLite is a Python library to simplify SQLite database operations: table creation, data insertion and get data as other data formats.", 66, "Python"]]], ["User", "crftwr", "https://avatars1.githubusercontent.com/u/4488402?v=4", [["keyhac", "https://github.com/crftwr/keyhac", "python based key customization utility", 82, "Python"]]], ["User", "fukatani", "https://avatars0.githubusercontent.com/u/8858287?v=4", [["stacked_generalization", "https://github.com/fukatani/stacked_generalization", "Library for machine learning stacking generalization.", 71, "Python"]]], ["User", "hirofumi0810", "https://avatars0.githubusercontent.com/u/17924227?v=4", [["tensorflow_end2end_speech_recognition", "https://github.com/hirofumi0810/tensorflow_end2end_speech_recognition", "End-to-End speech recognition implementation base on TensorFlow (CTC, Attention, and MTL training)", 138, "Python"]]], ["User", "minorua", "https://avatars1.githubusercontent.com/u/2672095?v=4", [["Qgis2threejs", "https://github.com/minorua/Qgis2threejs", "[QGIS Plugin] Qgis2threejs plugin exports terrain data, map canvas image and vector data to your web browser.", 173, "Python"], ["TileLayerPlugin", "https://github.com/minorua/TileLayerPlugin", "[QGIS Plugin] add a web tile map as a layer onto your map canvas", 46, "Python"]]], ["User", "shirayu", "https://avatars2.githubusercontent.com/u/963961?v=4", []], ["User", "vpelletier", "https://avatars1.githubusercontent.com/u/191204?v=4", [["pprofile", "https://github.com/vpelletier/pprofile", "Line-granularity, thread-aware deterministic and statistic pure-python profiler", 158, "Python"], ["python-libusb1", "https://github.com/vpelletier/python-libusb1", "Python ctype-based wrapper around libusb1", 68, "Python"]]], ["User", "belltailjp", "https://avatars1.githubusercontent.com/u/403968?v=4", [["selective_search_py", "https://github.com/belltailjp/selective_search_py", "Python-based implementation of the Selective Search for Object Recognition.", 268, "Python"]]], ["User", "djour", "https://avatars0.githubusercontent.com/u/1555170?v=4", [["PyBRML", "https://github.com/djour/PyBRML", "Python Version of BRML toolbox for Bayesian Reasoning and Machine Learning", 121, "Python"]]], ["User", "timmahrt", "https://avatars3.githubusercontent.com/u/2650064?v=4", [["praatIO", "https://github.com/timmahrt/praatIO", "A python library for working with praat, textgrids, time aligned audio transcripts, and audio files. It is primarily used for extracting features from and making manipulations on audio files given hierarchical time-aligned transcriptions (utterance > word > syllable > phone, etc).", 44, "Python"]]], ["User", "knok", "https://avatars0.githubusercontent.com/u/1149984?v=4", [["rcnn-text-classification", "https://github.com/knok/rcnn-text-classification", "Recurrent Conventinal NN Text Classification for chainer", 112, "Python"]]], ["User", "naoto0804", "https://avatars0.githubusercontent.com/u/7067992?v=4", [["cross-domain-detection", "https://github.com/naoto0804/cross-domain-detection", "Codes and datasets for 'Cross-Domain Weakly-Supervised Object Detection through Progressive Domain Adaptation' [Inoue+, CVPR2018].", 50, "Python"]]], ["User", "mana-ysh", "https://avatars1.githubusercontent.com/u/10020107?v=4", [["knowledge-graph-embeddings", "https://github.com/mana-ysh/knowledge-graph-embeddings", "Implementations of Embedding-based methods for Knowledge Base Completion tasks", 85, "Python"]]], ["User", "qpSHiNqp", "https://avatars3.githubusercontent.com/u/1808432?v=4", []], ["User", "HirokiNakahara", "https://avatars0.githubusercontent.com/u/29356108?v=4", [["GUINNESS", "https://github.com/HirokiNakahara/GUINNESS", "GUINNESS: A GUI-based binarized deep Neural NEtwork SyntheSizer toward an FPGA", 105, "Python"]]], ["User", "mikeknapp", "https://avatars1.githubusercontent.com/u/103593?v=4", [["AppEngine-OAuth-Library", "https://github.com/mikeknapp/AppEngine-OAuth-Library", "An OAuth library for interacting with Twitter, MySpace, LinkedIn and Yahoo on AppEngine", 253, "Python"]]], ["User", "mumumu", "https://avatars2.githubusercontent.com/u/26536?v=4", [["pep8-ja", "https://github.com/mumumu/pep8-ja", "PEP8 \u65e5\u672c\u8a9e\u7248", 95, "Python"]]], ["User", "ZhenjianYang", "https://avatars3.githubusercontent.com/u/15570990?v=4", []], ["User", "cydonia999", "https://avatars3.githubusercontent.com/u/28708086?v=4", [["Tiny_Faces_in_Tensorflow", "https://github.com/cydonia999/Tiny_Faces_in_Tensorflow", "A Tensorflow Tiny Face Detector, implementing \"Finding Tiny Faces\"", 130, "Python"]]], ["User", "mkasa", "https://avatars2.githubusercontent.com/u/416897?v=4", []], ["User", "muellermichel", "https://avatars1.githubusercontent.com/u/3378634?v=4", [["Hybrid-Fortran", "https://github.com/muellermichel/Hybrid-Fortran", "Accelerate with CUDA, OpenACC and OpenMP - Unified and Performance Portable", 79, "Python"]]], ["User", "lyakaap", "https://avatars2.githubusercontent.com/u/27487010?v=4", [["Kaggle-Carvana-3rd-Place-Solution", "https://github.com/lyakaap/Kaggle-Carvana-3rd-Place-Solution", "3rd place solution ( Carvana Image Masking Challenge )", 73, "Python"]]], ["User", "ks888", "https://avatars2.githubusercontent.com/u/8448120?v=4", [["ansible-playbook-debugger", "https://github.com/ks888/ansible-playbook-debugger", "A Debugger for Ansible Playbook", 150, "Python"]]], ["User", "hayatoy", "https://avatars3.githubusercontent.com/u/9626345?v=4", [["cloudml-magic", "https://github.com/hayatoy/cloudml-magic", "Jupyter Notebook Magics for Google Cloud ML Engine", 42, "Python"]]], ["User", "hitoshin", "https://avatars3.githubusercontent.com/u/8057806?v=4", [["shuca", "https://github.com/hitoshin/shuca", "An open source automatic summarization tool.", 55, "Python"]]], ["User", "ikki407", "https://avatars3.githubusercontent.com/u/7960870?v=4", [["stacking", "https://github.com/ikki407/stacking", "Stacked Generalization (Ensemble Learning)", 68, "Python"]]], ["User", "nothingcosmos", "https://avatars0.githubusercontent.com/u/1210434?v=4", []], ["User", "fujiyuu75", "https://avatars3.githubusercontent.com/u/4550545?v=4", []], ["User", "anitan0925", "https://avatars3.githubusercontent.com/u/14343465?v=4", [["vaegan", "https://github.com/anitan0925/vaegan", "An implementation of VAEGAN (variational autoencoder + generative adversarial network).", 56, "Python"]]], ["User", "ynqa", "https://avatars0.githubusercontent.com/u/6745370?v=4", []], ["User", "philipperemy", "https://avatars1.githubusercontent.com/u/4516927?v=4", [["tensorflow-1.4-billion-password-analysis", "https://github.com/philipperemy/tensorflow-1.4-billion-password-analysis", "Deep Learning model to analyze a large corpus of clear text passwords.", 734, "Python"], ["keras-attention-mechanism", "https://github.com/philipperemy/keras-attention-mechanism", "Attention mechanism Implementation for Keras.", 684, "Python"], ["deep-learning-bitcoin", "https://github.com/philipperemy/deep-learning-bitcoin", "Exploiting Bitcoin prices patterns with Deep Learning.", 291, "Python"], ["keras-visualize-activations", "https://github.com/philipperemy/keras-visualize-activations", "Activation Maps Visualisation for Keras.", 206, "Python"], ["Deep-Learning-Tinder", "https://github.com/philipperemy/Deep-Learning-Tinder", "Simple Tinder algorithm able to swipe left and right based on the recommendations of a pre-trained deep neural network (Machine Learning).", 142, "Python"], ["deep-speaker", "https://github.com/philipperemy/deep-speaker", "Deep Speaker: an End-to-End Neural Speaker Embedding System https://arxiv.org/pdf/1705.02304.pdf", 114, "Python"], ["Reuters-full-data-set", "https://github.com/philipperemy/Reuters-full-data-set", "Full dataset of Reuters composed of 8,551,441 news titles, links and timestamps (Jan 2007 - Aug 2016). Generate your own up to today!", 112, "Python"], ["Stanford-OpenIE-Python", "https://github.com/philipperemy/Stanford-OpenIE-Python", "Stanford Open Information Extraction - Python Wrapper", 91, "Python"], ["tensorflow-ctc-speech-recognition", "https://github.com/philipperemy/tensorflow-ctc-speech-recognition", "Application of Connectionist Temporal Classification (CTC) for Speech Recognition (Tensorflow 1.0).", 65, "Python"], ["tensorflow-class-activation-mapping", "https://github.com/philipperemy/tensorflow-class-activation-mapping", "Learning Deep Features for Discriminative Localization (2016)", 50, "Python"], ["my-first-bitcoin-miner", "https://github.com/philipperemy/my-first-bitcoin-miner", "For the curious minds who want to understand how Bitcoin Blockchain works!", 45, "Python"], ["keras-tcn", "https://github.com/philipperemy/keras-tcn", "Keras Temporal Convolutional Network.", 42, "Python"]]], ["User", "dblN", "https://avatars2.githubusercontent.com/u/10726958?v=4", [["stochastic_depth_keras", "https://github.com/dblN/stochastic_depth_keras", "Keras implementation for \"Deep Networks with Stochastic Depth\" http://arxiv.org/abs/1603.09382", 125, "Python"]]]]}