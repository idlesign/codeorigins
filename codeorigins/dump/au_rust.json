{"dt": "2020-03-06 16:07", "min_followers": 10, "min_stars": 15, "users": [["User", "brendanzab", "https://avatars3.githubusercontent.com/u/695077?v=4", [["gl-rs", "https://github.com/brendanzab/gl-rs", "An OpenGL function pointer loader for Rust", 460, "Rust"], ["codespan", "https://github.com/brendanzab/codespan", "Utilities for dealing with source code locations and pretty diagnostic formatting", 163, "Rust"], ["rust-nbe-for-mltt", "https://github.com/brendanzab/rust-nbe-for-mltt", "Normalization by evaluation for Martin-L\u00f6f Type Theory with dependent records", 66, "Rust"], ["approx", "https://github.com/brendanzab/approx", "Approximate floating point equality comparisons and assertions", 65, "Rust"], ["algebra", "https://github.com/brendanzab/algebra", "Abstract algebra for Rust (still very much a WIP!)", 54, "Rust"], ["color-rs", "https://github.com/brendanzab/color-rs", "A library that provides types and conversions for working with various color formats.", 43, "Rust"], ["moniker", "https://github.com/brendanzab/moniker", "Automagical variable binding library for Rust", 39, "Rust"], ["chronicle", "https://github.com/brendanzab/chronicle", "An event sourced CQRS framework for Rust", 34, "Rust"], ["open.gl-tutorials", "https://github.com/brendanzab/open.gl-tutorials", "DEPRECATED", 17, "Rust"]]], ["User", "upsuper", "https://avatars3.githubusercontent.com/u/333750?v=4", [["rust-cheatsheet", "https://github.com/upsuper/rust-cheatsheet", "A type-based Rust cheatsheet", 178, "Rust"], ["custom-derive-2019", "https://github.com/upsuper/custom-derive-2019", null, 30, "Rust"], ["telegram-rustevalbot", "https://github.com/upsuper/telegram-rustevalbot", "Telegram bot for Rust group", 25, "Rust"], ["default-boxed", "https://github.com/upsuper/default-boxed", "Helper trait to create a boxed instance without going through stack", 21, "Rust"]]], ["User", "huonw", "https://avatars1.githubusercontent.com/u/1203825?v=4", [["simple_parallel", "https://github.com/huonw/simple_parallel", "Straight-forward functions and types for basic data parallel operations.", 87, "Rust"], ["simd", "https://github.com/huonw/simd", "[DEPRECATED] see:", 82, "Rust"], ["primal", "https://github.com/huonw/primal", "primal puts raw power into prime numbers.", 57, "Rust"], ["brainfuck_macros", "https://github.com/huonw/brainfuck_macros", "A brainfuck procedural macro for Rust", 56, "Rust"], ["external_mixin", "https://github.com/huonw/external_mixin", "Put a program in your program, so you can program while you program.", 42, "Rust"], ["rust-malloc", "https://github.com/huonw/rust-malloc", "A pure Rust memory allocator", 30, "Rust"], ["llvmint", "https://github.com/huonw/llvmint", null, 23, "Rust"], ["unsafe_ls", "https://github.com/huonw/unsafe_ls", "List unsafe blocks and their unsafe actions in Rust crates", 20, "Rust"], ["compile_msg", "https://github.com/huonw/compile_msg", "Compile-time user-defined diagnostics", 19, "Rust"], ["spellck", "https://github.com/huonw/spellck", "A spell-checker for Rust code.", 16, "Rust"], ["cogset", "https://github.com/huonw/cogset", "Generic implementations of clustering algorithms.", 15, "Rust"]]], ["User", "chris-morgan", "https://avatars1.githubusercontent.com/u/392868?v=4", [["teepee", "https://github.com/chris-morgan/teepee", "Teepee, the Rust HTTP toolkit", 462, "Rust"], ["rust-http", "https://github.com/chris-morgan/rust-http", "Completely OBSOLETE Rust HTTP library (server and client)", 391, "Rust"], ["anymap", "https://github.com/chris-morgan/anymap", "A safe and convenient store for one value of each type", 134, "Rust"], ["mopa", "https://github.com/chris-morgan/mopa", "MOPA: My Own Personal Any. A macro to implement all the `Any` methods on your own trait.", 64, "Rust"]]], ["User", "wezm", "https://avatars1.githubusercontent.com/u/21787?v=4", [["titlecase", "https://github.com/wezm/titlecase", "A tool and Rust crate for making text title case", 55, "Rust"], ["linux-conf-au-2019-epaper-badge", "https://github.com/wezm/linux-conf-au-2019-epaper-badge", "My IoT badge for lca2019", 47, "Rust"], ["ssd1675", "https://github.com/wezm/ssd1675", "Rust driver for SSD1675 e-Paper display controller", 25, "Rust"]]], ["User", "thepowersgang", "https://avatars1.githubusercontent.com/u/955596?v=4", [["rust_os", "https://github.com/thepowersgang/rust_os", "An OS kernel written in rust. Non POSIX", 387, "Rust"], ["stack_dst-rs", "https://github.com/thepowersgang/stack_dst-rs", "Stack-allocated DSTs for rust (fixed capacity)", 17, "Rust"], ["rust-cc", "https://github.com/thepowersgang/rust-cc", "A C Compiler/Parser written in Rust", 17, "Rust"], ["va_list-rs", "https://github.com/thepowersgang/va_list-rs", "A rust implementation of the va_list type from `stdarg.h`", 15, "Rust"]]], ["User", "michaelsproul", "https://avatars1.githubusercontent.com/u/4452260?v=4", [["rust_radix_trie", "https://github.com/michaelsproul/rust_radix_trie", "Fast generic radix trie implemented in Rust", 87, "Rust"], ["aus_senate", "https://github.com/michaelsproul/aus_senate", "Implementation of the Australian senate voting algorithm", 25, "Rust"], ["rust_sequence_trie", "https://github.com/michaelsproul/rust_sequence_trie", "Ergonomic trie data structure", 19, "Rust"]]], ["User", "lambda-fairy", "https://avatars1.githubusercontent.com/u/1572323?v=4", [["maud", "https://github.com/lambda-fairy/maud", ":pencil: Compile-time HTML templates for Rust", 733, "Rust"], ["if_chain", "https://github.com/lambda-fairy/if_chain", "Macro for writing nested `if let` expressions", 74, "Rust"], ["rust-errno", "https://github.com/lambda-fairy/rust-errno", ":boom: Cross-platform interface to the `errno` variable", 20, "Rust"]]], ["User", "Michael-F-Bryan", "https://avatars2.githubusercontent.com/u/17380079?v=4", [["rust-ffi-guide", "https://github.com/Michael-F-Bryan/rust-ffi-guide", "A guide for doing FFI using Rust", 168, "Rust"], ["arcs", "https://github.com/Michael-F-Bryan/arcs", "A Rust CAD System", 111, "Rust"], ["mdbook-epub", "https://github.com/Michael-F-Bryan/mdbook-epub", "An experimental mdbook backend for creating EPUB documents.", 65, "Rust"], ["include_dir", "https://github.com/Michael-F-Bryan/include_dir", "The logical evolution of the include_str macro for embedding a directory tree into your binary.", 58, "Rust"], ["markedit", "https://github.com/Michael-F-Bryan/markedit", "A library for manipulating unstructured Markdown documents.", 33, "Rust"], ["mdbook-linkcheck", "https://github.com/Michael-F-Bryan/mdbook-linkcheck", "A backend for `mdbook` which will check your links for you.", 29, "Rust"], ["noise-gate", "https://github.com/Michael-F-Bryan/noise-gate", "A simple Noise Gate algorithm for splitting an audio stream into chunks based on volume/silence", 26, "Rust"], ["plugins_in_rust", "https://github.com/Michael-F-Bryan/plugins_in_rust", "Implementing plugins with dynamically loaded libraries and Rust", 26, "Rust"], ["adventures-in-motion-control", "https://github.com/Michael-F-Bryan/adventures-in-motion-control", "A realistic simulator for a 3D printer motion controller", 24, "Rust"], ["libsignal-protocol-rs", "https://github.com/Michael-F-Bryan/libsignal-protocol-rs", "A Rust interface to the Signal Protocol.", 20, "Rust"]]], ["User", "KodrAus", "https://avatars0.githubusercontent.com/u/6721458?v=4", [["rust-web-app", "https://github.com/KodrAus/rust-web-app", "An example Rust web application with a focus on module structure", 74, "Rust"], ["cargo-nuget", "https://github.com/KodrAus/cargo-nuget", "A tool for packaging Native Rust libs as Nuget nupkgs", 24, "Rust"], ["rust-ioc", "https://github.com/KodrAus/rust-ioc", "Playground for dependency injection in Rust", 24, "Rust"]]], ["User", "robinst", "https://avatars1.githubusercontent.com/u/16778?v=4", [["linkify", "https://github.com/robinst/linkify", "Rust library to find links such as URLs and email addresses in plain text, handling surrounding punctuation correctly", 48, "Rust"]]], ["User", "Firstyear", "https://avatars1.githubusercontent.com/u/271005?v=4", [["webauthn-rs", "https://github.com/Firstyear/webauthn-rs", "An implementation of webauthn components for Rustlang servers", 37, "Rust"], ["concread", "https://github.com/Firstyear/concread", "Concurrently Readable Data Structures for Rust", 25, "Rust"]]], ["User", "nnethercote", "https://avatars1.githubusercontent.com/u/1940286?v=4", [["counts", "https://github.com/nnethercote/counts", "A tool for ad hoc profiling", 31, "Rust"]]], ["User", "canndrew", "https://avatars3.githubusercontent.com/u/5555066?v=4", [["netsim", "https://github.com/canndrew/netsim", "Network simulation in Rust", 61, "Rust"], ["error_def", "https://github.com/canndrew/error_def", "Rust syntax extension for generating error-handling boilerplate code.", 17, "Rust"], ["unwrap", "https://github.com/canndrew/unwrap", "unwrap! macro for Rust", 16, "Rust"]]], ["User", "rukai", "https://avatars0.githubusercontent.com/u/5120858?v=4", [["PF_Sandbox", "https://github.com/rukai/PF_Sandbox", "A platform fighter sandbox featuring a character editor tightly integrated with gameplay.", 37, "Rust"], ["vulkano-text", "https://github.com/rukai/vulkano-text", "Render text with the DejaVu font using the Vulkano library.", 26, "Rust"]]], ["User", "quadrupleslap", "https://avatars3.githubusercontent.com/u/6666547?v=4", [["scrap", "https://github.com/quadrupleslap/scrap", "\ud83d\udcf8 Screen capture made easy!", 180, "Rust"], ["srs", "https://github.com/quadrupleslap/srs", "A WebM screen recorder.", 49, "Rust"], ["x264", "https://github.com/quadrupleslap/x264", "\ud83c\udfa5 A safe x264 wrapper for Rust.", 18, "Rust"], ["badlog", "https://github.com/quadrupleslap/badlog", "\ud83d\udc98 A logging style that is subjectively nice.", 18, "Rust"]]], ["User", "simon-whitehead", "https://avatars0.githubusercontent.com/u/2499070?v=4", [["hakka", "https://github.com/simon-whitehead/hakka", "A game where each level requires a bit of hacking.", 65, "Rust"], ["tetrs", "https://github.com/simon-whitehead/tetrs", "Tetris, written in Rust.", 22, "Rust"]]], ["User", "thombles", "https://avatars0.githubusercontent.com/u/5511175?v=4", [["ax25-rs", "https://github.com/thombles/ax25-rs", "Utilities for Packet Radio in Rust. AX.25 encoding/decoding and radio interfacing.", 16, "Rust"]]], ["User", "ruscur", "https://avatars2.githubusercontent.com/u/5637090?v=4", [["snowpatch", "https://github.com/ruscur/snowpatch", "Enabling continuous integration for patch-based development workflows.", 51, "Rust"]]], ["User", "jeffparsons", "https://avatars2.githubusercontent.com/u/321861?v=4", [["planetkit", "https://github.com/jeffparsons/planetkit", "Colorful blobs that might one day resemble planets", 68, "Rust"]]]]}