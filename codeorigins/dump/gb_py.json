{"dt": "2020-03-06 15:37", "min_followers": 10, "min_stars": 77, "users": [["User", "tomchristie", "https://avatars2.githubusercontent.com/u/647359?v=4", [["django-vanilla-views", "https://github.com/tomchristie/django-vanilla-views", "Beautifully simple class-based views.", 799, "Python"]]], ["User", "benanne", "https://avatars0.githubusercontent.com/u/43829?v=4", [["kaggle-ndsb", "https://github.com/benanne/kaggle-ndsb", "Winning solution for the National Data Science Bowl competition on Kaggle (plankton classification)", 563, "Python"], ["kaggle-galaxies", "https://github.com/benanne/kaggle-galaxies", "Winning solution for the Galaxy Challenge on Kaggle (http://www.kaggle.com/c/galaxy-zoo-the-galaxy-challenge)", 473, "Python"], ["morb", "https://github.com/benanne/morb", "Modular Restricted Boltzmann Machine (RBM) implementation using Theano", 178, "Python"]]], ["User", "wkentaro", "https://avatars2.githubusercontent.com/u/4310419?v=4", [["labelme", "https://github.com/wkentaro/labelme", "Image Polygonal Annotation with Python (polygon, rectangle, circle, line, point and image-level flag annotation).", 4204, "Python"], ["pytorch-fcn", "https://github.com/wkentaro/pytorch-fcn", "PyTorch Implementation of Fully Convolutional Networks. (Training code to reproduce the original result is available.)", 1057, "Python"], ["pytorch-for-numpy-users", "https://github.com/wkentaro/pytorch-for-numpy-users", "PyTorch for Numpy users.", 438, "Python"], ["gdown", "https://github.com/wkentaro/gdown", "Download a large file from Google Drive  (curl/wget fails because of the security notice).", 309, "Python"], ["fcn", "https://github.com/wkentaro/fcn", "Chainer Implementation of Fully Convolutional Networks. (Training code to reproduce the original result is available.)", 199, "Python"]]], ["User", "heynemann", "https://avatars2.githubusercontent.com/u/60965?v=4", [["r3", "https://github.com/heynemann/r3", "r\u00b3 is a map-reduce engine written in python using redis as a backend", 352, "Python"], ["pyccuracy", "https://github.com/heynemann/pyccuracy", "Pyccuracy is a BDD-style Web Acceptance Testing framework in Python.", 231, "Python"], ["motorengine", "https://github.com/heynemann/motorengine", "Motorengine is a port of MongoEngine for Tornado.", 165, "Python"], ["pynq", "https://github.com/heynemann/pynq", "Python implementation of Microsoft's .Net Language Integrated Query (LINQ)", 142, "Python"], ["pyvows", "https://github.com/heynemann/pyvows", "Python implementation of Vows.js", 135, "Python"]]], ["User", "ibab", "https://avatars1.githubusercontent.com/u/890531?v=4", [["tensorflow-wavenet", "https://github.com/ibab/tensorflow-wavenet", "A TensorFlow implementation of DeepMind's WaveNet paper", 4787, "Python"], ["python-mle", "https://github.com/ibab/python-mle", "A Python package for performing Maximum Likelihood Estimates", 91, "Python"]]], ["User", "random-robbie", "https://avatars1.githubusercontent.com/u/4902869?v=4", [["My-Shodan-Scripts", "https://github.com/random-robbie/My-Shodan-Scripts", "Collection of Scripts for shodan searching stuff.", 434, "Python"], ["Jira-Scan", "https://github.com/random-robbie/Jira-Scan", "CVE-2017-9506 - SSRF", 136, "Python"], ["cve-2020-0688", "https://github.com/random-robbie/cve-2020-0688", "cve-2020-0688", 129, "Python"]]], ["User", "bonzanini", "https://avatars1.githubusercontent.com/u/354100?v=4", [["Book-SocialMediaMiningPython", "https://github.com/bonzanini/Book-SocialMediaMiningPython", "Companion code for the book \"Mastering Social Media Mining with Python\"", 402, "Python"]]], ["User", "xpn", "https://avatars0.githubusercontent.com/u/173764?v=4", []], ["User", "ianozsvald", "https://avatars0.githubusercontent.com/u/273210?v=4", [["ipython_memory_usage", "https://github.com/ianozsvald/ipython_memory_usage", "IPython tool to report memory usage deltas for every command you type", 280, "Python"], ["EuroPython2011_HighPerformanceComputing", "https://github.com/ianozsvald/EuroPython2011_HighPerformanceComputing", "Code for High Performance Computing tutorial for EuroPython 2011", 99, "Python"]]], ["User", "abbot", "https://avatars1.githubusercontent.com/u/5857?v=4", []], ["User", "musalbas", "https://avatars2.githubusercontent.com/u/5038597?v=4", [["heartbleed-masstest", "https://github.com/musalbas/heartbleed-masstest", "Multi-threaded tool for scanning many hosts for CVE-2014-0160.", 569, "Python"], ["mcc-mnc-table", "https://github.com/musalbas/mcc-mnc-table", "Mobile Country Codes (MCC) and Mobile Network Codes (MNC) table in CSV, JSON and XML. Updated daily.", 280, "Python"]]], ["User", "waveform80", "https://avatars1.githubusercontent.com/u/1076190?v=4", [["picamera", "https://github.com/waveform80/picamera", "A pure Python interface to the Raspberry Pi camera module", 1167, "Python"]]], ["User", "KaiyangZhou", "https://avatars3.githubusercontent.com/u/22972972?v=4", [["deep-person-reid", "https://github.com/KaiyangZhou/deep-person-reid", "Torchreid: Deep learning person re-identification in PyTorch.", 1944, "Python"], ["pytorch-center-loss", "https://github.com/KaiyangZhou/pytorch-center-loss", "Pytorch implementation of Center Loss", 423, "Python"], ["pytorch-vsumm-reinforce", "https://github.com/KaiyangZhou/pytorch-vsumm-reinforce", "AAAI 2018 - Unsupervised video summarization with deep reinforcement learning (PyTorch)", 203, "Python"], ["vsumm-reinforce", "https://github.com/KaiyangZhou/vsumm-reinforce", "AAAI 2018 - Unsupervised video summarization with deep reinforcement learning (Theano)", 89, "Python"]]], ["User", "bashtage", "https://avatars3.githubusercontent.com/u/5585221?v=4", [["arch", "https://github.com/bashtage/arch", "ARCH models in Python", 461, "Python"], ["linearmodels", "https://github.com/bashtage/linearmodels", "Add linear models including instrumental variable and panel data models that are missing from statsmodels.", 252, "Python"]]], ["User", "jorgebastida", "https://avatars2.githubusercontent.com/u/159782?v=4", [["awslogs", "https://github.com/jorgebastida/awslogs", "AWS CloudWatch logs for Humans\u2122", 3329, "Python"], ["glue", "https://github.com/jorgebastida/glue", "Glue is a simple command line tool to generate CSS sprites", 2561, "Python"], ["gordon", "https://github.com/jorgebastida/gordon", "\u03bb Gordon is a tool to create, wire and deploy AWS Lambdas using CloudFormation", 2055, "Python"], ["django-dajaxice", "https://github.com/jorgebastida/django-dajaxice", "Easy to use AJAX library for django. dajaxice mains goal is to trivialize the asynchronous communication within the django server side code and your js code. It's an \"agnostic JS framework\" approach and focus on decoupling the presentation logic.", 407, "Python"], ["django-dajax", "https://github.com/jorgebastida/django-dajax", "Easy to use library to create asynchronous presentation logic with django and dajaxice", 357, "Python"]]], ["User", "j4mie", "https://avatars1.githubusercontent.com/u/6988?v=4", [["django-spurl", "https://github.com/j4mie/django-spurl", "A Django template library for manipulating URLs", 160, "Python"], ["sqlsite", "https://github.com/j4mie/sqlsite", "A tool for serving simple websites, JSON APIs and static files directly from a SQLite database", 138, "Python"], ["micromodels", "https://github.com/j4mie/micromodels", "Declarative dictionary-based model classes for Python", 100, "Python"]]], ["User", "rxwx", "https://avatars3.githubusercontent.com/u/2202542?v=4", [["CVE-2018-0802", "https://github.com/rxwx/CVE-2018-0802", "PoC Exploit for CVE-2018-0802 (and optionally CVE-2017-11882)", 256, "Python"], ["CVE-2017-8570", "https://github.com/rxwx/CVE-2017-8570", "Proof of Concept exploit for CVE-2017-8570", 169, "Python"]]], ["User", "the-raspberry-pi-guy", "https://avatars0.githubusercontent.com/u/5570173?v=4", [["skateboard", "https://github.com/the-raspberry-pi-guy/skateboard", "Code & info for my 30km/h Nintendo Wiimote-controlled DIY electric skateboard", 254, "Python"]]], ["User", "pythonanywhere", "https://avatars1.githubusercontent.com/u/181511?v=4", [["dirigible-spreadsheet", "https://github.com/pythonanywhere/dirigible-spreadsheet", "Dirigible, the Pythonic spreadsheet in your browser", 158, "Python"]]], ["User", "ZhengyaoJiang", "https://avatars2.githubusercontent.com/u/15139574?v=4", [["PGPortfolio", "https://github.com/ZhengyaoJiang/PGPortfolio", "PGPortfolio: Policy Gradient Portfolio, the source code of \"A Deep Reinforcement Learning Framework for the Financial Portfolio Management Problem\"(https://arxiv.org/pdf/1706.10059.pdf).", 1069, "Python"]]], ["User", "drvinceknight", "https://avatars2.githubusercontent.com/u/2131546?v=4", [["Nashpy", "https://github.com/drvinceknight/Nashpy", "A library for the computation of Nash equilibria in two player games", 111, "Python"]]], ["User", "Jonty", "https://avatars3.githubusercontent.com/u/1553?v=4", [["Idiocy", "https://github.com/Jonty/Idiocy", "Idiocy is a warning shot to people browsing the internet insecurely.", 156, "Python"]]], ["User", "peterjc", "https://avatars2.githubusercontent.com/u/63959?v=4", [["biopython_workshop", "https://github.com/peterjc/biopython_workshop", "A basic introduction to Biopython, intended for a classroom based workshop", 121, "Python"]]], ["User", "etianen", "https://avatars0.githubusercontent.com/u/148744?v=4", [["django-reversion", "https://github.com/etianen/django-reversion", "django-reversion is an extension to the Django web framework that provides version control for model instances.", 2370, "Python"], ["django-watson", "https://github.com/etianen/django-watson", "Full-text multi-table search application for Django. Easy to install and use, with good performance.", 791, "Python"], ["django-herokuapp", "https://github.com/etianen/django-herokuapp", "A set of utilities and a project template for running Django sites on Heroku.", 415, "Python"], ["django-s3-storage", "https://github.com/etianen/django-s3-storage", "Django Amazon S3 file storage.", 280, "Python"], ["django-python3-ldap", "https://github.com/etianen/django-python3-ldap", "Django LDAP user authentication backend for Python 3.", 256, "Python"], ["aiohttp-wsgi", "https://github.com/etianen/aiohttp-wsgi", "WSGI adapter for aiohttp.", 211, "Python"]]], ["User", "joke2k", "https://avatars0.githubusercontent.com/u/359076?v=4", [["faker", "https://github.com/joke2k/faker", "Faker is a Python package that generates fake data for you.", 9357, "Python"], ["django-environ", "https://github.com/joke2k/django-environ", "Django-environ allows you to utilize 12factor inspired environment variables to configure your Django application.", 1727, "Python"], ["django-faker", "https://github.com/joke2k/django-faker", "Django-faker uses fake-factory to generate test data for Django models and templates", 215, "Python"]]], ["User", "d0ugal", "https://avatars3.githubusercontent.com/u/48211?v=4", []], ["User", "gkbrk", "https://avatars0.githubusercontent.com/u/3153378?v=4", [["slowloris", "https://github.com/gkbrk/slowloris", "Low bandwidth DoS tool. Slowloris rewrite in Python.", 839, "Python"], ["python-jvm-interpreter", "https://github.com/gkbrk/python-jvm-interpreter", "Java Virtual Machine implementation in Python", 208, "Python"]]], ["User", "gasman", "https://avatars2.githubusercontent.com/u/85097?v=4", []], ["User", "ryanrhymes", "https://avatars1.githubusercontent.com/u/1721505?v=4", [["panns", "https://github.com/ryanrhymes/panns", "Python Approximate Nearest Neighbor Search in very high dimensional spaces with optimised indexing.", 196, "Python"]]], ["User", "matthew-brett", "https://avatars2.githubusercontent.com/u/67612?v=4", [["transforms3d", "https://github.com/matthew-brett/transforms3d", "3 dimensional spatial transformations", 221, "Python"], ["delocate", "https://github.com/matthew-brett/delocate", "Find and copy needed dynamic libraries into python wheels", 92, "Python"]]], ["User", "robertmartin8", "https://avatars3.githubusercontent.com/u/11792905?v=4", [["PyPortfolioOpt", "https://github.com/robertmartin8/PyPortfolioOpt", "Financial portfolio optimisation in python, including classical efficient frontier and advanced methods.", 793, "Python"], ["MachineLearningStocks", "https://github.com/robertmartin8/MachineLearningStocks", "Using python and scikit-learn to make stock predictions", 550, "Python"]]], ["User", "idmillington", "https://avatars1.githubusercontent.com/u/109470?v=4", []], ["User", "robmarkcole", "https://avatars2.githubusercontent.com/u/11855322?v=4", [["Hue-sensors-HASS", "https://github.com/robmarkcole/Hue-sensors-HASS", "Custom integration for Hue motion sensors & remotes with Home Assistant", 334, "Python"], ["HASS-Deepstack-object", "https://github.com/robmarkcole/HASS-Deepstack-object", "Home Assistant custom component for using Deepstack object detection", 111, "Python"]]], ["User", "tomlepaine", "https://avatars1.githubusercontent.com/u/5413598?v=4", [["fast-wavenet", "https://github.com/tomlepaine/fast-wavenet", "Speedy Wavenet generation using dynamic programming :zap:", 1594, "Python"]]], ["User", "peterhinch", "https://avatars3.githubusercontent.com/u/8437477?v=4", [["micropython-async", "https://github.com/peterhinch/micropython-async", "Application of uasyncio to hardware interfaces. Tutorial and code.", 244, "Python"], ["micropython-samples", "https://github.com/peterhinch/micropython-samples", "Assorted code ideas", 128, "Python"], ["micropython-mqtt", "https://github.com/peterhinch/micropython-mqtt", "A 'resilient' asynchronous MQTT driver. Plus a means of using an ESP8266 to bring MQTT to non-networked targets.", 126, "Python"], ["micropython-font-to-py", "https://github.com/peterhinch/micropython-font-to-py", "A Python 3 utility to convert fonts to Python source capable of being frozen as bytecode", 91, "Python"]]], ["User", "karlicoss", "https://avatars0.githubusercontent.com/u/291333?v=4", [["cachew", "https://github.com/karlicoss/cachew", "Transparent and persistent cache/serialization powered by type hints", 108, "Python"]]], ["User", "adamgreig", "https://avatars2.githubusercontent.com/u/47219?v=4", [["agg-kicad", "https://github.com/adamgreig/agg-kicad", "KiCAD libraries, footprints, and scripts", 115, "Python"]]], ["User", "martinohanlon", "https://avatars3.githubusercontent.com/u/2329501?v=4", [["mcpi", "https://github.com/martinohanlon/mcpi", "Minecraft: Pi Edition API Python Library", 86, "Python"]]], ["User", "ltratt", "https://avatars1.githubusercontent.com/u/20318?v=4", []], ["User", "enovella", "https://avatars3.githubusercontent.com/u/14809754?v=4", []], ["User", "krallin", "https://avatars1.githubusercontent.com/u/1737686?v=4", []], ["User", "Meatballs1", "https://avatars2.githubusercontent.com/u/1854557?v=4", [["burp-extensions", "https://github.com/Meatballs1/burp-extensions", "Burp Suite Extensions", 120, "Python"]]], ["User", "inclement", "https://avatars3.githubusercontent.com/u/1265819?v=4", [["kivycrashcourse", "https://github.com/inclement/kivycrashcourse", "The programming material from my kivy crash course youtube series.", 242, "Python"], ["Pyonic-interpreter", "https://github.com/inclement/Pyonic-interpreter", "A Python interpreter for Android.", 81, "Python"]]], ["User", "vitorbaptista", "https://avatars1.githubusercontent.com/u/76945?v=4", []], ["User", "JukkaL", "https://avatars2.githubusercontent.com/u/1107911?v=4", []], ["User", "kwotsin", "https://avatars2.githubusercontent.com/u/11178344?v=4", [["TensorFlow-ENet", "https://github.com/kwotsin/TensorFlow-ENet", "TensorFlow implementation of ENet", 229, "Python"], ["transfer_learning_tutorial", "https://github.com/kwotsin/transfer_learning_tutorial", "A guide to transfer learning with inception-resnet-v2.", 223, "Python"], ["TensorFlow-Xception", "https://github.com/kwotsin/TensorFlow-Xception", "TensorFlow implementation of the Xception Model by Fran\u00e7ois Chollet", 176, "Python"], ["create_tfrecords", "https://github.com/kwotsin/create_tfrecords", "A simpler way of preparing large-scale image dataset by generalizing functions from TensorFlow-slim", 129, "Python"]]], ["User", "jeanphix", "https://avatars0.githubusercontent.com/u/252119?v=4", [["Ghost.py", "https://github.com/jeanphix/Ghost.py", "Webkit based scriptable web browser for python. ", 2742, "Python"], ["Flask-Dashed", "https://github.com/jeanphix/Flask-Dashed", "Provides simple but efficient admin UI. ", 129, "Python"]]], ["User", "gdanezis", "https://avatars1.githubusercontent.com/u/4999882?v=4", [["petlib", "https://github.com/gdanezis/petlib", "A python library that implements a number of Privacy Enhancing Technolgies", 92, "Python"]]], ["User", "jbornschein", "https://avatars3.githubusercontent.com/u/241247?v=4", [["mpi4py-examples", "https://github.com/jbornschein/mpi4py-examples", "mpi4py examples", 279, "Python"]]], ["User", "codebox", "https://avatars2.githubusercontent.com/u/615829?v=4", [["mosaic", "https://github.com/codebox/mosaic", "Python script for creating photomosaic images", 253, "Python"], ["image_augmentor", "https://github.com/codebox/image_augmentor", "Data augmentation tool for images", 247, "Python"], ["markov-text", "https://github.com/codebox/markov-text", "Python utility that uses a Markov Chain to generate random sentences using a source text", 166, "Python"], ["reading-list-mover", "https://github.com/codebox/reading-list-mover", "A Python utility for moving bookmarks/reading lists between services", 155, "Python"], ["bayesian-classifier", "https://github.com/codebox/bayesian-classifier", "A Naive Bayesian Classifier written in Python", 94, "Python"]]], ["User", "lzrobots", "https://avatars0.githubusercontent.com/u/17752039?v=4", [["LearningToCompare_ZSL", "https://github.com/lzrobots/LearningToCompare_ZSL", "PyTorch code for CVPR 2018 paper: Learning to Compare: Relation Network for Few-Shot Learning  (Zero-Shot Learning part)", 213, "Python"], ["DeepEmbeddingModel_ZSL", "https://github.com/lzrobots/DeepEmbeddingModel_ZSL", "Tensorflow code for CVPR 2017 paper: Learning a Deep Embedding Model for Zero-Shot Learning", 147, "Python"]]], ["User", "dracos", "https://avatars0.githubusercontent.com/u/154364?v=4", []], ["User", "ideoforms", "https://avatars0.githubusercontent.com/u/302318?v=4", [["python-twitter-examples", "https://github.com/ideoforms/python-twitter-examples", "Examples of using Python for Twitter social data mining, using the python-twitter-tools framework.", 510, "Python"], ["pylive", "https://github.com/ideoforms/pylive", "Query and control Ableton Live from Python", 171, "Python"], ["isobar", "https://github.com/ideoforms/isobar", "A Python library for algorithmic composition by expressing and constructing musical patterns.", 152, "Python"]]], ["User", "robintw", "https://avatars1.githubusercontent.com/u/296686?v=4", [["Py6S", "https://github.com/robintw/Py6S", "A Python interface to the 6S Radiative Transfer Model", 83, "Python"]]], ["User", "samj1912", "https://avatars1.githubusercontent.com/u/16130816?v=4", [["fbrecog", "https://github.com/samj1912/fbrecog", "An unofficial python wrapper for the Facebook face recognition endpoint", 178, "Python"]]], ["User", "emilmont", "https://avatars2.githubusercontent.com/u/853727?v=4", [["Artificial-Intelligence-and-Machine-Learning", "https://github.com/emilmont/Artificial-Intelligence-and-Machine-Learning", "Algorithm implementations and homework solutions for the Stanford's online courses", 511, "Python"], ["pyStatParser", "https://github.com/emilmont/pyStatParser", "Simple Python Statistical Parser", 84, "Python"]]], ["User", "jmortega", "https://avatars2.githubusercontent.com/u/4352324?v=4", [["osint_tools_security_auditing", "https://github.com/jmortega/osint_tools_security_auditing", "osint_tools_security_auditing", 112, "Python"]]], ["User", "gpjt", "https://avatars2.githubusercontent.com/u/129702?v=4", [["webgl-lessons", "https://github.com/gpjt/webgl-lessons", "https://github.com/tparisi/webgl-lessons is now the officially maintained fork for this project", 1024, "Python"]]], ["User", "1stvamp", "https://avatars2.githubusercontent.com/u/35831?v=4", [["trequests", "https://github.com/1stvamp/trequests", "A Tornado async HTTP/HTTPS client adaptor for python-requests", 130, "Python"], ["hippybot", "https://github.com/1stvamp/hippybot", "Hipchat.com bot written in Python with a simple plugin API", 96, "Python"]]], ["User", "cdent", "https://avatars3.githubusercontent.com/u/34498?v=4", [["gabbi", "https://github.com/cdent/gabbi", "Declarative HTTP Testing for Python and anything else", 122, "Python"]]], ["User", "danfairs", "https://avatars3.githubusercontent.com/u/24726?v=4", [["django-lazysignup", "https://github.com/danfairs/django-lazysignup", "django-lazysignup is a package designed to allow users to interact with a site as if they were authenticated users, but without signing up. At any time,  they can convert their temporary user account to a real user account.", 374, "Python"]]], ["User", "ChrisCummins", "https://avatars1.githubusercontent.com/u/1636663?v=4", []], ["User", "eric-wieser", "https://avatars3.githubusercontent.com/u/425260?v=4", [["ros_numpy", "https://github.com/eric-wieser/ros_numpy", "Tools for converting ROS messages to and from numpy arrays", 95, "Python"]]], ["User", "tomdyson", "https://avatars0.githubusercontent.com/u/15543?v=4", []], ["User", "edbullen", "https://avatars0.githubusercontent.com/u/9626848?v=4", [["NLPBot", "https://github.com/edbullen/NLPBot", "Simple ChatBot introducing NLP and Machine Learning for Classification of Sentences", 81, "Python"]]], ["User", "willprice", "https://avatars1.githubusercontent.com/u/966205?v=4", [["python-omxplayer-wrapper", "https://github.com/willprice/python-omxplayer-wrapper", ":tv: Control OMXPlayer, the Raspberry Pi media player, from Python", 187, "Python"]]], ["User", "Fuyukai", "https://avatars1.githubusercontent.com/u/8783751?v=4", [["OWAPI", "https://github.com/Fuyukai/OWAPI", "Overwatch JSON API", 460, "Python"], ["Kyoukai", "https://github.com/Fuyukai/Kyoukai", "[OLD] A fully async web framework for Python3.5+ using asyncio", 315, "Python"]]], ["User", "ozan-oktay", "https://avatars2.githubusercontent.com/u/10244985?v=4", [["Attention-Gated-Networks", "https://github.com/ozan-oktay/Attention-Gated-Networks", "Use of Attention Gates in a Convolutional Neural Network / Medical Image Classification and Segmentation", 844, "Python"]]], ["User", "wetneb", "https://avatars1.githubusercontent.com/u/309908?v=4", [["opentapioca", "https://github.com/wetneb/opentapioca", "Entity linking system for Wikidata updated by your edits in real time", 87, "Python"]]], ["User", "reidrac", "https://avatars3.githubusercontent.com/u/120189?v=4", []], ["User", "k-han", "https://avatars2.githubusercontent.com/u/5249543?v=4", [["DTC", "https://github.com/k-han/DTC", "Learning to Discover Novel Visual Categories via Deep Transfer Clustering (ICCV 2019)", 93, "Python"]]], ["User", "casperdcl", "https://avatars0.githubusercontent.com/u/10780059?v=4", [["git-fame", "https://github.com/casperdcl/git-fame", "Pretty-print `git` repository collaborators sorted by contributions.", 116, "Python"]]], ["User", "danpalmer", "https://avatars0.githubusercontent.com/u/202400?v=4", []], ["User", "kynan", "https://avatars2.githubusercontent.com/u/346079?v=4", [["nbstripout", "https://github.com/kynan/nbstripout", "strip output from Jupyter and IPython notebooks", 560, "Python"]]], ["User", "lwolf", "https://avatars2.githubusercontent.com/u/6144353?v=4", []], ["User", "marekrei", "https://avatars2.githubusercontent.com/u/1030188?v=4", [["sequence-labeler", "https://github.com/marekrei/sequence-labeler", "Neural network sequence labeling model", 230, "Python"]]], ["User", "benhodgson", "https://avatars1.githubusercontent.com/u/1770?v=4", [["protobuf-to-dict", "https://github.com/benhodgson/protobuf-to-dict", "A small Python library for creating dicts from protocol buffers. Useful as an intermediate step before serialization (e.g. to JSON).", 171, "Python"]]], ["User", "rjw57", "https://avatars0.githubusercontent.com/u/146860?v=4", [["hdcp-genkey", "https://github.com/rjw57/hdcp-genkey", "Generate HDCP source and sink keys from the leaked master key", 89, "Python"], ["yt", "https://github.com/rjw57/yt", null, 84, "Python"]]], ["User", "jtyr", "https://avatars0.githubusercontent.com/u/3788909?v=4", []], ["User", "doismellburning", "https://avatars1.githubusercontent.com/u/817118?v=4", [["django12factor", "https://github.com/doismellburning/django12factor", "Making Django configuration more 12factor-y", 83, "Python"]]], ["User", "Zomboided", "https://avatars2.githubusercontent.com/u/17079525?v=4", [["service.vpn.manager", "https://github.com/Zomboided/service.vpn.manager", "VPN plugin for Kodi", 193, "Python"]]], ["User", "SeanHeelan", "https://avatars1.githubusercontent.com/u/1920339?v=4", []], ["User", "djm", "https://avatars3.githubusercontent.com/u/88744?v=4", [["python-scrapyd-api", "https://github.com/djm/python-scrapyd-api", "A Python wrapper for working with Scrapyd's API.", 217, "Python"]]], ["User", "marklit", "https://avatars0.githubusercontent.com/u/359316?v=4", [["whois", "https://github.com/marklit/whois", "Collects WHOIS details for every IPv4 netblock. Reports supported via Elasticsearch.", 81, "Python"]]], ["User", "michaeljones", "https://avatars0.githubusercontent.com/u/5390?v=4", [["breathe", "https://github.com/michaeljones/breathe", "ReStructuredText and Sphinx bridge to Doxygen", 431, "Python"], ["sphinx-to-github", "https://github.com/michaeljones/sphinx-to-github", "Sphinx extension & script to prepare Sphinx html output for github pages.", 100, "Python"]]], ["User", "PaulSonOfLars", "https://avatars3.githubusercontent.com/u/17353640?v=4", [["tgbot", "https://github.com/PaulSonOfLars/tgbot", "Modular telegram group management bot", 198, "Python"]]], ["User", "Pithikos", "https://avatars2.githubusercontent.com/u/400048?v=4", [["python-websocket-server", "https://github.com/Pithikos/python-websocket-server", "A simple fully working websocket-server in Python with no external dependencies", 570, "Python"]]], ["User", "patito", "https://avatars0.githubusercontent.com/u/396454?v=4", []], ["User", "paulnasca", "https://avatars1.githubusercontent.com/u/627128?v=4", [["paulstretch_python", "https://github.com/paulnasca/paulstretch_python", "Paulstretch python version", 358, "Python"]]], ["User", "willmcgugan", "https://avatars3.githubusercontent.com/u/554369?v=4", [["rich", "https://github.com/willmcgugan/rich", "Rich is a Python library for rich text and beautiful formatting in the terminal.", 686, "Python"]]], ["User", "dgorissen", "https://avatars2.githubusercontent.com/u/644951?v=4", [["pycel", "https://github.com/dgorissen/pycel", "A library for compiling excel spreadsheets to python code & visualizing them as a graph", 349, "Python"]]], ["User", "tarnfeld", "https://avatars0.githubusercontent.com/u/217279?v=4", []], ["User", "radiosilence", "https://avatars3.githubusercontent.com/u/65021?v=4", []], ["User", "vext01", "https://avatars2.githubusercontent.com/u/604955?v=4", []], ["User", "nicola-decao", "https://avatars0.githubusercontent.com/u/9703100?v=4", [["s-vae-pytorch", "https://github.com/nicola-decao/s-vae-pytorch", "Pytorch implementation of Hyperspherical Variational Auto-Encoders", 201, "Python"], ["s-vae-tf", "https://github.com/nicola-decao/s-vae-tf", "Tensorflow implementation of Hyperspherical Variational Auto-Encoders", 176, "Python"], ["MolGAN", "https://github.com/nicola-decao/MolGAN", "Tensorflow implementation of MolGAN: An implicit generative model for small molecular graphs (https://arxiv.org/abs/1805.11973)", 122, "Python"], ["BNAF", "https://github.com/nicola-decao/BNAF", "Pytorch implementation of Block Neural Autoregressive Flow (http://arxiv.org/abs/1904.04676)", 106, "Python"]]], ["User", "cedricbonhomme", "https://avatars0.githubusercontent.com/u/465400?v=4", [["Stegano", "https://github.com/cedricbonhomme/Stegano", "Stegano is a pure Python steganography module.", 273, "Python"], ["newspipe", "https://github.com/cedricbonhomme/newspipe", "Newspipe is a web-based news aggregator and reader.", 94, "Python"]]], ["User", "HandsomeHans", "https://avatars2.githubusercontent.com/u/26586545?v=4", [["SVM-classification-localization", "https://github.com/HandsomeHans/SVM-classification-localization", "HoG, PCA, PSO, Hard Negative Mining, Sliding Window, Edge Boxes, NMS", 106, "Python"]]], ["User", "TeaPearce", "https://avatars1.githubusercontent.com/u/25795223?v=4", [["precipitation-prediction-convLSTM-keras", "https://github.com/TeaPearce/precipitation-prediction-convLSTM-keras", "Convolutional LSTM neural network to extrapolate radar images, and predict rainfall - CIKM 2017 contest", 93, "Python"]]], ["User", "gzuidhof", "https://avatars3.githubusercontent.com/u/1039510?v=4", [["nn-transfer", "https://github.com/gzuidhof/nn-transfer", "Convert trained PyTorch models to Keras, and the other way around", 192, "Python"], ["luna16", "https://github.com/gzuidhof/luna16", "LUNA16 Lung Nodule Analysis - NWI-IMC037 Final Project ", 156, "Python"]]], ["User", "Svenito", "https://avatars1.githubusercontent.com/u/31278?v=4", [["exploit-pattern", "https://github.com/Svenito/exploit-pattern", "generate and search pattern string for exploit development ", 133, "Python"], ["usblock", "https://github.com/Svenito/usblock", "Lock and unlock your desktop using a USB stick as a key", 96, "Python"]]], ["User", "lsbardel", "https://avatars1.githubusercontent.com/u/144320?v=4", [["python-stdnet", "https://github.com/lsbardel/python-stdnet", "Object-data mapper and advanced query manager for non relational databases", 123, "Python"]]], ["User", "Yang7879", "https://avatars0.githubusercontent.com/u/31214093?v=4", [["3D-BoNet", "https://github.com/Yang7879/3D-BoNet", "3D-BoNet in Tensorflow (NeurIPS 2019, Spotlight)", 213, "Python"], ["3D-RecGAN", "https://github.com/Yang7879/3D-RecGAN", "3D-RecGAN in Tensorflow (ICCV Workshops 2017)", 103, "Python"]]], ["User", "quadrismegistus", "https://avatars0.githubusercontent.com/u/733853?v=4", [["prosodic", "https://github.com/quadrismegistus/prosodic", "Prosodic: a metrical-phonological parser, written in Python. For English and Finnish, with flexible language support.", 128, "Python"]]], ["User", "joerick", "https://avatars1.githubusercontent.com/u/1244307?v=4", [["pyinstrument", "https://github.com/joerick/pyinstrument", "\ud83d\udeb4 Call stack profiler for Python. Shows you why your code is slow!", 1490, "Python"], ["cibuildwheel", "https://github.com/joerick/cibuildwheel", "\ud83c\udfa1 Build Python wheels on CI with minimal configuration. ", 414, "Python"]]], ["User", "mishbahr", "https://avatars2.githubusercontent.com/u/1264089?v=4", [["django-users2", "https://github.com/mishbahr/django-users2", "Custom user model for django >=1.5 with support for multiple user types.", 205, "Python"], ["django-modeladmin-reorder", "https://github.com/mishbahr/django-modeladmin-reorder", "Custom ordering for the apps and models in the admin app.", 175, "Python"], ["djangocms-forms", "https://github.com/mishbahr/djangocms-forms", "The easiest and most flexible Django CMS Form builder \u2014 Create forms quickly without ever touching code. Every field type you may need is available within a simple drag and drop interface. ", 104, "Python"]]], ["User", "tomchadwin", "https://avatars0.githubusercontent.com/u/7840213?v=4", []], ["User", "yeraydiazdiaz", "https://avatars1.githubusercontent.com/u/6739793?v=4", [["asyncio-ftwpd", "https://github.com/yeraydiazdiaz/asyncio-ftwpd", "Code for the examples on my article in Medium AsyncIO for the Working Python Developer", 196, "Python"]]], ["User", "ticarpi", "https://avatars2.githubusercontent.com/u/19988419?v=4", [["jwt_tool", "https://github.com/ticarpi/jwt_tool", ":snake: A toolkit for testing, tweaking and cracking JSON Web Tokens", 998, "Python"]]], ["User", "Fizzadar", "https://avatars1.githubusercontent.com/u/1026154?v=4", [["pyinfra", "https://github.com/Fizzadar/pyinfra", "pyinfra automates infrastructure super fast at massive scale. It can be used for ad-hoc command execution, service deployment, configuration management and more.", 226, "Python"]]], ["User", "jamescasbon", "https://avatars3.githubusercontent.com/u/97495?v=4", [["pypackage", "https://github.com/jamescasbon/pypackage", "Ship virtualenvs as deb or rpm", 105, "Python"]]], ["User", "alzmcr", "https://avatars0.githubusercontent.com/u/4122640?v=4", [["allstate", "https://github.com/alzmcr/allstate", "Kaggle's Allstate Purchase Prediction Challenge", 83, "Python"]]], ["User", "thraxil", "https://avatars0.githubusercontent.com/u/7821?v=4", []], ["User", "mwhoffman", "https://avatars1.githubusercontent.com/u/1824561?v=4", [["pybo", "https://github.com/mwhoffman/pybo", "Python package for modular Bayesian optimization", 124, "Python"]]], ["User", "alessio", "https://avatars1.githubusercontent.com/u/229356?v=4", []], ["User", "palfrey", "https://avatars3.githubusercontent.com/u/38532?v=4", [["wharf", "https://github.com/palfrey/wharf", "Web UI for Dokku", 142, "Python"]]], ["User", "cleder", "https://avatars1.githubusercontent.com/u/1218010?v=4", [["fastkml", "https://github.com/cleder/fastkml", "Fast KML processing for python", 131, "Python"]]], ["User", "milesrichardson", "https://avatars2.githubusercontent.com/u/835921?v=4", [["ParsePy", "https://github.com/milesrichardson/ParsePy", "A relatively up-to-date fork of ParsePy, the Python wrapper for the Parse.com API. Originally maintained by @dgrtwo ", 490, "Python"]]], ["User", "lorenmt", "https://avatars1.githubusercontent.com/u/6267679?v=4", [["mtan", "https://github.com/lorenmt/mtan", "The implementation of \"End-to-End Multi-Task Learning with Attention\" [CVPR 2019].", 194, "Python"]]], ["User", "flennerhag", "https://avatars0.githubusercontent.com/u/19593480?v=4", [["mlens", "https://github.com/flennerhag/mlens", "ML-Ensemble \u2013 high performance ensemble learning", 591, "Python"]]], ["User", "TengdaHan", "https://avatars3.githubusercontent.com/u/17740581?v=4", [["DPC", "https://github.com/TengdaHan/DPC", "Video Representation Learning by Dense Predictive Coding", 127, "Python"]]], ["User", "stanislavkozlovski", "https://avatars1.githubusercontent.com/u/13639618?v=4", [["Red-Black-Tree", "https://github.com/stanislavkozlovski/Red-Black-Tree", "An extremely well tested and commented red black tree implementation. Worth a look if you are studying the material.", 117, "Python"]]], ["User", "mountainstorm", "https://avatars0.githubusercontent.com/u/1919087?v=4", [["MobileDevice", "https://github.com/mountainstorm/MobileDevice", "A python package, and command line tool, which wraps Apple's MobileDevice API - providing access to iOS devices.", 164, "Python"]]], ["User", "gmarkall", "https://avatars2.githubusercontent.com/u/535640?v=4", []], ["User", "johnbywater", "https://avatars3.githubusercontent.com/u/3607503?v=4", [["eventsourcing", "https://github.com/johnbywater/eventsourcing", "A library for event sourcing in Python.", 561, "Python"], ["quantdsl", "https://github.com/johnbywater/quantdsl", "Quant DSL", 164, "Python"]]], ["User", "JingqingZ", "https://avatars3.githubusercontent.com/u/6067093?v=4", [["BaiduTraffic", "https://github.com/JingqingZ/BaiduTraffic", "This repo includes introduction, code and dataset of our paper Deep Sequence Learning with Auxiliary Information for Traffic Prediction (KDD 2018).", 114, "Python"]]], ["User", "Sentimentron", "https://avatars3.githubusercontent.com/u/3706681?v=4", [["Dracula", "https://github.com/Sentimentron/Dracula", "A deep, LSTM-based part of speech tagger and sentiment analyser using character embeddings instead of words. Compatible with Theano and TensorFlow. Optimized for Twitter.", 88, "Python"]]], ["User", "faissaloo", "https://avatars1.githubusercontent.com/u/8840681?v=4", []], ["User", "will-rowe", "https://avatars1.githubusercontent.com/u/5321233?v=4", []], ["User", "andrewmichaelsmith", "https://avatars1.githubusercontent.com/u/686224?v=4", []], ["User", "kravietz", "https://avatars2.githubusercontent.com/u/616047?v=4", []], ["User", "ajcr", "https://avatars3.githubusercontent.com/u/6031088?v=4", [["rolling", "https://github.com/ajcr/rolling", "Computationally efficient rolling window iterators for Python (including sum, min/max, median and more...)", 131, "Python"]]], ["User", "thruflo", "https://avatars1.githubusercontent.com/u/60015?v=4", [["ntorque", "https://github.com/thruflo/ntorque", "Web hook task queue.", 96, "Python"]]], ["User", "EarToEarOak", "https://avatars3.githubusercontent.com/u/3195316?v=4", [["RTLSDR-Scanner", "https://github.com/EarToEarOak/RTLSDR-Scanner", "A cross platform Python frequency scanning GUI for the OsmoSDR rtl-sdr library", 486, "Python"]]], ["User", "bspaans", "https://avatars0.githubusercontent.com/u/47591?v=4", [["python-mingus", "https://github.com/bspaans/python-mingus", "Mingus is a music package for Python", 442, "Python"]]], ["User", "pablorecio", "https://avatars3.githubusercontent.com/u/168319?v=4", [["django-qrcode", "https://github.com/pablorecio/django-qrcode", "Simple django application to simplify the inclusion of QR codes", 91, "Python"]]], ["User", "mitchellrj", "https://avatars0.githubusercontent.com/u/147070?v=4", []], ["User", "chebyrash", "https://avatars1.githubusercontent.com/u/26906365?v=4", []], ["User", "puremourning", "https://avatars0.githubusercontent.com/u/10584846?v=4", [["vimspector", "https://github.com/puremourning/vimspector", "vimspector - A multi-language debugging system for Vim", 564, "Python"]]], ["User", "danielhomola", "https://avatars1.githubusercontent.com/u/5399803?v=4", [["mifs", "https://github.com/danielhomola/mifs", "Parallelized Mutual Information based Feature Selection module.", 144, "Python"]]], ["User", "lclarkmichalek", "https://avatars3.githubusercontent.com/u/78389?v=4", []], ["User", "EricSteinberger", "https://avatars0.githubusercontent.com/u/41548354?v=4", [["PokerRL", "https://github.com/EricSteinberger/PokerRL", "Framework for Multi-Agent Deep Reinforcement Learning in Poker", 113, "Python"], ["Deep-CFR", "https://github.com/EricSteinberger/Deep-CFR", "Scalable Implementation of Deep CFR and Single Deep CFR", 104, "Python"]]], ["User", "JustGlowing", "https://avatars2.githubusercontent.com/u/4929177?v=4", [["minisom", "https://github.com/JustGlowing/minisom", ":red_circle: MiniSom is a minimalistic implementation of the Self Organizing Maps", 478, "Python"]]], ["User", "wrboyce", "https://avatars2.githubusercontent.com/u/28401?v=4", []], ["User", "andyhd", "https://avatars3.githubusercontent.com/u/35194?v=4", []], ["User", "barneygale", "https://avatars0.githubusercontent.com/u/960340?v=4", [["quarry", "https://github.com/barneygale/quarry", "Python library that implements the Minecraft network protocol and data types", 135, "Python"]]], ["User", "samet-akcay", "https://avatars3.githubusercontent.com/u/17574420?v=4", [["ganomaly", "https://github.com/samet-akcay/ganomaly", "GANomaly: Semi-Supervised Anomaly Detection via Adversarial Training", 361, "Python"]]], ["User", "themiurgo", "https://avatars3.githubusercontent.com/u/920728?v=4", [["ratelim", "https://github.com/themiurgo/ratelim", "Makes it easy to respect rate limits.", 92, "Python"]]], ["User", "atgambardella", "https://avatars1.githubusercontent.com/u/1356657?v=4", [["pytorch-es", "https://github.com/atgambardella/pytorch-es", "Evolution Strategies in PyTorch", 292, "Python"]]], ["User", "jamespacileo", "https://avatars2.githubusercontent.com/u/608868?v=4", [["django-pure-pagination", "https://github.com/jamespacileo/django-pure-pagination", "Django pagination based upon the core pagination module", 662, "Python"]]], ["User", "RealOrangeOne", "https://avatars0.githubusercontent.com/u/6527489?v=4", []], ["User", "n30m1nd", "https://avatars2.githubusercontent.com/u/10390009?v=4", []], ["User", "KenT2", "https://avatars0.githubusercontent.com/u/1840231?v=4", [["pipresents-gapless", "https://github.com/KenT2/pipresents-gapless", "Pi Presents - Version 1.3 - The stable version of Pi Presents, a Multi-media Toolkit for Museums, Visitor Centres and more running on the Raspberry Pi https://pipresents.wordpress.com/", 147, "Python"], ["tboplayer", "https://github.com/KenT2/tboplayer", "Raspberry Pi. A GUI for OMXPlayer", 145, "Python"], ["pipresents-next", "https://github.com/KenT2/pipresents-next", "[pipresents-next] is now end of life; use [pipresents-gapless] ", 97, "Python"]]], ["User", "nmrksic", "https://avatars2.githubusercontent.com/u/6649998?v=4", [["neural-belief-tracker", "https://github.com/nmrksic/neural-belief-tracker", "Fully Statistical Neural Belief Tracker (Mrk\u0161i\u0107 and Vuli\u0107, ACL 2018)", 136, "Python"], ["counter-fitting", "https://github.com/nmrksic/counter-fitting", "Counter-fitting Word Vectors to Linguistic Constraints", 91, "Python"]]], ["User", "DRL", "https://avatars0.githubusercontent.com/u/167909?v=4", [["blobtools", "https://github.com/DRL/blobtools", "Modular command-line solution for visualisation, quality control and taxonomic partitioning of genome datasets", 92, "Python"]]], ["User", "FranGoitia", "https://avatars2.githubusercontent.com/u/7239429?v=4", [["basketball_reference", "https://github.com/FranGoitia/basketball_reference", "Basketball Reference Scraper", 97, "Python"]]], ["User", "juliettef", "https://avatars0.githubusercontent.com/u/1770233?v=4", []], ["User", "vdutor", "https://avatars2.githubusercontent.com/u/13780846?v=4", []], ["User", "stefanoborini", "https://avatars3.githubusercontent.com/u/132967?v=4", [["vai", "https://github.com/stefanoborini/vai", "Vai editor. A text based IDE similar to vim, in python.", 232, "Python"]]], ["User", "dmoisset", "https://avatars2.githubusercontent.com/u/200733?v=4", []], ["User", "bsipos", "https://avatars2.githubusercontent.com/u/17234927?v=4", []], ["User", "akashgit", "https://avatars3.githubusercontent.com/u/797056?v=4", [["autoencoding_vi_for_topic_models", "https://github.com/akashgit/autoencoding_vi_for_topic_models", "Tensorflow implementation for prodLDA and NVLDA.", 170, "Python"]]], ["User", "dariober", "https://avatars3.githubusercontent.com/u/6883382?v=4", []], ["User", "mental32", "https://avatars3.githubusercontent.com/u/27660514?v=4", [["spotify.py", "https://github.com/mental32/spotify.py", "\ud83c\udf10 API wrapper for Spotify \ud83c\udfb6", 92, "Python"]]], ["User", "ronin13", "https://avatars2.githubusercontent.com/u/271234?v=4", []], ["User", "richard-clifford", "https://avatars0.githubusercontent.com/u/818959?v=4", []], ["User", "Azelphur", "https://avatars0.githubusercontent.com/u/280694?v=4", [["pyPushBullet", "https://github.com/Azelphur/pyPushBullet", "Python library to interface with PushBullet", 166, "Python"]]], ["User", "eerkunt", "https://avatars1.githubusercontent.com/u/14179520?v=4", [["terraform-compliance", "https://github.com/eerkunt/terraform-compliance", "a lightweight, security focused, BDD test framework against terraform.", 503, "Python"]]], ["User", "mikerr", "https://avatars2.githubusercontent.com/u/2332907?v=4", []], ["User", "Frimkron", "https://avatars3.githubusercontent.com/u/46865?v=4", [["mud-pi", "https://github.com/Frimkron/mud-pi", "A simple MUD server in Python, for teaching purposes, which could be run on a Raspberry Pi", 150, "Python"]]], ["User", "jarvisteach", "https://avatars3.githubusercontent.com/u/13473435?v=4", [["appJar", "https://github.com/jarvisteach/appJar", "Simple Tkinter GUIs in Python", 507, "Python"]]], ["User", "tomwalker", "https://avatars1.githubusercontent.com/u/2348163?v=4", [["django_quiz", "https://github.com/tomwalker/django_quiz", "This is a configurable quiz app for Django.", 383, "Python"]]], ["User", "fasaxc", "https://avatars0.githubusercontent.com/u/469264?v=4", []], ["User", "txomon", "https://avatars3.githubusercontent.com/u/228250?v=4", []], ["User", "munhitsu", "https://avatars1.githubusercontent.com/u/18304?v=4", [["django-dowser", "https://github.com/munhitsu/django-dowser", "Django fork of amazing memory leaks tracking application for python wsgi - the Dowser", 85, "Python"]]], ["User", "tomturner", "https://avatars0.githubusercontent.com/u/1792640?v=4", [["django-tenants", "https://github.com/tomturner/django-tenants", "Django tenants using PostgreSQL Schemas", 451, "Python"]]], ["User", "oscarknagg", "https://avatars3.githubusercontent.com/u/20032640?v=4", [["few-shot", "https://github.com/oscarknagg/few-shot", "Repository for few-shot learning machine learning projects", 458, "Python"], ["voicemap", "https://github.com/oscarknagg/voicemap", "Identifying people from small audio fragments", 106, "Python"]]], ["User", "jameskermode", "https://avatars1.githubusercontent.com/u/1049932?v=4", [["f90wrap", "https://github.com/jameskermode/f90wrap", "F90 to Python interface generator with derived type support", 129, "Python"]]], ["User", "apeeyush", "https://avatars3.githubusercontent.com/u/4463373?v=4", [["machine-learning", "https://github.com/apeeyush/machine-learning", "Demonstrates data munging, analysis and visualization techniques", 125, "Python"]]], ["User", "davecliff", "https://avatars1.githubusercontent.com/u/2637659?v=4", [["BristolStockExchange", "https://github.com/davecliff/BristolStockExchange", "BSE is a simple minimal simulation of a limit order book financial exchange", 128, "Python"]]], ["User", "pbudzon", "https://avatars0.githubusercontent.com/u/1087886?v=4", []], ["User", "quentinsf", "https://avatars3.githubusercontent.com/u/56534?v=4", [["IMAPdedup", "https://github.com/quentinsf/IMAPdedup", "IMAP message de-duplicator", 176, "Python"], ["icsv2ledger", "https://github.com/quentinsf/icsv2ledger", "Interactive importing of CSV files to Ledger", 150, "Python"]]], ["User", "js850", "https://avatars2.githubusercontent.com/u/1587384?v=4", []], ["User", "gabrielcnr", "https://avatars2.githubusercontent.com/u/209902?v=4", [["pytest-datadir", "https://github.com/gabrielcnr/pytest-datadir", "pytest plugin for manipulating test data directories and files", 92, "Python"]]], ["User", "frankh", "https://avatars0.githubusercontent.com/u/2088870?v=4", []], ["User", "xdanaux", "https://avatars2.githubusercontent.com/u/2313025?v=4", [["fontawesome-latex", "https://github.com/xdanaux/fontawesome-latex", "LaTeX mappings for Font Awesome, the icons font", 156, "Python"]]], ["User", "LukeB42", "https://avatars3.githubusercontent.com/u/942331?v=4", [["Emissary", "https://github.com/LukeB42/Emissary", "A microservice for archiving the news.", 167, "Python"]]], ["User", "mjwestcott", "https://avatars1.githubusercontent.com/u/10656117?v=4", [["Goodrich", "https://github.com/mjwestcott/Goodrich", "The source code for 'Data Structures and Algorithms in Python' by Goodrich, Tamassia, Goldwasser", 136, "Python"]]], ["User", "jvkersch", "https://avatars2.githubusercontent.com/u/537559?v=4", [["pyconcorde", "https://github.com/jvkersch/pyconcorde", "Python wrapper around the Concorde TSP solver", 113, "Python"]]], ["User", "danielsamuels", "https://avatars0.githubusercontent.com/u/1781176?v=4", []], ["User", "expobrain", "https://avatars0.githubusercontent.com/u/2404909?v=4", []], ["User", "Tenzer", "https://avatars3.githubusercontent.com/u/68696?v=4", []], ["User", "mdinacci", "https://avatars3.githubusercontent.com/u/1949?v=4", []], ["User", "lwis", "https://avatars0.githubusercontent.com/u/873275?v=4", []], ["User", "ukBaz", "https://avatars0.githubusercontent.com/u/8608260?v=4", [["python-bluezero", "https://github.com/ukBaz/python-bluezero", "A simple Python interface to Bluez", 160, "Python"]]], ["User", "amiralansary", "https://avatars1.githubusercontent.com/u/15427429?v=4", [["rl-medical", "https://github.com/amiralansary/rl-medical", "Deep Reinforcement Learning (DRL) agents applied to medical images", 83, "Python"]]], ["User", "nrontsis", "https://avatars3.githubusercontent.com/u/4145552?v=4", [["PILCO", "https://github.com/nrontsis/PILCO", "Bayesian Reinforcement Learning in Tensorflow", 145, "Python"]]], ["User", "lilspikey", "https://avatars0.githubusercontent.com/u/130076?v=4", [["django-batch-select", "https://github.com/lilspikey/django-batch-select", "batch select many-to-many and one-to-many fields (to help avoid n+1 query problem)", 163, "Python"], ["django-background-task", "https://github.com/lilspikey/django-background-task", "A database-backed work queue for Django", 94, "Python"]]], ["User", "gingemonster", "https://avatars3.githubusercontent.com/u/703352?v=4", []], ["User", "sde1000", "https://avatars3.githubusercontent.com/u/815708?v=4", []], ["User", "fredley", "https://avatars3.githubusercontent.com/u/270631?v=4", [["play-pi", "https://github.com/fredley/play-pi", "A Google Play Music frontend for the Raspberry Pi", 218, "Python"]]], ["User", "lawsie", "https://avatars2.githubusercontent.com/u/5183697?v=4", [["guizero", "https://github.com/lawsie/guizero", "A Python 3 library to allow learners to quickly and easily create GUIs.", 147, "Python"]]], ["User", "aruiz", "https://avatars1.githubusercontent.com/u/2845?v=4", []], ["User", "PiStuffing", "https://avatars0.githubusercontent.com/u/5243903?v=4", [["Quadcopter", "https://github.com/PiStuffing/Quadcopter", "Autonomous Raspberry Pi, Raspian, Python, piDrone", 272, "Python"]]], ["User", "cpl", "https://avatars1.githubusercontent.com/u/17101435?v=4", []], ["User", "PaulKlinger", "https://avatars1.githubusercontent.com/u/373570?v=4", []], ["User", "jeanfeydy", "https://avatars2.githubusercontent.com/u/20405678?v=4", [["geomloss", "https://github.com/jeanfeydy/geomloss", "Geometric loss functions between point clouds, images and volumes", 164, "Python"]]], ["User", "jim-easterbrook", "https://avatars0.githubusercontent.com/u/1957023?v=4", [["pywws", "https://github.com/jim-easterbrook/pywws", "Python software for USB Wireless WeatherStations", 184, "Python"]]], ["User", "chrism2671", "https://avatars0.githubusercontent.com/u/456541?v=4", [["PyTrendFollow", "https://github.com/chrism2671/PyTrendFollow", "PyTrendFollow - systematic futures trading using trend following", 90, "Python"]]], ["User", "wjdp", "https://avatars2.githubusercontent.com/u/1690934?v=4", []], ["User", "MalphasWats", "https://avatars0.githubusercontent.com/u/1784827?v=4", []], ["User", "Chaffelson", "https://avatars0.githubusercontent.com/u/11668664?v=4", [["nipyapi", "https://github.com/Chaffelson/nipyapi", "A convenient Python wrapper for Apache NiFi", 132, "Python"]]], ["User", "marcofucci", "https://avatars3.githubusercontent.com/u/178865?v=4", [["cookiecutter-simple-django", "https://github.com/marcofucci/cookiecutter-simple-django", "A cookiecutter template for creating reusable Django projects quickly.", 103, "Python"]]], ["User", "Fiedzia", "https://avatars3.githubusercontent.com/u/240435?v=4", []], ["User", "plumdog", "https://avatars3.githubusercontent.com/u/2348591?v=4", [["flask_table", "https://github.com/plumdog/flask_table", "Because writing HTML is fiddly and all of your tables are basically the same", 140, "Python"]]], ["User", "ChristianPapathanasiou", "https://avatars1.githubusercontent.com/u/5354349?v=4", []], ["User", "lukebeer", "https://avatars1.githubusercontent.com/u/856417?v=4", []], ["User", "atomatt", "https://avatars3.githubusercontent.com/u/15058?v=4", []], ["User", "alastair-droop", "https://avatars2.githubusercontent.com/u/13238060?v=4", []], ["User", "psugand", "https://avatars2.githubusercontent.com/u/61191?v=4", []], ["User", "Wilm0r", "https://avatars2.githubusercontent.com/u/6828117?v=4", []], ["User", "apcode", "https://avatars2.githubusercontent.com/u/1490072?v=4", [["tensorflow_fasttext", "https://github.com/apcode/tensorflow_fasttext", "Simple embedding based text classifier inspired by fastText, implemented in tensorflow", 269, "Python"]]], ["User", "craigemery", "https://avatars1.githubusercontent.com/u/93501?v=4", [["vim-autotag", "https://github.com/craigemery/vim-autotag", "Automatically discover and \"properly\" update ctags files on save", 230, "Python"]]], ["User", "pasztorpisti", "https://avatars2.githubusercontent.com/u/1058990?v=4", []], ["User", "zeth", "https://avatars2.githubusercontent.com/u/945574?v=4", [["inputs", "https://github.com/zeth/inputs", "Cross-platform Python support for keyboards, mice and gamepads", 148, "Python"]]], ["User", "JamesRitchie", "https://avatars0.githubusercontent.com/u/1486689?v=4", [["scikit-rvm", "https://github.com/JamesRitchie/scikit-rvm", "Relevance Vector Machine implementation using the scikit-learn API.", 154, "Python"], ["django-rest-framework-expiring-tokens", "https://github.com/JamesRitchie/django-rest-framework-expiring-tokens", "Expiring Token Auth for Django Rest Framework", 99, "Python"]]], ["User", "ndenev", "https://avatars3.githubusercontent.com/u/782286?v=4", []], ["User", "Lattyware", "https://avatars3.githubusercontent.com/u/1239492?v=4", [["unrpa", "https://github.com/Lattyware/unrpa", "A program to extract files from the RPA archive format.", 245, "Python"]]], ["User", "cmstrickland", "https://avatars1.githubusercontent.com/u/963437?v=4", []], ["User", "paulbrodersen", "https://avatars3.githubusercontent.com/u/8046146?v=4", [["netgraph", "https://github.com/paulbrodersen/netgraph", "Drawing utilities for publication quality plots of networks", 194, "Python"]]], ["User", "andyrimmer", "https://avatars0.githubusercontent.com/u/3602104?v=4", [["Platypus", "https://github.com/andyrimmer/Platypus", "Platypus Variant Caller", 85, "Python"]]], ["User", "tpircher", "https://avatars2.githubusercontent.com/u/710231?v=4", [["pycrc", "https://github.com/tpircher/pycrc", "Free, easy to use Cyclic Redundancy Check (CRC) calculator and source code generator", 126, "Python"]]], ["User", "radiac", "https://avatars3.githubusercontent.com/u/241712?v=4", [["django-tagulous", "https://github.com/radiac/django-tagulous", "Fabulous Tagging for Django", 217, "Python"], ["django-yarr", "https://github.com/radiac/django-yarr", "A lightweight customisable RSS reader for Django.", 151, "Python"]]], ["User", "P403n1x87", "https://avatars1.githubusercontent.com/u/20231758?v=4", []], ["User", "kylekirkby", "https://avatars0.githubusercontent.com/u/4564433?v=4", []]]}