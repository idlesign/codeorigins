{"dt": "2018-05-27 12:46", "min_followers": 10, "min_stars": 37, "users": [["User", "tomchristie", "https://avatars2.githubusercontent.com/u/647359?v=4", [["django-vanilla-views", "https://github.com/tomchristie/django-vanilla-views", "Beautifully simple class-based views.", 708, "Python"], ["django-auto-api", "https://github.com/tomchristie/django-auto-api", "NO LONGER MAINTAINED", 63, "Python"], ["webdriverplus", "https://github.com/tomchristie/webdriverplus", "NO LONGER MAINTAINED", 62, "Python"], ["django-serializers", "https://github.com/tomchristie/django-serializers", "NO LONGER MAINTAINED", 43, "Python"]]], ["User", "andrewgodwin", "https://avatars1.githubusercontent.com/u/36182?v=4", [["channels-examples", "https://github.com/andrewgodwin/channels-examples", "Example projects using Django Channels", 708, "Python"], ["lastgraph", "https://github.com/andrewgodwin/lastgraph", "Archived code for LastGraph", 144, "Python"], ["lidartile", "https://github.com/andrewgodwin/lidartile", "Makes 3D printable terrain tiles from LIDAR data", 56, "Python"], ["urlman", "https://github.com/andrewgodwin/urlman", null, 49, "Python"], ["south2", "https://github.com/andrewgodwin/south2", "South 2: Backported django.db.migrations for older Django versions", 45, "Python"], ["twintubes", "https://github.com/andrewgodwin/twintubes", "The code behind A Series Of Twin Tubes", 43, "Python"]]], ["User", "benanne", "https://avatars0.githubusercontent.com/u/43829?v=4", [["kaggle-ndsb", "https://github.com/benanne/kaggle-ndsb", "Winning solution for the National Data Science Bowl competition on Kaggle (plankton classification)", 513, "Python"], ["kaggle-galaxies", "https://github.com/benanne/kaggle-galaxies", "Winning solution for the Galaxy Challenge on Kaggle (http://www.kaggle.com/c/galaxy-zoo-the-galaxy-challenge)", 434, "Python"], ["morb", "https://github.com/benanne/morb", "Modular Restricted Boltzmann Machine (RBM) implementation using Theano", 175, "Python"], ["theano_fftconv", "https://github.com/benanne/theano_fftconv", "Convolution op for Theano based on CuFFT using scikits.cuda", 45, "Python"]]], ["User", "bennuttall", "https://avatars2.githubusercontent.com/u/1609725?v=4", [["sense-hat-examples", "https://github.com/bennuttall/sense-hat-examples", "Example programs using the Sense HAT - particularly for the Astro Pi competition", 65, "Python"], ["python-intro", "https://github.com/bennuttall/python-intro", "A set of Python exercises led by hints in comments - suitable for beginner / intermediate level", 60, "Python"]]], ["User", "ibab", "https://avatars1.githubusercontent.com/u/890531?v=4", [["tensorflow-wavenet", "https://github.com/ibab/tensorflow-wavenet", "A TensorFlow implementation of DeepMind's WaveNet paper", 3646, "Python"], ["python-mle", "https://github.com/ibab/python-mle", "A Python package for performing Maximum Likelihood Estimates", 64, "Python"]]], ["User", "bayandin", "https://avatars3.githubusercontent.com/u/864213?v=4", [["devtools-proxy", "https://github.com/bayandin/devtools-proxy", "Proxy for Chrome DevTools. Fully compatible with Selenium and ChromeDriver", 46, "Python"]]], ["User", "abbot", "https://avatars1.githubusercontent.com/u/5857?v=4", []], ["User", "bonzanini", "https://avatars1.githubusercontent.com/u/354100?v=4", [["Book-SocialMediaMiningPython", "https://github.com/bonzanini/Book-SocialMediaMiningPython", "Companion code for the book \"Mastering Social Media Mining with Python\"", 284, "Python"], ["CheerMeApp-demo", "https://github.com/bonzanini/CheerMeApp-demo", "Small demo for a \"search-as-you-type\" app in AngularJS + Python/Flask + Elasticsearch", 55, "Python"]]], ["User", "bshillingford", "https://avatars1.githubusercontent.com/u/2326749?v=4", [["python-torchfile", "https://github.com/bshillingford/python-torchfile", "Deserialize torch-serialized objects from Python", 130, "Python"]]], ["User", "ianozsvald", "https://avatars0.githubusercontent.com/u/273210?v=4", [["ipython_memory_usage", "https://github.com/ianozsvald/ipython_memory_usage", "IPython tool to report memory usage deltas for every command you type", 190, "Python"], ["EuroPython2011_HighPerformanceComputing", "https://github.com/ianozsvald/EuroPython2011_HighPerformanceComputing", "Code for High Performance Computing tutorial for EuroPython 2011", 96, "Python"], ["featherweight_web_api", "https://github.com/ianozsvald/featherweight_web_api", "Featherweight web API provider for serving R&D methods as web functions", 64, "Python"], ["HighPerformancePython_PyCon2012", "https://github.com/ianozsvald/HighPerformancePython_PyCon2012", null, 57, "Python"], ["social_media_brand_disambiguator", "https://github.com/ianozsvald/social_media_brand_disambiguator", "Brand disambiguator for tweets to differentiate e.g. Orange vs orange (brand vs foodstuff), using NLTK and scikit-learn", 54, "Python"], ["ark-tweet-nlp-python", "https://github.com/ianozsvald/ark-tweet-nlp-python", "Simple Python wrapper around runTagger.sh of ark-tweet-nlp", 48, "Python"]]], ["User", "keunwoochoi", "https://avatars0.githubusercontent.com/u/16153797?v=4", [["kapre", "https://github.com/keunwoochoi/kapre", "kapre: Keras Audio Preprocessors", 256, "Python"], ["residual_block_keras", "https://github.com/keunwoochoi/residual_block_keras", "Residual network block in Keras", 73, "Python"], ["lstm_real_book", "https://github.com/keunwoochoi/lstm_real_book", "LSTM source code to generate jazz chord progressions", 72, "Python"], ["LSTMetallica", "https://github.com/keunwoochoi/LSTMetallica", "LSTM to generate drum tracks based on Metallica's midi drum tracks", 66, "Python"]]], ["User", "waveform80", "https://avatars1.githubusercontent.com/u/1076190?v=4", [["picamera", "https://github.com/waveform80/picamera", "A pure Python interface to the Raspberry Pi camera module", 874, "Python"]]], ["User", "musalbas", "https://avatars2.githubusercontent.com/u/5038597?v=4", [["heartbleed-masstest", "https://github.com/musalbas/heartbleed-masstest", "Multi-threaded tool for scanning many hosts for CVE-2014-0160.", 550, "Python"], ["mcc-mnc-table", "https://github.com/musalbas/mcc-mnc-table", "Mobile Country Codes (MCC) and Mobile Network Codes (MNC) table in CSV, JSON and XML. Updated monthly.", 204, "Python"], ["trustery", "https://github.com/musalbas/trustery", "Public Key Infrastructure and identity management system on the Ethereum blockchain.", 48, "Python"], ["listentotwitter", "https://github.com/musalbas/listentotwitter", "Listen to Twitter.", 47, "Python"]]], ["User", "ntoll", "https://avatars0.githubusercontent.com/u/37602?v=4", [["drogulus", "https://github.com/ntoll/drogulus", "A programmable peer-to-peer data store built for simplicity, security, openness and fun (and designed to withstand nuclear war).", 197, "Python"], ["workflow", "https://github.com/ntoll/workflow", "A lightweight workflow engine application for Django based web-applications", 123, "Python"], ["foox", "https://github.com/ntoll/foox", "Creates species counterpoint using genetic algorithms (in Python).", 107, "Python"], ["microformats", "https://github.com/ntoll/microformats", "A simple Django application that makes it easy to integrate and use Microformats in your web-application.", 57, "Python"]]], ["User", "j4mie", "https://avatars1.githubusercontent.com/u/6988?v=4", [["django-spurl", "https://github.com/j4mie/django-spurl", "A Django template library for manipulating URLs", 155, "Python"], ["micromodels", "https://github.com/j4mie/micromodels", "Declarative dictionary-based model classes for Python", 102, "Python"], ["django-activelink", "https://github.com/j4mie/django-activelink", "A Django template library for checking whether the current page matches a given URL. Useful for highlighting active links in menus.", 54, "Python"]]], ["User", "jorgebastida", "https://avatars2.githubusercontent.com/u/159782?v=4", [["gordon", "https://github.com/jorgebastida/gordon", "\u03bb Gordon is a tool to create, wire and deploy AWS Lambdas using CloudFormation", 1991, "Python"], ["awslogs", "https://github.com/jorgebastida/awslogs", "AWS CloudWatch logs for Humans\u2122", 1965, "Python"], ["django-dajaxice", "https://github.com/jorgebastida/django-dajaxice", "Easy to use AJAX library for django. dajaxice mains goal is to trivialize the asynchronous communication within the django server side code and your js code. It's an \"agnostic JS framework\" approach and focus on decoupling the presentation logic.", 413, "Python"], ["django-dajax", "https://github.com/jorgebastida/django-dajax", "Easy to use library to create asynchronous presentation logic with django and dajaxice", 362, "Python"]]], ["User", "Jonty", "https://avatars3.githubusercontent.com/u/1553?v=4", [["Idiocy", "https://github.com/Jonty/Idiocy", "Idiocy is a warning shot to people browsing the internet insecurely.", 156, "Python"], ["Oust", "https://github.com/Jonty/Oust", "JS Joust designed for noisy festivals. Runs on a Raspberry Pi.", 50, "Python"]]], ["User", "countercept", "https://avatars1.githubusercontent.com/u/23384414?v=4", [["doublepulsar-detection-script", "https://github.com/countercept/doublepulsar-detection-script", "A python2 script for sweeping a network to find windows systems compromised with the DOUBLEPULSAR implant.", 879, "Python"], ["doublepulsar-c2-traffic-decryptor", "https://github.com/countercept/doublepulsar-c2-traffic-decryptor", "A python2 script for processing a PCAP file to decrypt C2 traffic sent to DOUBLEPULSAR implant", 200, "Python"], ["python-exe-unpacker", "https://github.com/countercept/python-exe-unpacker", "A helper script for unpacking and decompiling EXEs compiled from python code. ", 41, "Python"]]], ["User", "etianen", "https://avatars0.githubusercontent.com/u/148744?v=4", [["django-reversion", "https://github.com/etianen/django-reversion", "django-reversion is an extension to the Django web framework that provides version control for model instances.", 2023, "Python"], ["django-watson", "https://github.com/etianen/django-watson", "Full-text multi-table search application for Django. Easy to install and use, with good performance.", 684, "Python"], ["django-s3-storage", "https://github.com/etianen/django-s3-storage", "Django Amazon S3 file storage.", 202, "Python"], ["django-python3-ldap", "https://github.com/etianen/django-python3-ldap", "Django LDAP user authentication backend for Python 3.", 180, "Python"], ["aiohttp-wsgi", "https://github.com/etianen/aiohttp-wsgi", "WSGI adapter for aiohttp.", 173, "Python"]]], ["User", "the-raspberry-pi-guy", "https://avatars0.githubusercontent.com/u/5570173?v=4", [["skateboard", "https://github.com/the-raspberry-pi-guy/skateboard", "Code & information for my DIY electric skateboard", 160, "Python"]]], ["User", "d0ugal", "https://avatars3.githubusercontent.com/u/48211?v=4", [["retrace", "https://github.com/d0ugal/retrace", "Configurable method retrying for Pythonistas.", 66, "Python"]]], ["User", "peterjc", "https://avatars2.githubusercontent.com/u/63959?v=4", [["biopython_workshop", "https://github.com/peterjc/biopython_workshop", "A basic introduction to Biopython, intended for a classroom based workshop", 80, "Python"], ["backports.lzma", "https://github.com/peterjc/backports.lzma", "Backport of Python 3.3's standard library module lzma for LZMA/XY compressed files", 44, "Python"]]], ["User", "gasman", "https://avatars2.githubusercontent.com/u/85097?v=4", [["django-unjoinify", "https://github.com/gasman/django-unjoinify", "A library for efficiently retrieving deeply-nested data sets", 46, "Python"]]], ["User", "mpatacchiola", "https://avatars0.githubusercontent.com/u/13177383?v=4", [["deepgaze", "https://github.com/mpatacchiola/deepgaze", "Computer Vision library for human-computer interaction. It implements Head Pose and Gaze Direction Estimation Using Convolutional Neural Networks, Skin Detection through Backprojection, Motion Detection and Tracking, Saliency Map.", 624, "Python"], ["dissecting-reinforcement-learning", "https://github.com/mpatacchiola/dissecting-reinforcement-learning", "Python code, PDFs and resources for the series of posts on Reinforcement Learning which I published on my personal blog", 219, "Python"]]], ["User", "pythonanywhere", "https://avatars1.githubusercontent.com/u/181511?v=4", [["dirigible-spreadsheet", "https://github.com/pythonanywhere/dirigible-spreadsheet", "Dirigible, the Pythonic spreadsheet in your browser", 129, "Python"]]], ["User", "holdenweb", "https://avatars1.githubusercontent.com/u/105312?v=4", [["int-py-notes", "https://github.com/holdenweb/int-py-notes", "Notebooks from Intermediate Python videos", 65, "Python"]]], ["User", "idmillington", "https://avatars1.githubusercontent.com/u/109470?v=4", []], ["User", "rxwx", "https://avatars3.githubusercontent.com/u/2202542?v=4", [["CVE-2018-0802", "https://github.com/rxwx/CVE-2018-0802", "PoC Exploit for CVE-2018-0802 (and optionally CVE-2017-11882)", 181, "Python"], ["CVE-2017-8570", "https://github.com/rxwx/CVE-2017-8570", "Proof of Concept exploit for CVE-2017-8570", 105, "Python"]]], ["User", "tomlepaine", "https://avatars1.githubusercontent.com/u/5413598?v=4", [["fast-wavenet", "https://github.com/tomlepaine/fast-wavenet", "Speedy Wavenet generation using dynamic programming :zap:", 1246, "Python"]]], ["User", "ryanrhymes", "https://avatars1.githubusercontent.com/u/1721505?v=4", [["panns", "https://github.com/ryanrhymes/panns", "Python Approximate Nearest Neighbor Search in very high dimensional spaces with optimised indexing.", 176, "Python"]]], ["User", "jeanphix", "https://avatars0.githubusercontent.com/u/252119?v=4", [["Flask-Dashed", "https://github.com/jeanphix/Flask-Dashed", "Provides simple but efficient admin UI. ", 121, "Python"]]], ["User", "vitorbaptista", "https://avatars1.githubusercontent.com/u/76945?v=4", []], ["User", "danielquinn", "https://avatars1.githubusercontent.com/u/218205?v=4", [["albatross", "https://github.com/danielquinn/albatross", "A Twitter live-data collector. Keep an eye on your disk space ;-)", 58, "Python"]]], ["User", "random-robbie", "https://avatars1.githubusercontent.com/u/4902869?v=4", [["Jira-Scan", "https://github.com/random-robbie/Jira-Scan", "CVE-2017-9506 - SSRF", 53, "Python"]]], ["User", "dracos", "https://avatars0.githubusercontent.com/u/154364?v=4", [["double-metaphone", "https://github.com/dracos/double-metaphone", "A Python implementation of the Double Metaphone algorithm", 54, "Python"], ["django-date-extensions", "https://github.com/dracos/django-date-extensions", "Extensions to DateField to handle both approximate dates (e.g. \"March 1963\") and default year dates (e.g. assume \"24th June\" is this year)", 44, "Python"]]], ["User", "yohokuno", "https://avatars1.githubusercontent.com/u/148187?v=4", [["dl4nlp", "https://github.com/yohokuno/dl4nlp", "Deep learning for natural language processing", 68, "Python"], ["count-ngram", "https://github.com/yohokuno/count-ngram", " Count frequent n-gram from big data with limited memory.", 49, "Python"]]], ["User", "jbornschein", "https://avatars3.githubusercontent.com/u/241247?v=4", [["mpi4py-examples", "https://github.com/jbornschein/mpi4py-examples", "mpi4py examples", 173, "Python"], ["reweighted-ws", "https://github.com/jbornschein/reweighted-ws", "Implementation of the reweighted wake-sleep machine learning algorithm", 42, "Python"]]], ["User", "matthew-brett", "https://avatars2.githubusercontent.com/u/67612?v=4", [["transforms3d", "https://github.com/matthew-brett/transforms3d", "3 dimensional spatial transformations", 97, "Python"], ["delocate", "https://github.com/matthew-brett/delocate", "Find and copy needed dynamic libraries into python wheels", 42, "Python"]]], ["User", "Meatballs1", "https://avatars2.githubusercontent.com/u/1854557?v=4", [["burp-extensions", "https://github.com/Meatballs1/burp-extensions", "Burp Suite Extensions", 64, "Python"]]], ["User", "emilmont", "https://avatars2.githubusercontent.com/u/853727?v=4", [["Artificial-Intelligence-and-Machine-Learning", "https://github.com/emilmont/Artificial-Intelligence-and-Machine-Learning", "Algorithm implementations and homework solutions for the Stanford's online courses", 479, "Python"], ["pyStatParser", "https://github.com/emilmont/pyStatParser", "Simple Python Statistical Parser", 55, "Python"]]], ["User", "bashtage", "https://avatars3.githubusercontent.com/u/5585221?v=4", [["linearmodels", "https://github.com/bashtage/linearmodels", "Linear models including instrumental variable estimators and panel data models", 85, "Python"]]], ["User", "inclement", "https://avatars3.githubusercontent.com/u/1265819?v=4", [["kivycrashcourse", "https://github.com/inclement/kivycrashcourse", "The programming material from my kivy crash course youtube series.", 179, "Python"], ["Pyonic-interpreter", "https://github.com/inclement/Pyonic-interpreter", "A Python interpreter for Android.", 75, "Python"]]], ["User", "ideoforms", "https://avatars0.githubusercontent.com/u/302318?v=4", [["python-twitter-examples", "https://github.com/ideoforms/python-twitter-examples", "Examples of using Python for Twitter social data mining, using the python-twitter-tools framework.", 414, "Python"], ["isobar", "https://github.com/ideoforms/isobar", "A Python library for algorithmic composition by expressing and constructing musical patterns.", 109, "Python"], ["pylive", "https://github.com/ideoforms/pylive", "Query and control Ableton Live from Python", 95, "Python"]]], ["User", "ZhengyaoJiang", "https://avatars2.githubusercontent.com/u/15139574?v=4", [["PGPortfolio", "https://github.com/ZhengyaoJiang/PGPortfolio", "PGPortfolio: Policy Gradient Portfolio, the source code of \"A Deep Reinforcement Learning Framework for the Financial Portfolio Management Problem\"(https://arxiv.org/pdf/1706.10059.pdf).", 494, "Python"]]], ["User", "jameshensman", "https://avatars0.githubusercontent.com/u/154383?v=4", [["VFF", "https://github.com/jameshensman/VFF", "Variational Fourier Features", 42, "Python"]]], ["User", "codebox", "https://avatars2.githubusercontent.com/u/615829?v=4", [["reading-list-mover", "https://github.com/codebox/reading-list-mover", "A Python utility for moving bookmarks/reading lists between services", 134, "Python"], ["markov-text", "https://github.com/codebox/markov-text", "Python utility that uses a Markov Chain to generate random sentences using a source text", 122, "Python"], ["mosaic", "https://github.com/codebox/mosaic", "Python script for creating photomosaic images", 118, "Python"], ["bayesian-classifier", "https://github.com/codebox/bayesian-classifier", "A Naive Bayesian Classifier written in Python", 96, "Python"], ["image_augmentor", "https://github.com/codebox/image_augmentor", "Data augmentation tool for images", 80, "Python"]]], ["User", "gpjt", "https://avatars2.githubusercontent.com/u/129702?v=4", [["webgl-lessons", "https://github.com/gpjt/webgl-lessons", "https://github.com/tparisi/webgl-lessons is now the officially maintained fork for this project", 951, "Python"]]], ["User", "vals", "https://avatars0.githubusercontent.com/u/668803?v=4", [["umis", "https://github.com/vals/umis", "Tools for processing UMI RNA-tag data", 67, "Python"]]], ["User", "gdanezis", "https://avatars1.githubusercontent.com/u/4999882?v=4", [["petlib", "https://github.com/gdanezis/petlib", "A python library that implements a number of Privacy Enhancing Technolgies", 72, "Python"], ["rscoin", "https://github.com/gdanezis/rscoin", "The rscoin centrally banked cryptocurrency", 48, "Python"]]], ["User", "danfairs", "https://avatars3.githubusercontent.com/u/24726?v=4", [["django-lazysignup", "https://github.com/danfairs/django-lazysignup", "django-lazysignup is a package designed to allow users to interact with a site as if they were authenticated users, but without signing up. At any time,  they can convert their temporary user account to a real user account.", 342, "Python"]]], ["User", "cdent", "https://avatars3.githubusercontent.com/u/34498?v=4", [["gabbi", "https://github.com/cdent/gabbi", "Declarative HTTP Testing for Python and anything else", 100, "Python"]]], ["User", "adamgreig", "https://avatars2.githubusercontent.com/u/47219?v=4", [["agg-kicad", "https://github.com/adamgreig/agg-kicad", "KiCAD libraries, footprints, and scripts", 91, "Python"]]], ["User", "1stvamp", "https://avatars2.githubusercontent.com/u/35831?v=4", [["trequests", "https://github.com/1stvamp/trequests", "A Tornado async HTTP/HTTPS client adaptor for python-requests", 129, "Python"], ["hippybot", "https://github.com/1stvamp/hippybot", "Hipchat.com bot written in Python with a simple plugin API", 97, "Python"]]], ["User", "Tosche", "https://avatars2.githubusercontent.com/u/5482424?v=4", [["BubbleKern", "https://github.com/Tosche/BubbleKern", "A new kerning tool for Glyphs.app.", 60, "Python"], ["Glyphs-Scripts", "https://github.com/Tosche/Glyphs-Scripts", "Tosche's Python scripts for glyphs", 47, "Python"]]], ["User", "Fuyukai", "https://avatars1.githubusercontent.com/u/8783751?v=4", [["Kyoukai", "https://github.com/Fuyukai/Kyoukai", "[OLD] A fully async web framework for Python3.5+ using asyncio", 324, "Python"], ["ButterflyNet", "https://github.com/Fuyukai/ButterflyNet", "ButterflyNet - A simpler networking library", 128, "Python"]]], ["User", "feynmanliang", "https://avatars2.githubusercontent.com/u/990069?v=4", [["bachbot", "https://github.com/feynmanliang/bachbot", "Use deep learning to generate and harmonize music in the style of Bach", 210, "Python"]]], ["User", "peterhinch", "https://avatars3.githubusercontent.com/u/8437477?v=4", [["micropython-async", "https://github.com/peterhinch/micropython-async", "Application of uasyncio to hardware interfaces", 81, "Python"], ["Micropython-scheduler", "https://github.com/peterhinch/Micropython-scheduler", "A set of libraries for writing threaded code on the MicroPython board", 53, "Python"], ["micropython-samples", "https://github.com/peterhinch/micropython-samples", "Assorted code ideas", 41, "Python"]]], ["User", "benhodgson", "https://avatars1.githubusercontent.com/u/1770?v=4", [["protobuf-to-dict", "https://github.com/benhodgson/protobuf-to-dict", "A small Python library for creating dicts from protocol buffers. Useful as an intermediate step before serialization (e.g. to JSON).", 124, "Python"]]], ["User", "patito", "https://avatars0.githubusercontent.com/u/396454?v=4", []], ["User", "tarnfeld", "https://avatars0.githubusercontent.com/u/217279?v=4", []], ["User", "rjw57", "https://avatars0.githubusercontent.com/u/146860?v=4", [["yt", "https://github.com/rjw57/yt", null, 82, "Python"], ["hdcp-genkey", "https://github.com/rjw57/hdcp-genkey", "Generate HDCP source and sink keys from the leaked master key", 80, "Python"]]], ["User", "yongxuUSTC", "https://avatars1.githubusercontent.com/u/5399506?v=4", [["sednn", "https://github.com/yongxuUSTC/sednn", "deep learning based speech enhancement using keras python, make it easy to use", 58, "Python"]]], ["User", "robintw", "https://avatars1.githubusercontent.com/u/296686?v=4", [["Py6S", "https://github.com/robintw/Py6S", "A Python interface to the 6S Radiative Transfer Model", 49, "Python"]]], ["User", "danpalmer", "https://avatars0.githubusercontent.com/u/202400?v=4", []], ["User", "kynan", "https://avatars2.githubusercontent.com/u/346079?v=4", [["nbstripout", "https://github.com/kynan/nbstripout", "strip output from Jupyter and IPython notebooks", 246, "Python"]]], ["User", "kwotsin", "https://avatars2.githubusercontent.com/u/11178344?v=4", [["transfer_learning_tutorial", "https://github.com/kwotsin/transfer_learning_tutorial", "A guide to transfer learning with inception-resnet-v2.", 126, "Python"], ["TensorFlow-ENet", "https://github.com/kwotsin/TensorFlow-ENet", "TensorFlow implementation of ENet", 98, "Python"], ["TensorFlow-Xception", "https://github.com/kwotsin/TensorFlow-Xception", "TensorFlow implementation of the Xception Model by Fran\u00e7ois Chollet", 97, "Python"], ["create_tfrecords", "https://github.com/kwotsin/create_tfrecords", "A simpler way of preparing large-scale image dataset by generalizing functions from TensorFlow-slim", 73, "Python"]]], ["User", "JeffreyDF", "https://avatars0.githubusercontent.com/u/8817449?v=4", [["kaggle_diabetic_retinopathy", "https://github.com/JeffreyDF/kaggle_diabetic_retinopathy", "Fifth place solution of the Kaggle Diabetic Retinopathy competition.", 116, "Python"]]], ["User", "marklit", "https://avatars0.githubusercontent.com/u/359316?v=4", [["whois", "https://github.com/marklit/whois", "Collects WHOIS details for every IPv4 netblock. Reports supported via Elasticsearch.", 63, "Python"], ["recommend", "https://github.com/marklit/recommend", "Film recommendations with Apache Spark and Python", 45, "Python"]]], ["User", "tomdyson", "https://avatars0.githubusercontent.com/u/15543?v=4", [["wagalytics", "https://github.com/tomdyson/wagalytics", "A Google Analytics dashboard in your Wagtail admin", 78, "Python"]]], ["User", "michaeljones", "https://avatars0.githubusercontent.com/u/5390?v=4", [["breathe", "https://github.com/michaeljones/breathe", "ReStructuredText and Sphinx bridge to Doxygen", 328, "Python"], ["sphinx-to-github", "https://github.com/michaeljones/sphinx-to-github", "Sphinx extension & script to prepare Sphinx html output for github pages.", 95, "Python"]]], ["User", "dgorissen", "https://avatars2.githubusercontent.com/u/644951?v=4", [["pycel", "https://github.com/dgorissen/pycel", "A library for compiling excel spreadsheets to python code & visualizing them as a graph", 142, "Python"]]], ["User", "edbullen", "https://avatars0.githubusercontent.com/u/9626848?v=4", [["NLPBot", "https://github.com/edbullen/NLPBot", "Simple ChatBot introducing NLP and Machine Learning for Classification of Sentences", 59, "Python"]]], ["User", "doismellburning", "https://avatars1.githubusercontent.com/u/817118?v=4", [["django12factor", "https://github.com/doismellburning/django12factor", "Making Django configuration more 12factor-y", 64, "Python"]]], ["User", "marekrei", "https://avatars2.githubusercontent.com/u/1030188?v=4", [["sequence-labeler", "https://github.com/marekrei/sequence-labeler", "Neural network sequence labeling model", 144, "Python"], ["theano-tutorial", "https://github.com/marekrei/theano-tutorial", "Basic Theano code samples", 70, "Python"]]], ["User", "Svenito", "https://avatars1.githubusercontent.com/u/31278?v=4", [["usblock", "https://github.com/Svenito/usblock", "Lock and unlock your desktop using a USB stick as a key", 92, "Python"], ["exploit-pattern", "https://github.com/Svenito/exploit-pattern", "generate and search pattern string for exploit development ", 87, "Python"]]], ["User", "lsbardel", "https://avatars1.githubusercontent.com/u/144320?v=4", [["python-stdnet", "https://github.com/lsbardel/python-stdnet", "Object-data mapper and advanced query manager for non relational databases", 115, "Python"]]], ["User", "radiosilence", "https://avatars3.githubusercontent.com/u/65021?v=4", []], ["User", "djm", "https://avatars3.githubusercontent.com/u/88744?v=4", [["python-scrapyd-api", "https://github.com/djm/python-scrapyd-api", "A Python wrapper for working with Scrapyd's API.", 136, "Python"]]], ["User", "lwolf", "https://avatars2.githubusercontent.com/u/6144353?v=4", []], ["User", "jamescasbon", "https://avatars3.githubusercontent.com/u/97495?v=4", [["pypackage", "https://github.com/jamescasbon/pypackage", "Ship virtualenvs as deb or rpm", 103, "Python"]]], ["User", "Fizzadar", "https://avatars1.githubusercontent.com/u/1026154?v=4", [["pyinfra", "https://github.com/Fizzadar/pyinfra", ":zap: Deploy stuff by diff-ing the state you want against the remote server", 193, "Python"], ["ElasticQuery", "https://github.com/Fizzadar/ElasticQuery", "A simple (Python) query builder for Elasticsearch", 63, "Python"]]], ["User", "paulnasca", "https://avatars1.githubusercontent.com/u/627128?v=4", [["paulstretch_python", "https://github.com/paulnasca/paulstretch_python", "Paulstretch python version", 264, "Python"]]], ["User", "oinopion", "https://avatars0.githubusercontent.com/u/38861?v=4", [["hurl", "https://github.com/oinopion/hurl", "Django Happy Urls", 45, "Python"]]], ["User", "Zomboided", "https://avatars2.githubusercontent.com/u/17079525?v=4", [["service.vpn.manager", "https://github.com/Zomboided/service.vpn.manager", "VPN plugin for Kodi", 112, "Python"]]], ["User", "gzuidhof", "https://avatars3.githubusercontent.com/u/1039510?v=4", [["nn-transfer", "https://github.com/gzuidhof/nn-transfer", "Convert trained PyTorch models to Keras, and the other way around", 111, "Python"], ["luna16", "https://github.com/gzuidhof/luna16", "LUNA16 Lung Nodule Analysis - NWI-IMC037 Final Project ", 98, "Python"]]], ["User", "gcushen", "https://avatars1.githubusercontent.com/u/7537639?v=4", [["mezzanine-api", "https://github.com/gcushen/mezzanine-api", "RESTful web API for Mezzanine CMS", 68, "Python"]]], ["User", "alzmcr", "https://avatars0.githubusercontent.com/u/4122640?v=4", [["allstate", "https://github.com/alzmcr/allstate", "Kaggle's Allstate Purchase Prediction Challenge", 72, "Python"]]], ["User", "vext01", "https://avatars2.githubusercontent.com/u/604955?v=4", []], ["User", "ChrisCummins", "https://avatars1.githubusercontent.com/u/1636663?v=4", []], ["User", "mishbahr", "https://avatars2.githubusercontent.com/u/1264089?v=4", [["django-users2", "https://github.com/mishbahr/django-users2", "Custom user model for django >=1.5 with support for multiple user types.", 166, "Python"], ["django-modeladmin-reorder", "https://github.com/mishbahr/django-modeladmin-reorder", "Custom ordering for the apps and models in the admin app.", 115, "Python"], ["djangocms-forms", "https://github.com/mishbahr/djangocms-forms", "The easiest and most flexible Django CMS Form builder \u2014 Create forms quickly without ever touching code. Every field type you may need is available within a simple drag and drop interface. ", 90, "Python"]]], ["User", "thraxil", "https://avatars0.githubusercontent.com/u/7821?v=4", []], ["User", "SeanHeelan", "https://avatars1.githubusercontent.com/u/1920339?v=4", []], ["User", "jdiez17", "https://avatars0.githubusercontent.com/u/251900?v=4", [["pastepm", "https://github.com/jdiez17/pastepm", "Beautiful paste service", 97, "Python"], ["flask-paypal", "https://github.com/jdiez17/flask-paypal", "PayPal integration example with Flask", 46, "Python"]]], ["User", "jiexunsee", "https://avatars2.githubusercontent.com/u/21333190?v=4", [["rudimentary-ai-composer", "https://github.com/jiexunsee/rudimentary-ai-composer", "A very basic LSTM composer, doesn't compose any proper music for now", 68, "Python"]]], ["User", "phvu", "https://avatars1.githubusercontent.com/u/1087992?v=4", [["grid-lstm-tensorflow", "https://github.com/phvu/grid-lstm-tensorflow", "Examples of using GridLSTM (and GridRNN in general) in tensorflow", 53, "Python"]]], ["User", "Pithikos", "https://avatars2.githubusercontent.com/u/400048?v=4", [["python-websocket-server", "https://github.com/Pithikos/python-websocket-server", "A simple fully working websocket-server in Python with no external dependencies", 264, "Python"]]], ["User", "reidrac", "https://avatars3.githubusercontent.com/u/120189?v=4", []], ["User", "andrewmichaelsmith", "https://avatars1.githubusercontent.com/u/686224?v=4", []], ["User", "pablorecio", "https://avatars3.githubusercontent.com/u/168319?v=4", [["django-qrcode", "https://github.com/pablorecio/django-qrcode", "Simple django application to simplify the inclusion of QR codes", 87, "Python"]]], ["User", "thruflo", "https://avatars1.githubusercontent.com/u/60015?v=4", [["ntorque", "https://github.com/thruflo/ntorque", "Web hook task queue.", 93, "Python"]]], ["User", "jonashagstedt", "https://avatars2.githubusercontent.com/u/603835?v=4", []], ["User", "cmacmackin", "https://avatars0.githubusercontent.com/u/8145213?v=4", [["ford", "https://github.com/cmacmackin/ford", "Automatically generates FORtran Documentation from comments within the code.", 128, "Python"]]], ["User", "alexwlchan", "https://avatars0.githubusercontent.com/u/301220?v=4", [["contributions-graph", "https://github.com/alexwlchan/contributions-graph", "A Python clone of GitHub\u2019s Contributions graph", 41, "Python"]]], ["User", "mountainstorm", "https://avatars0.githubusercontent.com/u/1919087?v=4", [["MobileDevice", "https://github.com/mountainstorm/MobileDevice", "A python package, and command line tool, which wraps Apple's MobileDevice API - providing access to iOS devices.", 147, "Python"]]], ["User", "jtyr", "https://avatars0.githubusercontent.com/u/3788909?v=4", []], ["User", "cedricbonhomme", "https://avatars0.githubusercontent.com/u/465400?v=4", [["Stegano", "https://github.com/cedricbonhomme/Stegano", "Stegano is a pure Python steganography module. Different methods of steganography and steganalysis are provided.", 157, "Python"]]], ["User", "willprice", "https://avatars1.githubusercontent.com/u/966205?v=4", [["python-omxplayer-wrapper", "https://github.com/willprice/python-omxplayer-wrapper", "Control OMXPlayer, the Raspberry Pi media player, from Python", 121, "Python"]]], ["User", "adamcharnock", "https://avatars1.githubusercontent.com/u/138215?v=4", [["django-tz-detect", "https://github.com/adamcharnock/django-tz-detect", "Easy user timezone detection for Django", 105, "Python"], ["django-su", "https://github.com/adamcharnock/django-su", "Login as any user from the Django admin interface, then switch back when done", 97, "Python"], ["seed", "https://github.com/adamcharnock/seed", "A utility for easily creating and releasing Python packages", 41, "Python"]]], ["User", "tjguk", "https://avatars3.githubusercontent.com/u/580948?v=4", [["winsys", "https://github.com/tjguk/winsys", "Python tools for the Windows administrator", 53, "Python"]]], ["User", "lclarkmichalek", "https://avatars3.githubusercontent.com/u/78389?v=4", [["pip2arch", "https://github.com/lclarkmichalek/pip2arch", "Convert pypi packages to arch linux PKGBUILDs", 61, "Python"]]], ["User", "liviu-", "https://avatars2.githubusercontent.com/u/9915183?v=4", [["ding", "https://github.com/liviu-/ding", "Lightweight time management CLI tool ", 363, "Python"]]], ["User", "bspaans", "https://avatars0.githubusercontent.com/u/47591?v=4", [["python-mingus", "https://github.com/bspaans/python-mingus", "Mingus is a music package for Python", 303, "Python"]]], ["User", "cleder", "https://avatars1.githubusercontent.com/u/1218010?v=4", [["fastkml", "https://github.com/cleder/fastkml", "Fast KML processing for python", 93, "Python"], ["czml", "https://github.com/cleder/czml", "Read and write CZML in Python", 54, "Python"]]], ["User", "tomchadwin", "https://avatars0.githubusercontent.com/u/7840213?v=4", []], ["User", "andyhd", "https://avatars3.githubusercontent.com/u/35194?v=4", []], ["User", "barneygale", "https://avatars0.githubusercontent.com/u/960340?v=4", [["quarry", "https://github.com/barneygale/quarry", "A Python library that implements the Minecraft network protocol.", 69, "Python"], ["MCRcon", "https://github.com/barneygale/MCRcon", "Use minecraft's new-fangled Rcon", 42, "Python"]]], ["User", "atgambardella", "https://avatars1.githubusercontent.com/u/1356657?v=4", [["pytorch-es", "https://github.com/atgambardella/pytorch-es", "Evolution Strategies in PyTorch", 225, "Python"]]], ["User", "alexcepoi", "https://avatars2.githubusercontent.com/u/215764?v=4", [["pyscale", "https://github.com/alexcepoi/pyscale", "General purpose Python framework for writing highly scalable applications", 63, "Python"]]], ["User", "edwardgeorge", "https://avatars0.githubusercontent.com/u/1572?v=4", [["virtualenv-clone", "https://github.com/edwardgeorge/virtualenv-clone", "A script for cloning a non-relocatable virtualenv. originated here: https://gist.github.com/860822", 136, "Python"]]], ["User", "themiurgo", "https://avatars3.githubusercontent.com/u/920728?v=4", [["ratelim", "https://github.com/themiurgo/ratelim", "Makes it easy to respect rate limits.", 90, "Python"]]], ["User", "abelectronicsuk", "https://avatars0.githubusercontent.com/u/3626089?v=4", [["ABElectronics_Python_Libraries", "https://github.com/abelectronicsuk/ABElectronics_Python_Libraries", "Python Libraries to work with Raspberry Pi expansion boards from AB Electronics", 45, "Python"]]], ["User", "dmoisset", "https://avatars2.githubusercontent.com/u/200733?v=4", []], ["User", "EarToEarOak", "https://avatars3.githubusercontent.com/u/3195316?v=4", [["RTLSDR-Scanner", "https://github.com/EarToEarOak/RTLSDR-Scanner", "A cross platform Python frequency scanning GUI for the OsmoSDR rtl-sdr library", 363, "Python"]]], ["User", "jamespacileo", "https://avatars2.githubusercontent.com/u/608868?v=4", [["django-pure-pagination", "https://github.com/jamespacileo/django-pure-pagination", "Django pagination based upon the core pagination module", 462, "Python"], ["django-smartagent", "https://github.com/jamespacileo/django-smartagent", "A smart and blazing fast browser feature detector for Django.", 67, "Python"]]], ["User", "munhitsu", "https://avatars1.githubusercontent.com/u/18304?v=4", [["django-dowser", "https://github.com/munhitsu/django-dowser", "Django fork of amazing memory leaks tracking application for python wsgi - the Dowser", 78, "Python"]]], ["User", "mossblaser", "https://avatars3.githubusercontent.com/u/193514?v=4", [["HeartMonitor", "https://github.com/mossblaser/HeartMonitor", "A webcam-based heart monitor", 59, "Python"]]], ["User", "KenT2", "https://avatars0.githubusercontent.com/u/1840231?v=4", [["tboplayer", "https://github.com/KenT2/tboplayer", "Raspberry Pi. A GUI for OMXPlayer", 105, "Python"], ["pipresents-next", "https://github.com/KenT2/pipresents-next", " Pi Presents  - Version 1.2  - The stable version of  Pi Presents, a Multi-media Toolkit for Museums, Visitor Centres and more running on the Raspberry Pi", 89, "Python"], ["pipresents", "https://github.com/KenT2/pipresents", "[pipresents] is now unsupported; use [pipresents-next] or [pipresents-gapless]", 58, "Python"], ["pipresents-gapless", "https://github.com/KenT2/pipresents-gapless", "Pi Presents gapless - beta of version 1.3 of Pi Presents. use if you like bleeding edge software", 56, "Python"]]], ["User", "danielhomola", "https://avatars1.githubusercontent.com/u/5399803?v=4", [["mifs", "https://github.com/danielhomola/mifs", "Parallelized Mutual Information based Feature Selection module.", 82, "Python"]]], ["User", "adrianchifor", "https://avatars3.githubusercontent.com/u/6370064?v=4", []], ["User", "tomwalker", "https://avatars1.githubusercontent.com/u/2348163?v=4", [["django_quiz", "https://github.com/tomwalker/django_quiz", "This is a configurable quiz app for Django.", 264, "Python"]]], ["User", "LukeB42", "https://avatars3.githubusercontent.com/u/942331?v=4", [["Emissary", "https://github.com/LukeB42/Emissary", "A microservice for archiving the news.", 164, "Python"]]], ["User", "apeeyush", "https://avatars3.githubusercontent.com/u/4463373?v=4", [["machine-learning", "https://github.com/apeeyush/machine-learning", "Demonstrates data munging, analysis and visualization techniques", 118, "Python"]]], ["User", "joerick", "https://avatars1.githubusercontent.com/u/1244307?v=4", [["pyinstrument", "https://github.com/joerick/pyinstrument", "\ud83d\udeb4 Call stack profiler for Python. Shows you why your code is slow!", 830, "Python"], ["cibuildwheel", "https://github.com/joerick/cibuildwheel", "\ud83c\udfa1 Build Python wheels on CI with minimal configuration. ", 147, "Python"]]], ["User", "danielsamuels", "https://avatars0.githubusercontent.com/u/1781176?v=4", []], ["User", "vdutor", "https://avatars2.githubusercontent.com/u/13780846?v=4", []], ["User", "richard-clifford", "https://avatars0.githubusercontent.com/u/818959?v=4", []], ["User", "Azelphur", "https://avatars0.githubusercontent.com/u/280694?v=4", [["pyPushBullet", "https://github.com/Azelphur/pyPushBullet", "Python library to interface with PushBullet", 158, "Python"]]], ["User", "Frimkron", "https://avatars3.githubusercontent.com/u/46865?v=4", [["mud-pi", "https://github.com/Frimkron/mud-pi", "A simple MUD server in Python, for teaching purposes, which could be run on a Raspberry Pi", 80, "Python"], ["Ascidia", "https://github.com/Frimkron/Ascidia", "A command-line utility for rendering technical diagrams from ASCII art", 58, "Python"]]], ["User", "jarvisteach", "https://avatars3.githubusercontent.com/u/13473435?v=4", [["appJar", "https://github.com/jarvisteach/appJar", "Simple Tkinter GUIs in Python", 313, "Python"]]], ["User", "n30m1nd", "https://avatars2.githubusercontent.com/u/10390009?v=4", []], ["User", "davea", "https://avatars1.githubusercontent.com/u/4776?v=4", [["sonoff-mqtt", "https://github.com/davea/sonoff-mqtt", "MicroPython scripts to control Sonoff/ESP8266 using MQTT", 44, "Python"]]], ["User", "mdinacci", "https://avatars3.githubusercontent.com/u/1949?v=4", []], ["User", "akashgit", "https://avatars3.githubusercontent.com/u/797056?v=4", [["autoencoding_vi_for_topic_models", "https://github.com/akashgit/autoencoding_vi_for_topic_models", "Tensorflow implementation for prodLDA and NVLDA.", 86, "Python"]]], ["User", "dariober", "https://avatars3.githubusercontent.com/u/6883382?v=4", []], ["User", "stefanoborini", "https://avatars3.githubusercontent.com/u/132967?v=4", [["vai", "https://github.com/stefanoborini/vai", "Vai editor. A text based IDE similar to vim, in python.", 220, "Python"]]], ["User", "faissaloo", "https://avatars1.githubusercontent.com/u/8840681?v=4", []], ["User", "RealOrangeOne", "https://avatars0.githubusercontent.com/u/6527489?v=4", []], ["User", "ajcr", "https://avatars3.githubusercontent.com/u/6031088?v=4", [["rolling", "https://github.com/ajcr/rolling", "Computationally efficient rolling window iterators for Python (including sum, min/max, median and more...)", 81, "Python"]]], ["User", "DRL", "https://avatars0.githubusercontent.com/u/167909?v=4", [["blobtools", "https://github.com/DRL/blobtools", "Modular command-line solution for visualisation, quality control and taxonomic partitioning of genome datasets", 43, "Python"]]], ["User", "JustGlowing", "https://avatars2.githubusercontent.com/u/4929177?v=4", [["minisom", "https://github.com/JustGlowing/minisom", ":red_circle: MiniSom is a minimalistic implementation of the Self Organizing Maps", 180, "Python"]]], ["User", "js850", "https://avatars2.githubusercontent.com/u/1587384?v=4", []], ["User", "centralniak", "https://avatars0.githubusercontent.com/u/365324?v=4", [["django-inline-ordering", "https://github.com/centralniak/django-inline-ordering", "Django app to ease ordering of related data - enable Drag&Drop ordering in admin with just a few LOC", 64, "Python"], ["cmsplugin_gallery", "https://github.com/centralniak/cmsplugin_gallery", "Simple photo gallery plugin for DjangoCMS", 52, "Python"]]], ["User", "wjdp", "https://avatars2.githubusercontent.com/u/1690934?v=4", []], ["User", "lilspikey", "https://avatars0.githubusercontent.com/u/130076?v=4", [["django-batch-select", "https://github.com/lilspikey/django-batch-select", "batch select many-to-many and one-to-many fields (to help avoid n+1 query problem)", 161, "Python"], ["django-background-task", "https://github.com/lilspikey/django-background-task", "A database-backed work queue for Django", 68, "Python"]]], ["User", "jameskermode", "https://avatars1.githubusercontent.com/u/1049932?v=4", [["f90wrap", "https://github.com/jameskermode/f90wrap", "F90 to Python interface generator with derived type support", 96, "Python"]]], ["User", "bootandy", "https://avatars2.githubusercontent.com/u/311785?v=4", [["tornado_sample", "https://github.com/bootandy/tornado_sample", "Tornado, Mongodb. Simple shell project - users can login and leave messages", 75, "Python"]]], ["User", "yeraydiazdiaz", "https://avatars1.githubusercontent.com/u/6739793?v=4", [["asyncio-ftwpd", "https://github.com/yeraydiazdiaz/asyncio-ftwpd", "Code for the examples on my article in Medium AsyncIO for the Working Python Developer", 78, "Python"]]], ["User", "ukBaz", "https://avatars0.githubusercontent.com/u/8608260?v=4", [["python-bluezero", "https://github.com/ukBaz/python-bluezero", "A simple Python interface to Bluez", 78, "Python"]]], ["User", "plumdog", "https://avatars3.githubusercontent.com/u/2348591?v=4", [["flask_table", "https://github.com/plumdog/flask_table", "Because writing HTML is fiddly and all of your tables are basically the same", 95, "Python"]]], ["User", "nmanchev", "https://avatars2.githubusercontent.com/u/7489331?v=4", [["MachineLearningStudyGroup", "https://github.com/nmanchev/MachineLearningStudyGroup", "Materials from the London Machine Learning Study Group Meetups", 47, "Python"]]], ["User", "ozan-oktay", "https://avatars2.githubusercontent.com/u/10244985?v=4", [["Attention-Gated-Networks", "https://github.com/ozan-oktay/Attention-Gated-Networks", "Use of Attention Gates in a Convolutional Neural Network / Medical Image Classification and Segmentation", 73, "Python"]]], ["User", "marcofucci", "https://avatars3.githubusercontent.com/u/178865?v=4", [["cookiecutter-simple-django", "https://github.com/marcofucci/cookiecutter-simple-django", "A cookiecutter template for creating reusable Django projects quickly.", 92, "Python"]]], ["User", "PiStuffing", "https://avatars0.githubusercontent.com/u/5243903?v=4", [["Quadcopter", "https://github.com/PiStuffing/Quadcopter", "Autonomous Raspberry Pi, Raspian, Python, piDrone", 163, "Python"]]], ["User", "petervaro", "https://avatars0.githubusercontent.com/u/2691101?v=4", [["python", "https://github.com/petervaro/python", "Python 3 and Cython language bundles for Sublime Text and TextMate", 46, "Python"]]], ["User", "mjwestcott", "https://avatars1.githubusercontent.com/u/10656117?v=4", [["Goodrich", "https://github.com/mjwestcott/Goodrich", "The source code for 'Data Structures and Algorithms in Python' by Goodrich, Tamassia, Goldwasser", 48, "Python"]]], ["User", "sulami", "https://avatars0.githubusercontent.com/u/1843193?v=4", []], ["User", "craigemery", "https://avatars1.githubusercontent.com/u/93501?v=4", [["vim-autotag", "https://github.com/craigemery/vim-autotag", "Automatically discover and \"properly\" update ctags files on save", 172, "Python"]]], ["User", "tow", "https://avatars2.githubusercontent.com/u/8143?v=4", [["sunburnt", "https://github.com/tow/sunburnt", "Python interface to Solr", 278, "Python"]]], ["User", "ndenev", "https://avatars3.githubusercontent.com/u/782286?v=4", []], ["User", "jim-easterbrook", "https://avatars0.githubusercontent.com/u/1957023?v=4", [["pywws", "https://github.com/jim-easterbrook/pywws", "Python software for USB Wireless WeatherStations", 154, "Python"], ["python-gphoto2", "https://github.com/jim-easterbrook/python-gphoto2", "Python interface to libgphoto2", 114, "Python"]]], ["User", "nikdoof", "https://avatars2.githubusercontent.com/u/170514?v=4", [["python-ts3", "https://github.com/nikdoof/python-ts3", "Teamspeak 3 API module for Python 2/3", 44, "Python"]]], ["User", "johnbywater", "https://avatars3.githubusercontent.com/u/3607503?v=4", [["eventsourcing", "https://github.com/johnbywater/eventsourcing", "Event sourcing in Python", 229, "Python"], ["quantdsl", "https://github.com/johnbywater/quantdsl", "Quant DSL", 82, "Python"]]], ["User", "sukritshankar", "https://avatars2.githubusercontent.com/u/8617397?v=4", [["Caffe-LMDBCreation-MultiLabel", "https://github.com/sukritshankar/Caffe-LMDBCreation-MultiLabel", "Creation of LMDB for training a multi-label loss in Caffe", 50, "Python"]]], ["User", "lukebeer", "https://avatars1.githubusercontent.com/u/856417?v=4", []], ["User", "xdanaux", "https://avatars2.githubusercontent.com/u/2313025?v=4", [["fontawesome-latex", "https://github.com/xdanaux/fontawesome-latex", "LaTeX mappings for Font Awesome, the icons font", 103, "Python"]]], ["User", "lawsie", "https://avatars2.githubusercontent.com/u/5183697?v=4", [["guizero", "https://github.com/lawsie/guizero", "A wrapper for tkinter to simplify part of the functionality so that kids can use it", 46, "Python"]]], ["User", "DiNitride", "https://avatars1.githubusercontent.com/u/17622831?v=4", [["Discord-Music-Status", "https://github.com/DiNitride/Discord-Music-Status", "A Self-Bot program to display your music from Spotify, iTunes, Winamp, and other music players, as your \"Playing\" status on Discord", 63, "Python"]]], ["User", "gjcarneiro", "https://avatars2.githubusercontent.com/u/2197096?v=4", [["yacron", "https://github.com/gjcarneiro/yacron", "A modern Cron replacement that is Docker-friendly", 180, "Python"]]], ["User", "Fiedzia", "https://avatars3.githubusercontent.com/u/240435?v=4", []], ["User", "WayneKeenan", "https://avatars3.githubusercontent.com/u/8313142?v=4", [["python-vrzero", "https://github.com/WayneKeenan/python-vrzero", "There's a blog about this repository here:", 54, "Python"]]], ["User", "cmstrickland", "https://avatars1.githubusercontent.com/u/963437?v=4", []], ["User", "apcode", "https://avatars2.githubusercontent.com/u/1490072?v=4", [["tensorflow_fasttext", "https://github.com/apcode/tensorflow_fasttext", "Simple embedding based text classifier inspired by fastText, implemented in tensorflow", 136, "Python"]]], ["User", "kylekirkby", "https://avatars0.githubusercontent.com/u/4564433?v=4", []], ["User", "Yang7879", "https://avatars0.githubusercontent.com/u/31214093?v=4", [["3D-RecGAN", "https://github.com/Yang7879/3D-RecGAN", "3D-RecGAN in Tensorflow (ICCV Workshops 2017)", 47, "Python"]]], ["User", "psugand", "https://avatars2.githubusercontent.com/u/61191?v=4", []], ["User", "JamesRitchie", "https://avatars0.githubusercontent.com/u/1486689?v=4", [["django-rest-framework-expiring-tokens", "https://github.com/JamesRitchie/django-rest-framework-expiring-tokens", "Expiring Token Auth for Django Rest Framework", 86, "Python"], ["scikit-rvm", "https://github.com/JamesRitchie/scikit-rvm", "Relevance Vector Machine implementation using the scikit-learn API.", 78, "Python"]]], ["User", "pasztorpisti", "https://avatars2.githubusercontent.com/u/1058990?v=4", []], ["User", "tomturner", "https://avatars0.githubusercontent.com/u/1792640?v=4", [["django-tenants", "https://github.com/tomturner/django-tenants", "Django tenants using PostgreSQL Schemas", 235, "Python"]]], ["User", "andyrimmer", "https://avatars0.githubusercontent.com/u/3602104?v=4", [["Platypus", "https://github.com/andyrimmer/Platypus", "Platypus Variant Caller", 67, "Python"]]], ["User", "Lattyware", "https://avatars3.githubusercontent.com/u/1239492?v=4", [["unrpa", "https://github.com/Lattyware/unrpa", "A program to extract files from the RPA archive format.", 140, "Python"]]], ["User", "alastair-droop", "https://avatars2.githubusercontent.com/u/13238060?v=4", []], ["User", "eerkunt", "https://avatars1.githubusercontent.com/u/14179520?v=4", [["terraform-compliance", "https://github.com/eerkunt/terraform-compliance", "a BDD Style terraform validation/compliancy check", 54, "Python"]]], ["User", "gebn", "https://avatars1.githubusercontent.com/u/2334407?v=4", []], ["User", "zeth", "https://avatars2.githubusercontent.com/u/945574?v=4", [["inputs", "https://github.com/zeth/inputs", "Cross-platform Python support for keyboards, mice and gamepads", 64, "Python"]]], ["User", "tpircher", "https://avatars2.githubusercontent.com/u/710231?v=4", [["pycrc", "https://github.com/tpircher/pycrc", "Free, easy to use Cyclic Redundancy Check (CRC) calculator and source code generator", 92, "Python"]]], ["User", "radman404", "https://avatars2.githubusercontent.com/u/7841214?v=4", [["DNSSUB", "https://github.com/radman404/DNSSUB", "Exfiltrate files over dns requests using Python and/or Bash", 48, "Python"]]], ["User", "will-rowe", "https://avatars1.githubusercontent.com/u/5321233?v=4", []], ["User", "mdengler", "https://avatars3.githubusercontent.com/u/777015?v=4", [["stockquote", "https://github.com/mdengler/stockquote", "Gets stock quotes from Yahoo and Google Finance, and historical prices from Yahoo Finance.", 42, "Python"]]], ["User", "nk412", "https://avatars2.githubusercontent.com/u/1904843?v=4", [["pyfzf", "https://github.com/nk412/pyfzf", "A python wrapper for fzf", 53, "Python"]]], ["User", "johnsensible", "https://avatars0.githubusercontent.com/u/176127?v=4", [["django-sendfile", "https://github.com/johnsensible/django-sendfile", "xsendfile etc wrapper", 375, "Python"], ["django-publish", "https://github.com/johnsensible/django-publish", "Handy mixin/abstract class for providing a \"publisher workflow\" to arbitrary Django models.", 54, "Python"]]], ["User", "andrewjw", "https://avatars3.githubusercontent.com/u/1055976?v=4", [["celery-crawler", "https://github.com/andrewjw/celery-crawler", "A Django based search engine powered by CouchDB, celery and whoosh.", 42, "Python"]]], ["User", "elParaguayo", "https://avatars2.githubusercontent.com/u/946265?v=4", [["RPi-InfoScreen-Kivy", "https://github.com/elParaguayo/RPi-InfoScreen-Kivy", "Improved version of info screen using Kivy.", 45, "Python"]]], ["User", "wharris", "https://avatars1.githubusercontent.com/u/43526?v=4", [["esmre", "https://github.com/wharris/esmre", "Python extension module for accelerating regular expressions using libesm", 78, "Python"]]]]}