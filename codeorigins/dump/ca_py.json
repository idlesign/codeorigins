{"dt": "2020-03-06 15:34", "min_followers": 10, "min_stars": 77, "users": [["User", "CamDavidsonPilon", "https://avatars3.githubusercontent.com/u/884032?v=4", [["lifelines", "https://github.com/CamDavidsonPilon/lifelines", "Survival analysis in Python", 1264, "Python"], ["lifetimes", "https://github.com/CamDavidsonPilon/lifetimes", "Lifetime value in Python", 866, "Python"], ["tdigest", "https://github.com/CamDavidsonPilon/tdigest", "t-Digest data structure in Python. Useful for percentiles and quantiles, including distributed enviroments like PySpark", 233, "Python"], ["StartupFiles", "https://github.com/CamDavidsonPilon/StartupFiles", "My IPython startup files. ", 109, "Python"], ["PyProcess", "https://github.com/CamDavidsonPilon/PyProcess", "Generate stochastic processes using Python. Unfortunately not maintained any longer =(", 95, "Python"], ["Python-Numerics", "https://github.com/CamDavidsonPilon/Python-Numerics", "Numerical machines in Python", 86, "Python"]]], ["User", "chenyuntc", "https://avatars2.githubusercontent.com/u/9301117?v=4", [["PyTorchText", "https://github.com/chenyuntc/PyTorchText", "1st Place Solution for Zhihu Machine Learning Challenge . Implementation of various text-classification models.(\u77e5\u4e4e\u770b\u5c71\u676f\u7b2c\u4e00\u540d\u89e3\u51b3\u65b9\u6848)", 950, "Python"], ["pytorch-best-practice", "https://github.com/chenyuntc/pytorch-best-practice", "A Guidance on PyTorch Coding Style Based on Kaggle Dogs vs. Cats ", 491, "Python"], ["scene-baseline", "https://github.com/chenyuntc/scene-baseline", "PyTorch baseline for AI challenger Scene classification", 84, "Python"]]], ["User", "rspivak", "https://avatars3.githubusercontent.com/u/56723?v=4", [["lsbasi", "https://github.com/rspivak/lsbasi", "Let's Build A Simple Interpreter", 970, "Python"], ["lsbaws", "https://github.com/rspivak/lsbaws", "Let's Build A Web Server", 513, "Python"], ["slimit", "https://github.com/rspivak/slimit", "SlimIt -  a JavaScript minifier/parser in Python", 500, "Python"], ["csdesign", "https://github.com/rspivak/csdesign", "Simple examples of concurrent server design in Python", 244, "Python"], ["httpcode", "https://github.com/rspivak/httpcode", "Explains the meaning of an HTTP status code on the command line", 123, "Python"], ["sftpserver", "https://github.com/rspivak/sftpserver", "A simple single-threaded SFTP server", 94, "Python"]]], ["User", "pirate", "https://avatars0.githubusercontent.com/u/511499?v=4", [["ArchiveBox", "https://github.com/pirate/ArchiveBox", "\ud83d\uddc3 The open source self-hosted web archive. Takes browser history/bookmarks/Pocket/Pinboard/etc., saves HTML, JS, PDFs, media, and more...", 6114, "Python"], ["security-growler", "https://github.com/pirate/security-growler", ":satellite: A Mac menubar app that notifies you whenever SSH, VNC, sudo, or other auth events occur.", 818, "Python"], ["crypto-trader", "https://github.com/pirate/crypto-trader", ":moneybag: Cryptocurrency trading bot library with a simple example strategy (trading via Gemini).", 532, "Python"]]], ["User", "brettcannon", "https://avatars0.githubusercontent.com/u/54418?v=4", [["caniusepython3", "https://github.com/brettcannon/caniusepython3", "Can I Use Python 3?", 412, "Python"], ["gidgethub", "https://github.com/brettcannon/gidgethub", "An async GitHub API library for Python", 174, "Python"]]], ["User", "ajinabraham", "https://avatars1.githubusercontent.com/u/4301109?v=4", [["NodeJsScan", "https://github.com/ajinabraham/NodeJsScan", "NodeJsScan is a static security code scanner for Node.js applications.", 953, "Python"], ["OWASP-Xenotix-XSS-Exploit-Framework", "https://github.com/ajinabraham/OWASP-Xenotix-XSS-Exploit-Framework", "OWASP Xenotix XSS Exploit Framework is an advanced Cross Site Scripting (XSS) vulnerability detection and exploitation framework.", 378, "Python"], ["Xenotix-Python-Keylogger", "https://github.com/ajinabraham/Xenotix-Python-Keylogger", "Xenotix Python Keylogger for Windows.", 372, "Python"], ["Static-DOM-XSS-Scanner", "https://github.com/ajinabraham/Static-DOM-XSS-Scanner", "Static DOM XSS Scanner is a Static Analysis tool written in python that will iterate through all the JavaScript and HTML files under the given directory and will list out all the possible sources and sinks that may cause DOM XSS. At the end of the scan, the tool will generate an HTML report.", 103, "Python"]]], ["User", "danijar", "https://avatars0.githubusercontent.com/u/2111293?v=4", [["handout", "https://github.com/danijar/handout", "Turn Python scripts into handouts with Markdown and figures", 1839, "Python"], ["layered", "https://github.com/danijar/layered", "Clean implementation of feed forward neural networks", 227, "Python"], ["mindpark", "https://github.com/danijar/mindpark", "Testbed for deep reinforcement learning", 166, "Python"]]], ["User", "guillaume-chevalier", "https://avatars3.githubusercontent.com/u/11862328?v=4", [["HAR-stacked-residual-bidir-LSTMs", "https://github.com/guillaume-chevalier/HAR-stacked-residual-bidir-LSTMs", "Using deep stacked residual bidirectional LSTM cells (RNN) with TensorFlow, we do Human Activity Recognition (HAR). Classifying the type of movement amongst 6 categories or 18 categories on 2 different datasets.", 216, "Python"], ["Hyperopt-Keras-CNN-CIFAR-100", "https://github.com/guillaume-chevalier/Hyperopt-Keras-CNN-CIFAR-100", "Auto-optimizing a neural net (and its architecture) on the CIFAR-100 dataset. Could be easily transferred to another dataset or another classification task.", 88, "Python"]]], ["User", "shagunsodhani", "https://avatars0.githubusercontent.com/u/1321193?v=4", [["CNN-Sentence-Classifier", "https://github.com/shagunsodhani/CNN-Sentence-Classifier", "Implementation of \"Convolutional Neural Networks for Sentence Classification\" paper", 135, "Python"]]], ["User", "zziz", "https://avatars1.githubusercontent.com/u/2147644?v=4", [["kalman-filter", "https://github.com/zziz/kalman-filter", "Kalman Filter implementation in Python using Numpy only in 30 lines. ", 115, "Python"]]], ["User", "apenwarr", "https://avatars3.githubusercontent.com/u/20592?v=4", [["sshuttle", "https://github.com/apenwarr/sshuttle", "Wrong project!  You should head over to http://github.com/sshuttle/sshuttle", 8988, "Python"], ["redo", "https://github.com/apenwarr/redo", "Smaller, easier, more powerful, and more reliable than make.  An implementation of djb's redo.", 1363, "Python"]]], ["User", "nneonneo", "https://avatars3.githubusercontent.com/u/75449?v=4", [["2048-ai", "https://github.com/nneonneo/2048-ai", "AI for the 2048 game", 818, "Python"], ["sha1collider", "https://github.com/nneonneo/sha1collider", "Build two PDFs that have different content but identical SHA1 sums.", 321, "Python"], ["eqgrp-free-file", "https://github.com/nneonneo/eqgrp-free-file", "Free sampling of files from the purported Equation Group hack.", 161, "Python"], ["ffsend", "https://github.com/nneonneo/ffsend", "Python client for Firefox Send", 103, "Python"]]], ["User", "lmcinnes", "https://avatars0.githubusercontent.com/u/11962885?v=4", [["umap", "https://github.com/lmcinnes/umap", "Uniform Manifold Approximation and Projection", 3701, "Python"], ["pynndescent", "https://github.com/lmcinnes/pynndescent", "A Python nearest neighbor descent for approximate nearest neighbors", 222, "Python"]]], ["User", "yask123", "https://avatars2.githubusercontent.com/u/1812021?v=4", [["Instant-Music-Downloader", "https://github.com/yask123/Instant-Music-Downloader", "\ud83c\udfb7  Downloads Music From The Web ", 1308, "Python"], ["Instant-Movie-Streamer", "https://github.com/yask123/Instant-Movie-Streamer", "\ud83c\udfa5  Streams the movie/ tv series instantly.", 351, "Python"], ["all_leetcode_questions", "https://github.com/yask123/all_leetcode_questions", "All Leetcode questions in a single file", 214, "Python"]]], ["User", "kevin28520", "https://avatars0.githubusercontent.com/u/10591412?v=4", [["My-TensorFlow-tutorials", "https://github.com/kevin28520/My-TensorFlow-tutorials", "This repo contains all of my TensorFlow tutorials", 793, "Python"]]], ["User", "myusuf3", "https://avatars1.githubusercontent.com/u/156825?v=4", [["delorean", "https://github.com/myusuf3/delorean", "Delorean: Time Travel Made Easy", 1634, "Python"], ["octogit", "https://github.com/myusuf3/octogit", "giving git more tentacles  ", 581, "Python"]]], ["User", "aburkov", "https://avatars3.githubusercontent.com/u/12722258?v=4", [["theMLbook", "https://github.com/aburkov/theMLbook", "The Python code to reproduce the illustrations from The Hundred-Page Machine Learning Book.", 984, "Python"]]], ["User", "npapernot", "https://avatars2.githubusercontent.com/u/8835830?v=4", []], ["User", "justinmeister", "https://avatars0.githubusercontent.com/u/5325552?v=4", [["Mario-Level-1", "https://github.com/justinmeister/Mario-Level-1", "The first level of Super Mario Bros made with Python and Pygame.", 1709, "Python"], ["The-Stolen-Crown-RPG", "https://github.com/justinmeister/The-Stolen-Crown-RPG", "A fantasy mini-RPG built with Python and Pygame.", 345, "Python"]]], ["User", "honza", "https://avatars3.githubusercontent.com/u/206357?v=4", [["anosql", "https://github.com/honza/anosql", "Easy SQL in Python", 172, "Python"], ["lenscap", "https://github.com/honza/lenscap", "Lenscap is a static site generator for creating beautiful photo narratives", 97, "Python"]]], ["User", "xiaozhouwang", "https://avatars1.githubusercontent.com/u/6015486?v=4", [["kaggle_Microsoft_Malware", "https://github.com/xiaozhouwang/kaggle_Microsoft_Malware", "code for kaggle competition Microsoft malware classification", 203, "Python"], ["kaggle-porto-seguro", "https://github.com/xiaozhouwang/kaggle-porto-seguro", "2nd Place Solution for Kaggle Porto Seguro's Safe Driver Prediction", 140, "Python"], ["tensorflow_speech_recognition_solution", "https://github.com/xiaozhouwang/tensorflow_speech_recognition_solution", "code for 3rd place kaggle tensorflow competition", 86, "Python"]]], ["User", "kelvinxu", "https://avatars3.githubusercontent.com/u/5659116?v=4", [["arctic-captions", "https://github.com/kelvinxu/arctic-captions", null, 822, "Python"]]], ["User", "david-gpu", "https://avatars0.githubusercontent.com/u/20329368?v=4", [["srez", "https://github.com/david-gpu/srez", "Image super-resolution through deep learning", 5094, "Python"], ["deep-makeover", "https://github.com/david-gpu/deep-makeover", "Deep learning project to transform male portraits into female and vice versa", 239, "Python"]]], ["User", "una-dinosauria", "https://avatars3.githubusercontent.com/u/3733964?v=4", [["3d-pose-baseline", "https://github.com/una-dinosauria/3d-pose-baseline", "A simple baseline for 3d human pose estimation in tensorflow. Presented at ICCV 17.", 818, "Python"], ["human-motion-prediction", "https://github.com/una-dinosauria/human-motion-prediction", "Simple baselines and RNNs for predicting human motion in tensorflow. Presented at CVPR 17.", 264, "Python"]]], ["User", "Hexcles", "https://avatars1.githubusercontent.com/u/1436812?v=4", []], ["User", "hsoft", "https://avatars2.githubusercontent.com/u/505201?v=4", [["send2trash", "https://github.com/hsoft/send2trash", "Python library to natively send files to Trash (or Recycle bin) on all platforms.", 141, "Python"], ["moneyguru", "https://github.com/hsoft/moneyguru", "Future-aware personal finance application", 136, "Python"], ["pdfmasher", "https://github.com/hsoft/pdfmasher", "Convert PDFs to HTML, MOBI and EPUB", 95, "Python"]]], ["User", "korymath", "https://avatars0.githubusercontent.com/u/178099?v=4", [["talk-generator", "https://github.com/korymath/talk-generator", "talk-generator is capable of generating coherent slide decks based on a single topic suggestion.", 89, "Python"]]], ["User", "jperras", "https://avatars2.githubusercontent.com/u/20675?v=4", []], ["User", "mohammadpz", "https://avatars3.githubusercontent.com/u/3185764?v=4", [["Associative_LSTM", "https://github.com/mohammadpz/Associative_LSTM", "LSTM with associative memory cells (http://arxiv.org/abs/1602.03032)", 108, "Python"], ["Recurrent-Neural-Networks", "https://github.com/mohammadpz/Recurrent-Neural-Networks", "Recurrent Neural Network for modeling sequential data implemented using Python and Theano.", 91, "Python"]]], ["User", "johnboxall", "https://avatars3.githubusercontent.com/u/28967?v=4", [["django-paypal", "https://github.com/johnboxall/django-paypal", "A pluggable Django application for integrating PayPal Payments Standard or Payments Pro", 535, "Python"], ["django-ab", "https://github.com/johnboxall/django-ab", "A simple AB Testing app for Django!", 148, "Python"]]], ["User", "Leoid", "https://avatars1.githubusercontent.com/u/19527552?v=4", [["CVE-2019-0708", "https://github.com/Leoid/CVE-2019-0708", "Only Hitting PoC [Tested on Windows Server 2008 r2]", 109, "Python"], ["MatchandReplace", "https://github.com/Leoid/MatchandReplace", "Match and Replace script used to automatically generate JSON option file to BurpSuite", 86, "Python"]]], ["User", "MaximumEntropy", "https://avatars3.githubusercontent.com/u/9114321?v=4", [["Seq2Seq-PyTorch", "https://github.com/MaximumEntropy/Seq2Seq-PyTorch", "Sequence to Sequence Models with PyTorch", 634, "Python"]]], ["User", "mgrouchy", "https://avatars0.githubusercontent.com/u/71200?v=4", [["django-stronghold", "https://github.com/mgrouchy/django-stronghold", "Get inside your stronghold and make all your Django views default login_required", 334, "Python"]]], ["User", "andrewliao11", "https://avatars2.githubusercontent.com/u/10975252?v=4", [["gail-tf", "https://github.com/andrewliao11/gail-tf", "Tensorflow implementation of generative adversarial imitation learning", 164, "Python"], ["CoGAN-tensorflow", "https://github.com/andrewliao11/CoGAN-tensorflow", "Implement Coupled Generative Adversarial Networks in Tensorflow", 100, "Python"], ["dni.pytorch", "https://github.com/andrewliao11/dni.pytorch", "Implement Decoupled Neural Interfaces using Synthetic Gradients in Pytorch", 99, "Python"]]], ["User", "julianser", "https://avatars1.githubusercontent.com/u/8012271?v=4", [["hed-dlg-truncated", "https://github.com/julianser/hed-dlg-truncated", "Hierarchical Encoder Decoder RNN (HRED) with Truncated Backpropagation Through Time (Truncated BPTT)", 295, "Python"]]], ["User", "DrDub", "https://avatars0.githubusercontent.com/u/315403?v=4", []], ["User", "ylogx", "https://avatars1.githubusercontent.com/u/3508878?v=4", [["aesthetics", "https://github.com/ylogx/aesthetics", "Image Aesthetics Toolkit - includes Fisher Vector implementation, AVA (Image Aesthetic Visual Analysis) dataset and fast multi-threaded downloader", 90, "Python"]]], ["User", "Corb3nik", "https://avatars0.githubusercontent.com/u/6225588?v=4", []], ["User", "carsonfarmer", "https://avatars3.githubusercontent.com/u/1220613?v=4", [["python_geospatial", "https://github.com/carsonfarmer/python_geospatial", "Geospatial Data in Python Tutorial Materials", 83, "Python"]]], ["User", "midgetspy", "https://avatars2.githubusercontent.com/u/63207?v=4", [["Sick-Beard", "https://github.com/midgetspy/Sick-Beard", "PVR & episode guide that downloads and manages all your TV shows ", 3033, "Python"]]], ["User", "jessamynsmith", "https://avatars0.githubusercontent.com/u/945458?v=4", [["talkbackbot", "https://github.com/jessamynsmith/talkbackbot", "IRC bot that responds to selected phrases with a quotation from a notable woman (defaults to answering \"that's what she said\" jokes)", 182, "Python"]]], ["User", "Deimos", "https://avatars0.githubusercontent.com/u/9033?v=4", [["SubredditSimulator", "https://github.com/Deimos/SubredditSimulator", "An automated subreddit with posts created using markov chains", 455, "Python"]]], ["User", "weskerfoot", "https://avatars2.githubusercontent.com/u/378351?v=4", [["DeleteFB", "https://github.com/weskerfoot/DeleteFB", "Automate Scrubbing your Facebook Presence", 2611, "Python"]]], ["User", "jych", "https://avatars1.githubusercontent.com/u/6865048?v=4", [["nips2015_vrnn", "https://github.com/jych/nips2015_vrnn", null, 246, "Python"], ["cle", "https://github.com/jych/cle", null, 89, "Python"]]], ["User", "meejah", "https://avatars3.githubusercontent.com/u/145599?v=4", [["txtorcon", "https://github.com/meejah/txtorcon", "Twisted-based asynchronous Tor control protocol implementation. Includes unit-tests, examples, state-tracking code and configuration abstraction.", 201, "Python"]]], ["User", "lightos", "https://avatars0.githubusercontent.com/u/464835?v=4", [["credmap", "https://github.com/lightos/credmap", "The Credential Mapper", 377, "Python"], ["Panoptic", "https://github.com/lightos/Panoptic", "Panoptic is an open source penetration testing tool that automates the process of search and retrieval of content for common log and config files through path traversal vulnerabilities.", 270, "Python"]]], ["User", "gabrielgrant", "https://avatars2.githubusercontent.com/u/493968?v=4", [["django-billing", "https://github.com/gabrielgrant/django-billing", "A simple, generic plans-, pricing- and recurring-billing app.", 129, "Python"]]], ["User", "wardi", "https://avatars2.githubusercontent.com/u/153258?v=4", [["speedometer", "https://github.com/wardi/speedometer", "Chart network TX/RX and file download rates on the console", 142, "Python"]]], ["User", "ankonzoid", "https://avatars2.githubusercontent.com/u/25497569?v=4", [["artificio", "https://github.com/ankonzoid/artificio", "Deep Learning Computer Vision Algorithms for Real-World Use", 257, "Python"], ["LearningX", "https://github.com/ankonzoid/LearningX", "Deep & Classical Reinforcement Learning + Machine Learning Examples in Python", 180, "Python"]]], ["User", "ethancaballero", "https://avatars2.githubusercontent.com/u/5994634?v=4", [["Improved-Dynamic-Memory-Networks-DMN-plus", "https://github.com/ethancaballero/Improved-Dynamic-Memory-Networks-DMN-plus", "Theano Implementation of DMN+ (Improved Dynamic Memory Networks) from the paper by Xiong, Merity, & Socher at MetaMind, http://arxiv.org/abs/1603.01417 (Dynamic Memory Networks for Visual and Textual Question Answering)", 164, "Python"]]], ["User", "danielegrattarola", "https://avatars0.githubusercontent.com/u/11634240?v=4", [["spektral", "https://github.com/danielegrattarola/spektral", "Graph Neural Networks with Keras and Tensorflow 2.", 587, "Python"], ["keras-gat", "https://github.com/danielegrattarola/keras-gat", "Keras implementation of the graph attention networks (GAT) by Veli\u010dkovi\u0107 et al. (2017; https://arxiv.org/abs/1710.10903)", 217, "Python"], ["twitter-sentiment-cnn", "https://github.com/danielegrattarola/twitter-sentiment-cnn", "An implementation in TensorFlow of a convolutional neural network (CNN) to perform sentiment classification on tweets.", 134, "Python"]]], ["User", "vineetjohn", "https://avatars1.githubusercontent.com/u/1531017?v=4", [["daily-coding-problem", "https://github.com/vineetjohn/daily-coding-problem", "Solutions to problems sent by dailycodingproblem.com", 630, "Python"]]], ["User", "dstndstn", "https://avatars3.githubusercontent.com/u/1065981?v=4", []], ["User", "alduxvm", "https://avatars3.githubusercontent.com/u/8823379?v=4", [["DronePilot", "https://github.com/alduxvm/DronePilot", "Automatic pilot that can control and fly several drones, including Pixhawk's, APM's and MultiWii's", 105, "Python"], ["rpi-opencv", "https://github.com/alduxvm/rpi-opencv", "openCV + Python tests using raspberry pi, camera module and usb cameras ", 103, "Python"], ["pyMultiWii", "https://github.com/alduxvm/pyMultiWii", "MultiWii Serial Protocol (MSP) API to send and receive data from firmware using MSP", 95, "Python"]]], ["User", "pmorissette", "https://avatars0.githubusercontent.com/u/409035?v=4", [["bt", "https://github.com/pmorissette/bt", "bt - flexible backtesting for Python", 725, "Python"], ["ffn", "https://github.com/pmorissette/ffn", "ffn - a financial function library for Python", 540, "Python"]]], ["User", "ueg1990", "https://avatars3.githubusercontent.com/u/3393794?v=4", [["faker-schema", "https://github.com/ueg1990/faker-schema", "Generate fake data using joke2k's faker and your own schema", 81, "Python"]]], ["User", "Belval", "https://avatars1.githubusercontent.com/u/5399488?v=4", [["TextRecognitionDataGenerator", "https://github.com/Belval/TextRecognitionDataGenerator", "A synthetic data generator for text recognition", 1089, "Python"], ["pdf2image", "https://github.com/Belval/pdf2image", "A python module that wraps the pdftoppm utility to convert PDF to PIL Image object", 485, "Python"], ["CRNN", "https://github.com/Belval/CRNN", "A TensorFlow implementation of https://github.com/bgshih/crnn", 251, "Python"]]], ["User", "mikeboers", "https://avatars3.githubusercontent.com/u/130470?v=4", [["PyAV", "https://github.com/mikeboers/PyAV", "\ufeff\ufeffPythonic bindings for FFmpeg's libraries.", 880, "Python"], ["PyHAML", "https://github.com/mikeboers/PyHAML", "Pythonic implementation of HAML, cross compiling to Mako template syntax.", 86, "Python"]]], ["User", "JackMc", "https://avatars2.githubusercontent.com/u/746519?v=4", []], ["User", "truskovskiyk", "https://avatars2.githubusercontent.com/u/7893705?v=4", [["nima.pytorch", "https://github.com/truskovskiyk/nima.pytorch", "NIMA: Neural IMage Assessment", 180, "Python"]]], ["User", "mricon", "https://avatars0.githubusercontent.com/u/112150?v=4", [["rev-proxy-grapher", "https://github.com/mricon/rev-proxy-grapher", "Reverse proxy grapher", 388, "Python"], ["totp-cgi", "https://github.com/mricon/totp-cgi", "A centralized totp solution based on google-authenticator", 120, "Python"]]], ["User", "TkTech", "https://avatars1.githubusercontent.com/u/72590?v=4", [["pysimdjson", "https://github.com/TkTech/pysimdjson", "Python bindings for the simdjson project.", 234, "Python"], ["notifico", "https://github.com/TkTech/notifico", "My personal http://cia.vc replacement. Now used by over 3000 projects.", 139, "Python"]]], ["User", "billmei", "https://avatars3.githubusercontent.com/u/2248622?v=4", []], ["User", "ppaquette", "https://avatars0.githubusercontent.com/u/416547?v=4", [["gym-super-mario", "https://github.com/ppaquette/gym-super-mario", "Gym - 32 levels of original Super Mario Bros", 234, "Python"], ["gym-doom", "https://github.com/ppaquette/gym-doom", "Gym - Doom environments based on VizDoom.", 88, "Python"]]], ["User", "Snivyn", "https://avatars2.githubusercontent.com/u/9308774?v=4", [["NERYS-product-monitor-lite", "https://github.com/Snivyn/NERYS-product-monitor-lite", "A universal product monitor. Capable of monitoring any site for products based on keywords. Optimized for Shopify. Sends alerts via Discord when new products are detected.", 93, "Python"]]], ["User", "josedolz", "https://avatars0.githubusercontent.com/u/5444841?v=4", [["LiviaNET", "https://github.com/josedolz/LiviaNET", "This repository contains the code of LiviaNET, a 3D fully convolutional neural network that was employed in our work: \"3D fully convolutional networks for subcortical segmentation in MRI: A large-scale study\"", 133, "Python"], ["HyperDenseNet", "https://github.com/josedolz/HyperDenseNet", "This repository contains the code of HyperDenseNet, a hyper-densely connected CNN to segment medical images in multi-modal image scenarios.", 102, "Python"]]], ["User", "vict0rsch", "https://avatars3.githubusercontent.com/u/9283470?v=4", [["deep_learning", "https://github.com/vict0rsch/deep_learning", "Deep Learning Resources and Tutorials using Keras and Lasagne", 415, "Python"]]], ["User", "pathetiq", "https://avatars3.githubusercontent.com/u/3966796?v=4", [["BurpSmartBuster", "https://github.com/pathetiq/BurpSmartBuster", "A Burp Suite content discovery plugin that add the smart into the Buster!", 344, "Python"]]], ["User", "amir-abdi", "https://avatars2.githubusercontent.com/u/4620480?v=4", [["keras_to_tensorflow", "https://github.com/amir-abdi/keras_to_tensorflow", "General code to convert a trained keras model into an inference tensorflow model", 1331, "Python"]]], ["User", "bartdag", "https://avatars3.githubusercontent.com/u/464322?v=4", [["pymining", "https://github.com/bartdag/pymining", "A few data mining algorithms in pure python", 410, "Python"], ["pylinkvalidator", "https://github.com/bartdag/pylinkvalidator", "pylinkvalidator is a standalone and pure python link validator and crawler that traverses a web site and reports errors (e.g., 500 and 404 errors) encountered.", 81, "Python"]]], ["User", "marclave", "https://avatars0.githubusercontent.com/u/6176314?v=4", [["InstaBot", "https://github.com/marclave/InstaBot", "A simple Instagram bot written in Python", 158, "Python"]]], ["User", "kayzhu", "https://avatars1.githubusercontent.com/u/1530877?v=4", [["LSHash", "https://github.com/kayzhu/LSHash", "A fast Python implementation of locality sensitive hashing. ", 430, "Python"]]], ["User", "lillypad", "https://avatars1.githubusercontent.com/u/9785864?v=4", []], ["User", "gwding", "https://avatars2.githubusercontent.com/u/7264698?v=4", [["draw_convnet", "https://github.com/gwding/draw_convnet", null, 1597, "Python"]]], ["User", "ellmetha", "https://avatars2.githubusercontent.com/u/3720615?v=4", [["django-machina", "https://github.com/ellmetha/django-machina", "A Django forum engine for building powerful community driven websites.", 375, "Python"]]], ["User", "shogunlab", "https://avatars2.githubusercontent.com/u/24401596?v=4", [["shuriken", "https://github.com/shogunlab/shuriken", "Cross-Site Scripting (XSS) command line tool for testing lists of XSS payloads on web apps.", 111, "Python"]]], ["User", "sfujim", "https://avatars3.githubusercontent.com/u/12649111?v=4", [["TD3", "https://github.com/sfujim/TD3", "PyTorch implementation of TD3 and DDPG for OpenAI gym tasks", 427, "Python"], ["BCQ", "https://github.com/sfujim/BCQ", "PyTorch implementation of BCQ for \"Off-Policy Deep Reinforcement Learning without Exploration\"", 147, "Python"]]], ["User", "atmb4u", "https://avatars2.githubusercontent.com/u/769447?v=4", [["dodo", "https://github.com/atmb4u/dodo", "Task Management for Hackers", 177, "Python"]]], ["User", "dmsimard", "https://avatars2.githubusercontent.com/u/1291204?v=4", [["ara-archive", "https://github.com/dmsimard/ara-archive", "This repository is an historical archive of https://github.com/dmsimard/ara, please use https://github.com/openstack/ara instead.", 122, "Python"]]], ["User", "voletiv", "https://avatars3.githubusercontent.com/u/22424247?v=4", [["self-attention-GAN-pytorch", "https://github.com/voletiv/self-attention-GAN-pytorch", "This is an almost exact replica in PyTorch of the Tensorflow version of Self-Attention GAN released by Google Brain in August 2018.", 110, "Python"]]], ["User", "zeropwn", "https://avatars1.githubusercontent.com/u/23712741?v=4", [["spyse.py", "https://github.com/zeropwn/spyse.py", "Python API wrapper and command-line client for the tools hosted on spyse.com.", 166, "Python"]]], ["User", "dorajam", "https://avatars3.githubusercontent.com/u/13997178?v=4", [["Convolutional-Network", "https://github.com/dorajam/Convolutional-Network", "A convolutional neural network from scratch", 102, "Python"]]], ["User", "ssokolow", "https://avatars3.githubusercontent.com/u/46915?v=4", [["quicktile", "https://github.com/ssokolow/quicktile", "Adds window-tiling hotkeys to any X11 desktop. (An analogue to WinSplit Revolution for people who don't want to use Compiz Grid)", 612, "Python"]]], ["User", "scottlawsonbc", "https://avatars2.githubusercontent.com/u/2927085?v=4", [["audio-reactive-led-strip", "https://github.com/scottlawsonbc/audio-reactive-led-strip", ":musical_note: :rainbow: Real-time LED strip music visualization using Python and the ESP8266 or Raspberry Pi", 1514, "Python"]]], ["User", "durandtibo", "https://avatars1.githubusercontent.com/u/9913164?v=4", [["wildcat.pytorch", "https://github.com/durandtibo/wildcat.pytorch", "PyTorch implementation of \"WILDCAT: Weakly Supervised Learning of Deep ConvNets for Image Classification, Pointwise Localization and Segmentation\", CVPR 2017", 215, "Python"]]], ["User", "mikepan", "https://avatars0.githubusercontent.com/u/2807333?v=4", [["GameEngineBook", "https://github.com/mikepan/GameEngineBook", "The Complete \"Game Development with Blender\" Book. Now Free.", 278, "Python"]]], ["User", "eddieantonio", "https://avatars3.githubusercontent.com/u/2294397?v=4", []], ["User", "alculquicondor", "https://avatars3.githubusercontent.com/u/1299064?v=4", [["psqlparse", "https://github.com/alculquicondor/psqlparse", "A python module that gives access to PostgreSQL's query parser, for turning SQL into a parse tree.", 87, "Python"]]], ["User", "chfoo", "https://avatars0.githubusercontent.com/u/234723?v=4", [["warcat", "https://github.com/chfoo/warcat", "Tool and library for handling Web ARChive (WARC) files.", 81, "Python"]]], ["User", "ptomato", "https://avatars0.githubusercontent.com/u/459371?v=4", []], ["User", "vithursant", "https://avatars1.githubusercontent.com/u/22207345?v=4", [["MagnetLoss-PyTorch", "https://github.com/vithursant/MagnetLoss-PyTorch", "PyTorch implementation of a deep metric learning technique called \"Magnet Loss\" from Facebook AI Research (FAIR) in ICLR 2016.", 212, "Python"]]], ["User", "dgoodwin", "https://avatars3.githubusercontent.com/u/51265?v=4", [["tito", "https://github.com/dgoodwin/tito", "A tool for managing rpm based git projects.", 298, "Python"]]], ["User", "caronc", "https://avatars1.githubusercontent.com/u/850374?v=4", [["apprise", "https://github.com/caronc/apprise", "Apprise - Push Notifications that work with just about every platform!", 2750, "Python"], ["nzb-notify", "https://github.com/caronc/nzb-notify", "Push Notifications to a large number of supported services for NZBGet and SABnzbd (based on Apprise)", 81, "Python"]]], ["User", "xingwangsfu", "https://avatars2.githubusercontent.com/u/9985961?v=4", [["caffe-yolo", "https://github.com/xingwangsfu/caffe-yolo", "YOLO (Real-Time Object Detection) in caffe ", 521, "Python"]]], ["User", "tbabej", "https://avatars2.githubusercontent.com/u/2123868?v=4", [["taskwiki", "https://github.com/tbabej/taskwiki", "Proper project management with Taskwarrior in vim.", 390, "Python"]]], ["User", "evilhero", "https://avatars2.githubusercontent.com/u/909424?v=4", [["mylar", "https://github.com/evilhero/mylar", "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents", 951, "Python"]]], ["User", "Seanny123", "https://avatars3.githubusercontent.com/u/1918825?v=4", [["da-rnn", "https://github.com/Seanny123/da-rnn", "Dual-Stage Attention-Based Recurrent Neural Net for Time Series Prediction", 146, "Python"]]], ["User", "reinderien", "https://avatars0.githubusercontent.com/u/1236420?v=4", [["mimic", "https://github.com/reinderien/mimic", "[ab]using Unicode to create tragedy", 3586, "Python"]]], ["User", "mfenniak", "https://avatars3.githubusercontent.com/u/91093?v=4", [["pyPdf", "https://github.com/mfenniak/pyPdf", "Pure-Python PDF Library; this repository is no longer maintained, please see https://github.com/knowah/PyPDF2/ insead.", 262, "Python"], ["pg8000", "https://github.com/mfenniak/pg8000", "A Pure-Python PostgreSQL Driver", 211, "Python"]]], ["User", "tdryer", "https://avatars0.githubusercontent.com/u/857374?v=4", [["hangups", "https://github.com/tdryer/hangups", "the first third-party instant messaging client for Google Hangouts", 1670, "Python"]]], ["User", "regner", "https://avatars2.githubusercontent.com/u/815037?v=4", []], ["User", "vaastav", "https://avatars3.githubusercontent.com/u/6758381?v=4", [["Fantasy-Premier-League", "https://github.com/vaastav/Fantasy-Premier-League", "Creates a .csv file of all players in the English Player League with their respective team and total fantasy points", 324, "Python"]]], ["User", "inikdom", "https://avatars2.githubusercontent.com/u/5723572?v=4", [["neural-chatbot", "https://github.com/inikdom/neural-chatbot", "A chatbot based on seq2seq architecture done with tensorflow.", 183, "Python"]]], ["User", "chuanconggao", "https://avatars3.githubusercontent.com/u/6963729?v=4", [["PrefixSpan-py", "https://github.com/chuanconggao/PrefixSpan-py", "The shortest yet efficient Python implementation of the sequential pattern mining algorithm PrefixSpan, closed sequential pattern mining algorithm BIDE, and generator sequential pattern mining algorithm FEAT.", 155, "Python"], ["extratools", "https://github.com/chuanconggao/extratools", "145+ extra higher-level functional tools beyond standard library's `itertools`, `functools`, etc. and popular third-party libraries like `toolz`.", 143, "Python"]]], ["User", "tylabs", "https://avatars3.githubusercontent.com/u/5994295?v=4", []], ["User", "laszukdawid", "https://avatars1.githubusercontent.com/u/11457963?v=4", [["PyEMD", "https://github.com/laszukdawid/PyEMD", "Python implementation of Empirical Mode Decompoisition (EMD) method", 270, "Python"]]], ["User", "siavashk", "https://avatars0.githubusercontent.com/u/1020752?v=4", [["pycpd", "https://github.com/siavashk/pycpd", "Pure Numpy Implementation of the Coherent Point Drift Algorithm", 177, "Python"]]], ["User", "fartashf", "https://avatars0.githubusercontent.com/u/7307513?v=4", [["vsepp", "https://github.com/fartashf/vsepp", "PyTorch Code for the paper \"VSE++: Improving Visual-Semantic Embeddings with Hard Negatives\"", 265, "Python"]]], ["User", "CW-Huang", "https://avatars3.githubusercontent.com/u/16561992?v=4", [["NAF", "https://github.com/CW-Huang/NAF", "Experiments for the Neural Autoregressive Flows paper", 82, "Python"]]], ["User", "soravux", "https://avatars0.githubusercontent.com/u/760735?v=4", [["scoop", "https://github.com/soravux/scoop", "SCOOP (Scalable COncurrent Operations in Python)", 431, "Python"], ["pytorch_tutorial", "https://github.com/soravux/pytorch_tutorial", "Quick PyTorch introduction and tutorial. Targets computer vision, graphics and machine learning researchers eager to try a new framework.", 101, "Python"]]], ["User", "ghantoos", "https://avatars3.githubusercontent.com/u/477561?v=4", [["lshell", "https://github.com/ghantoos/lshell", "lshell is a shell coded in Python, that lets you restrict a user's environment to limited sets of commands, choose to enable/disable any command over SSH (e.g. SCP, SFTP, rsync, etc.), log user's commands, implement timing restriction, and more. ", 350, "Python"]]], ["User", "aelnouby", "https://avatars3.githubusercontent.com/u/8495451?v=4", [["Text-to-Image-Synthesis", "https://github.com/aelnouby/Text-to-Image-Synthesis", "Pytorch implementation of Generative Adversarial Text-to-Image Synthesis paper", 239, "Python"]]], ["User", "jiwoongim", "https://avatars0.githubusercontent.com/u/848514?v=4", [["GRAN", "https://github.com/jiwoongim/GRAN", null, 115, "Python"]]], ["User", "bradbeattie", "https://avatars0.githubusercontent.com/u/54340?v=4", [["python-vote-core", "https://github.com/bradbeattie/python-vote-core", "Python libraries for various electoral methods", 129, "Python"]]], ["User", "pjkundert", "https://avatars1.githubusercontent.com/u/290924?v=4", [["cpppo", "https://github.com/pjkundert/cpppo", "Communications Protocol Python Parser and Originator -- EtherNet/IP CIP", 185, "Python"]]], ["User", "prashanthellina", "https://avatars1.githubusercontent.com/u/3989?v=4", [["pullbox", "https://github.com/prashanthellina/pullbox", "A dead-simple dropbox alternative using Git", 186, "Python"]]], ["User", "thanethomson", "https://avatars2.githubusercontent.com/u/212999?v=4", [["statik", "https://github.com/thanethomson/statik", "Multi-purpose static web site generator aimed at developers.", 233, "Python"]]], ["User", "jyapayne", "https://avatars0.githubusercontent.com/u/2645657?v=4", [["Web2Executable", "https://github.com/jyapayne/Web2Executable", "Uses NW.js to generate \"native\" apps for already existing web apps.", 814, "Python"]]], ["User", "andyholmes", "https://avatars0.githubusercontent.com/u/1265208?v=4", []], ["User", "masom", "https://avatars1.githubusercontent.com/u/438456?v=4", []], ["User", "arnab39", "https://avatars3.githubusercontent.com/u/13663345?v=4", [["FewShot_GAN-Unet3D", "https://github.com/arnab39/FewShot_GAN-Unet3D", "Tensorflow implementation of our paper: Few-shot 3D Multi-modal Medical Image Segmentation using Generative Adversarial Learning", 191, "Python"]]], ["User", "concurrencylabs", "https://avatars0.githubusercontent.com/u/17148977?v=4", [["aws-pricing-tools", "https://github.com/concurrencylabs/aws-pricing-tools", "Lambda functions and scripts designed to simplify AWS pricing calculations. Includes a Lambda function that calculates near real-time price.", 177, "Python"], ["aws-cost-analysis", "https://github.com/concurrencylabs/aws-cost-analysis", "Tools that make it easier to analyze AWS Cost and Usage reports. Initial version provides support for Athena and QuickSight.", 114, "Python"]]], ["User", "davidastephens", "https://avatars1.githubusercontent.com/u/5957850?v=4", [["pandas-finance", "https://github.com/davidastephens/pandas-finance", "High level API for access to and analysis of financial data.", 105, "Python"]]], ["User", "EthanMacdonald", "https://avatars1.githubusercontent.com/u/6300414?v=4", [["h-DQN", "https://github.com/EthanMacdonald/h-DQN", "Reproduction of Kulkarni et al. (2016) in Python", 97, "Python"]]], ["User", "pylessard", "https://avatars1.githubusercontent.com/u/2386969?v=4", [["python-udsoncan", "https://github.com/pylessard/python-udsoncan", "Python implementation of UDS (ISO-14229) standard.", 140, "Python"]]], ["User", "leesoh", "https://avatars1.githubusercontent.com/u/1276654?v=4", [["yams", "https://github.com/leesoh/yams", "A collection of Ansible roles for automating infosec builds.", 99, "Python"]]], ["User", "donkirkby", "https://avatars1.githubusercontent.com/u/1639148?v=4", [["live-py-plugin", "https://github.com/donkirkby/live-py-plugin", "Live coding in Python with PyCharm, Emacs, Sublime Text, or even a browser", 192, "Python"]]], ["User", "cjauvin", "https://avatars3.githubusercontent.com/u/488992?v=4", []], ["User", "Greymerk", "https://avatars2.githubusercontent.com/u/4789166?v=4", []], ["User", "dai-dao", "https://avatars1.githubusercontent.com/u/8712068?v=4", []], ["User", "lphuberdeau", "https://avatars0.githubusercontent.com/u/444229?v=4", []], ["User", "FitMachineLearning", "https://avatars2.githubusercontent.com/u/33303615?v=4", [["FitML", "https://github.com/FitMachineLearning/FitML", "A collection of python Machine Learning articles and examples. You will find code related to Reinforcement Learning, Q Learning, MDP, Bellman, OpenAI solutions and others. You can watch our agents here http://bit.ly/2Ayj4vA", 116, "Python"]]], ["User", "henrysky", "https://avatars1.githubusercontent.com/u/28623434?v=4", [["astroNN", "https://github.com/henrysky/astroNN", "Deep Learning for Astronomers with Tensorflow", 93, "Python"]]], ["User", "antoineleclair", "https://avatars0.githubusercontent.com/u/159290?v=4", []], ["User", "sharkone", "https://avatars3.githubusercontent.com/u/324894?v=4", [["BitTorrent.bundle", "https://github.com/sharkone/BitTorrent.bundle", "BitTorrent channel for Plex Media Server", 136, "Python"]]], ["User", "mcfletch", "https://avatars3.githubusercontent.com/u/476378?v=4", [["pyopengl", "https://github.com/mcfletch/pyopengl", "Repository for the PyOpenGL Project", 99, "Python"]]], ["User", "vishalkuo", "https://avatars3.githubusercontent.com/u/7549938?v=4", []], ["User", "larose", "https://avatars3.githubusercontent.com/u/1304831?v=4", [["utt", "https://github.com/larose/utt", "Ultimate Time Tracker - A simple command-line time tracking application written in Python", 112, "Python"]]], ["User", "marselester", "https://avatars3.githubusercontent.com/u/823099?v=4", []], ["User", "xuyuwei", "https://avatars0.githubusercontent.com/u/7553196?v=4", [["resnet-tf", "https://github.com/xuyuwei/resnet-tf", "ResNet Implementation in TensorFlow", 80, "Python"]]], ["User", "jctissier", "https://avatars2.githubusercontent.com/u/15806422?v=4", [["whatsapp-assistant-bot", "https://github.com/jctissier/whatsapp-assistant-bot", "A personal WhatsApp assistant bot that will help you search anything on the web (Google, Images, Google Maps)", 159, "Python"]]], ["User", "stevenpjg", "https://avatars3.githubusercontent.com/u/15150767?v=4", [["ddpg-aigym", "https://github.com/stevenpjg/ddpg-aigym", "Continuous control with deep reinforcement learning - Deep Deterministic Policy Gradient (DDPG) algorithm implemented in OpenAI Gym environments", 217, "Python"]]], ["User", "mrafayaleem", "https://avatars2.githubusercontent.com/u/2166151?v=4", []], ["User", "memmett", "https://avatars1.githubusercontent.com/u/135065?v=4", []], ["User", "lfos", "https://avatars1.githubusercontent.com/u/5530842?v=4", []], ["User", "qdm12", "https://avatars1.githubusercontent.com/u/15654980?v=4", []], ["User", "dohsimpson", "https://avatars3.githubusercontent.com/u/5865309?v=4", [["kubernetes-doc-pdf", "https://github.com/dohsimpson/kubernetes-doc-pdf", "Kubernetes PDF Documentation", 91, "Python"]]], ["User", "dobesv", "https://avatars2.githubusercontent.com/u/327833?v=4", []], ["User", "kneufeld", "https://avatars0.githubusercontent.com/u/786738?v=4", [["alkali", "https://github.com/kneufeld/alkali", "a simple python database", 104, "Python"]]], ["User", "aizquier", "https://avatars1.githubusercontent.com/u/12752634?v=4", [["voyagerimb", "https://github.com/aizquier/voyagerimb", "Voyager's Golden Disk Image Browser", 243, "Python"]]], ["User", "ericmartel", "https://avatars2.githubusercontent.com/u/1311890?v=4", [["Sublime-Text-2-Stackoverflow-Plugin", "https://github.com/ericmartel/Sublime-Text-2-Stackoverflow-Plugin", "Simple search on Stack Overflow utility for Sublime Text 2", 107, "Python"]]], ["User", "ammsa", "https://avatars2.githubusercontent.com/u/748271?v=4", [["Githeat", "https://github.com/ammsa/Githeat", "\ud83d\udd25 Interactive heatmap for your git repos", 118, "Python"]]], ["User", "gaining", "https://avatars3.githubusercontent.com/u/7690230?v=4", [["Resetter", "https://github.com/gaining/Resetter", "The easiest way to reset your debian or ubuntu based linux back to stock", 265, "Python"]]], ["User", "LiamBindle", "https://avatars2.githubusercontent.com/u/12772306?v=4", []], ["User", "prune998", "https://avatars2.githubusercontent.com/u/1110398?v=4", []], ["User", "billzhong", "https://avatars3.githubusercontent.com/u/1644011?v=4", [["inbox.py", "https://github.com/billzhong/inbox.py", "Python SMTP Server for Humans", 1486, "Python"]]], ["User", "nadirhamid", "https://avatars3.githubusercontent.com/u/7277417?v=4", []], ["User", "jseutter", "https://avatars3.githubusercontent.com/u/78388?v=4", [["ofxparse", "https://github.com/jseutter/ofxparse", "Ofx file format parser for Python", 154, "Python"]]], ["User", "duxingren14", "https://avatars0.githubusercontent.com/u/2570875?v=4", [["DualGAN", "https://github.com/duxingren14/DualGAN", "DualGAN-tensorflow: tensorflow implementation of DualGAN", 210, "Python"]]], ["User", "aroberge", "https://avatars2.githubusercontent.com/u/629698?v=4", [["friendly-traceback", "https://github.com/aroberge/friendly-traceback", "Aimed at Python beginners: replacing standard traceback by something easier to understand", 113, "Python"]]], ["User", "msoulier", "https://avatars2.githubusercontent.com/u/14530?v=4", [["tftpy", "https://github.com/msoulier/tftpy", "Pure Python TFTP library", 129, "Python"]]], ["User", "ssinger", "https://avatars1.githubusercontent.com/u/68425?v=4", []], ["User", "davidcaron", "https://avatars2.githubusercontent.com/u/16667564?v=4", [["pclpy", "https://github.com/davidcaron/pclpy", "Python bindings for the Point Cloud Library (PCL)", 92, "Python"]]], ["User", "lobocv", "https://avatars0.githubusercontent.com/u/6772396?v=4", [["pyperform", "https://github.com/lobocv/pyperform", "An easy and convienent way to performance test python code.", 217, "Python"]]], ["User", "coryo", "https://avatars1.githubusercontent.com/u/678207?v=4", [["ComicReader.bundle", "https://github.com/coryo/ComicReader.bundle", "Plex Media Server channel for comic archives.", 105, "Python"]]]]}