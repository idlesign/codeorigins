{"dt": "2018-06-30 08:06", "min_followers": 10, "min_stars": 37, "users": [["User", "michaelliao", "https://avatars2.githubusercontent.com/u/470058?v=4", [["learn-python3", "https://github.com/michaelliao/learn-python3", "Learn Python 3 Sample Code", 2353, "Python"], ["sinaweibopy", "https://github.com/michaelliao/sinaweibopy", "\u65b0\u6d6a\u5fae\u535aPython SDK", 1069, "Python"], ["learn-python", "https://github.com/michaelliao/learn-python", "\u5c0f\u767d\u7684Python\u5165\u95e8\u6559\u7a0b\uff1a\u90e8\u5206\u7ae0\u8282\u6e90\u7801", 389, "Python"], ["githubpy", "https://github.com/michaelliao/githubpy", "A simple GitHub v3 API SDK for Python", 128, "Python"], ["miniweibo", "https://github.com/michaelliao/miniweibo", "\u4f7f\u7528Python\u5f00\u53d1\u7684\u57fa\u4e8e\u65b0\u6d6a\u5fae\u535aAPI\u7684\u8ff7\u4f60\u5fae\u535a\u7f51\u7ad9", 71, "Python"]]], ["User", "breakwa11", "https://avatars0.githubusercontent.com/u/8436963?v=4", [["GFWList2PAC", "https://github.com/breakwa11/GFWList2PAC", "GFWList2PAC", 138, "Python"], ["dnsproxy", "https://github.com/breakwa11/dnsproxy", "A python dns proxy server", 41, "Python"]]], ["User", "programthink", "https://avatars2.githubusercontent.com/u/4027957?v=4", [["zhao", "https://github.com/programthink/zhao", "\u3010\u7f16\u7a0b\u968f\u60f3\u3011\u6574\u7406\u7684\u300a\u592a\u5b50\u515a\u5173\u7cfb\u7f51\u7edc\u300b\uff0c\u4e13\u95e8\u63ed\u9732\u8d75\u56fd\u7684\u6743\u8d35", 4593, "Python"]]], ["User", "lepture", "https://avatars2.githubusercontent.com/u/290496?v=4", [["flask-oauthlib", "https://github.com/lepture/flask-oauthlib", " If you are a company, you should use https://github.com/lepture/authlib instead.", 1241, "Python"], ["mistune", "https://github.com/lepture/mistune", "The fastest markdown parser in pure Python with renderer feature.", 1222, "Python"], ["flask-wtf", "https://github.com/lepture/flask-wtf", "Simple integration of Flask and WTForms, including CSRF, file upload and Recaptcha integration.", 779, "Python"], ["python-livereload", "https://github.com/lepture/python-livereload", "livereload server in python", 674, "Python"], ["authlib", "https://github.com/lepture/authlib", "The ultimate Python library in building OAuth and OpenID Connect servers. JWS,JWK,JWA,JWT included.", 529, "Python"], ["captcha", "https://github.com/lepture/captcha", "A captcha library that generates audio and image CAPTCHAs.", 363, "Python"], ["zerqu", "https://github.com/lepture/zerqu", "ZERQU is a content-focused API-based platform.", 157, "Python"], ["flask-weixin", "https://github.com/lepture/flask-weixin", "Weixin implementation in Flask.", 143, "Python"], ["otpauth", "https://github.com/lepture/otpauth", "Implements two-step verification of HOTP/TOTP. Also known as one time password.", 87, "Python"], ["tornado.ext", "https://github.com/lepture/tornado.ext", "!!!DEACTIVATE!!!", 79, "Python"], ["safe", "https://github.com/lepture/safe", "Is your password safe?", 51, "Python"], ["opencc-python", "https://github.com/lepture/opencc-python", "OpenCC binding for Python.", 47, "Python"], ["july", "https://github.com/lepture/july", "DEACTIVATE.", 46, "Python"], ["terminal", "https://github.com/lepture/terminal", "A terminal environment tools for python.", 44, "Python"]]], ["User", "qiwsir", "https://avatars2.githubusercontent.com/u/3646955?v=4", [["StarterLearningPython", "https://github.com/qiwsir/StarterLearningPython", "Learning Python: from Beginner to Master. http://www.itdiffer.com", 1732, "Python"], ["algorithm", "https://github.com/qiwsir/algorithm", null, 1690, "Python"], ["ITArticles", "https://github.com/qiwsir/ITArticles", null, 1630, "Python"], ["ApproachPython", "https://github.com/qiwsir/ApproachPython", "Read Python codes and understand them.www.itdiffer.com", 54, "Python"]]], ["User", "wepe", "https://avatars0.githubusercontent.com/u/9136322?v=4", [["MachineLearning", "https://github.com/wepe/MachineLearning", "Basic Machine Learning and Deep Learning", 2624, "Python"], ["O2O-Coupon-Usage-Forecast", "https://github.com/wepe/O2O-Coupon-Usage-Forecast", "1st Place Solution for O2O Coupon Usage Forecast", 758, "Python"], ["Kaggle-Solution", "https://github.com/wepe/Kaggle-Solution", "Solution Code for Kaggle Competition", 183, "Python"], ["TianChi-Industry4.0-Competition", "https://github.com/wepe/TianChi-Industry4.0-Competition", "1st Place Solution for TianChi-Industry4.0-Competition", 119, "Python"], ["AliTianChi", "https://github.com/wepe/AliTianChi", null, 116, "Python"], ["CaiNiao-DemandForecast-StoragePlaning", "https://github.com/wepe/CaiNiao-DemandForecast-StoragePlaning", "1st Place Season one & 6th Place Season two", 79, "Python"]]], ["User", "huangz1990", "https://avatars1.githubusercontent.com/u/536854?v=4", [["riacn-code", "https://github.com/huangz1990/riacn-code", "\u300aRedis\u5b9e\u6218\u300b\u4e00\u4e66\u7684\u76f8\u5173\u6e90\u7801\u3002", 179, "Python"], ["ooredis", "https://github.com/huangz1990/ooredis", "\u57fa\u4e8e redis-py \u4e4b\u4e0a\u7684\u4e00\u4e2a Mapper \uff0c\u8ba9\u4f60\u4ee5\u66f4 pythonic \u7684\u65b9\u5f0f\u6765\u64cd\u4f5c Redis \u3002", 57, "Python"]]], ["User", "dongweiming", "https://avatars0.githubusercontent.com/u/841395?v=4", [["web_develop", "https://github.com/dongweiming/web_develop", "\u300aPython Web\u5f00\u53d1\u5b9e\u6218\u300b\u4e66\u4e2d\u6e90\u7801", 816, "Python"], ["weapp-zhihulive", "https://github.com/dongweiming/weapp-zhihulive", "\u77e5\u4e4eLive\u5fae\u4fe1\u5c0f\u7a0b\u5e8f & asyncio\u722c\u866b", 247, "Python"], ["Mtime", "https://github.com/dongweiming/Mtime", "A spider... ^.^", 99, "Python"], ["mp", "https://github.com/dongweiming/mp", "\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u4ee3\u7801\u5e93", 59, "Python"], ["daenerys", "https://github.com/dongweiming/daenerys", "Scraping and Web Crawling Framework For Zhihu Live", 57, "Python"]]], ["User", "wangshub", "https://avatars0.githubusercontent.com/u/20924010?v=4", [["wechat_jump_game", "https://github.com/wangshub/wechat_jump_game", "\u5fae\u4fe1\u300a\u8df3\u4e00\u8df3\u300bPython \u8f85\u52a9", 13828, "Python"], ["Douyin-Bot", "https://github.com/wangshub/Douyin-Bot", "Python \u6296\u97f3\u673a\u5668\u4eba\uff0c\u8bba\u5982\u4f55\u5728\u6296\u97f3\u4e0a\u627e\u5230\u6f02\u4eae\u5c0f\u59d0\u59d0\uff1f\ud83d\ude0d ", 4043, "Python"], ["who_is_following", "https://github.com/wangshub/who_is_following", "\ud83d\udc40 \u8c01\u5728\u770b\u7740\u4f60\u5462\uff0c\u5927\u5144\u5f1f", 42, "Python"]]], ["User", "phuslu", "https://avatars3.githubusercontent.com/u/195836?v=4", [["pybuild", "https://github.com/phuslu/pybuild", "some python build script", 119, "Python"], ["dnsproxy", "https://github.com/phuslu/dnsproxy", "DNS Proxy over TCP to avoid DNS poisoning", 102, "Python"]]], ["User", "fxsjy", "https://avatars3.githubusercontent.com/u/167837?v=4", [["jieba", "https://github.com/fxsjy/jieba", "\u7ed3\u5df4\u4e2d\u6587\u5206\u8bcd", 14044, "Python"], ["finalseg", "https://github.com/fxsjy/finalseg", "Chinese Words Segment Library based on HMM model", 149, "Python"], ["jiebademo", "https://github.com/fxsjy/jiebademo", "a demo site for jieba", 99, "Python"], ["jparser", "https://github.com/fxsjy/jparser", "A readability parser which can extract title, content, images from html pages", 61, "Python"], ["diaosi", "https://github.com/fxsjy/diaosi", "simple and fast dictionary tool", 50, "Python"]]], ["User", "ring04h", "https://avatars3.githubusercontent.com/u/92474?v=4", [["wydomain", "https://github.com/ring04h/wydomain", "to discover subdomains of your target domain", 776, "Python"], ["weakfilescan", "https://github.com/ring04h/weakfilescan", "\u52a8\u6001\u591a\u7ebf\u7a0b\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u68c0\u6d4b\u5de5\u5177", 542, "Python"], ["wyproxy", "https://github.com/ring04h/wyproxy", "proxying and recording HTTP/HTTPs/Socks5 proxy flow, save to MYSQL database. ", 342, "Python"], ["wyportmap", "https://github.com/ring04h/wyportmap", "\u76ee\u6807\u7aef\u53e3\u626b\u63cf+\u7cfb\u7edf\u670d\u52a1\u6307\u7eb9\u8bc6\u522b", 235, "Python"], ["thorns", "https://github.com/ring04h/thorns", "thorns_project \u5206\u5e03\u5f0f\u5f02\u6b65\u961f\u5217\u7cfb\u7edf", 125, "Python"], ["rtcp2udp", "https://github.com/ring04h/rtcp2udp", "Reverse TCP Port to UDP Forwarding Tools", 121, "Python"], ["dirfuzz", "https://github.com/ring04h/dirfuzz", "\u591a\u7ebf\u7a0b\u7f51\u7ad9\u76ee\u5f55\u7a77\u4e3e\u626b\u63cf", 88, "Python"]]], ["User", "floodsung", "https://avatars0.githubusercontent.com/u/3880963?v=4", [["Deep-Learning-Papers-Reading-Roadmap", "https://github.com/floodsung/Deep-Learning-Papers-Reading-Roadmap", "Deep Learning papers reading roadmap for anyone who are eager to learn this amazing tech!", 17850, "Python"], ["DRL-FlappyBird", "https://github.com/floodsung/DRL-FlappyBird", "Playing Flappy Bird Using Deep Reinforcement Learning (Based on Deep Q Learning DQN using Tensorflow)", 353, "Python"], ["DDPG", "https://github.com/floodsung/DDPG", "Reimplementation of DDPG(Continuous Control with Deep Reinforcement Learning) based on OpenAI Gym + Tensorflow", 202, "Python"], ["LearningToCompare_FSL", "https://github.com/floodsung/LearningToCompare_FSL", "PyTorch code for CVPR 2018 paper: Learning to Compare: Relation Network for Few-Shot Learning (Few-Shot Learning part)", 191, "Python"], ["wechat_jump_end_to_end", "https://github.com/floodsung/wechat_jump_end_to_end", "Playing Wechat Jump Game with End-to-End Convolutional Neural Networks", 161, "Python"], ["DQN-Atari-Tensorflow", "https://github.com/floodsung/DQN-Atari-Tensorflow", "Simplest Version of playing Atari with Deep Q Learning  in Tensorflow", 105, "Python"]]], ["User", "lilydjwg", "https://avatars2.githubusercontent.com/u/440661?v=4", [["morerssplz", "https://github.com/lilydjwg/morerssplz", "Convert other article sources to RSS feeds", 198, "Python"], ["winterpy", "https://github.com/lilydjwg/winterpy", "My python scripts started in winter.", 139, "Python"], ["nvchecker", "https://github.com/lilydjwg/nvchecker", "New version checker for software releases", 86, "Python"], ["pssh", "https://github.com/lilydjwg/pssh", "Parallel SSH Tools", 53, "Python"], ["xmpptalk", "https://github.com/lilydjwg/xmpptalk", "An XMPP bot to make a chatroom", 44, "Python"]]], ["User", "tobegit3hub", "https://avatars0.githubusercontent.com/u/2715000?v=4", [["tensorflow_template_application", "https://github.com/tobegit3hub/tensorflow_template_application", "TensorFlow template application for deep learning", 1460, "Python"], ["advisor", "https://github.com/tobegit3hub/advisor", "Open-source implementation of Google Vizier for hyper parameters tuning", 282, "Python"], ["lambda-docker", "https://github.com/tobegit3hub/lambda-docker", "Event-driven code runtime like AWS Lambda service", 282, "Python"], ["tensorflow_examples", "https://github.com/tobegit3hub/tensorflow_examples", "TensorFlow Example Projects", 125, "Python"], ["deep_image_model", "https://github.com/tobegit3hub/deep_image_model", "Deep convolution/recurrent neural network project with TensorFlow", 99, "Python"], ["ml_implementation", "https://github.com/tobegit3hub/ml_implementation", "Implementation of Machine Learning Algorithms", 86, "Python"], ["deep_q", "https://github.com/tobegit3hub/deep_q", "Deep reinforcement learning with TensorFlow", 49, "Python"], ["tobe-algorithm-manual", "https://github.com/tobegit3hub/tobe-algorithm-manual", "Tobe Algorithm Manual", 41, "Python"]]], ["User", "521xueweihan", "https://avatars3.githubusercontent.com/u/8255800?v=4", [["HelloGitHub", "https://github.com/521xueweihan/HelloGitHub", ":octocat:\u5206\u4eab GitHub \u4e0a\u597d\u73a9\u3001\u5bb9\u6613\u4e0a\u624b\u7684\u9879\u76ee\uff0c\u5e2e\u4f60\u627e\u5230\u7f16\u7a0b\u7684\u4e50\u8da3\u3002\u6b22\u8fce\u63a8\u8350\u3001\u81ea\u8350\u9879\u76ee\uff0c\u8ba9\u66f4\u591a\u4eba\u77e5\u9053\u4f60\u7684\u9879\u76ee\u2b50\ufe0f", 5225, "Python"], ["python", "https://github.com/521xueweihan/python", "\u300a\u7b28\u65b9\u6cd5\u5b66 Python\u300b\uff08Learn Python the Hard Way\uff09\u5b66\u4e60\u7b14\u8bb0", 344, "Python"], ["hellogithub.com", "https://github.com/521xueweihan/hellogithub.com", "HelloGitHub.com \u7f51\u7ad9\u6e90\u7801", 192, "Python"]]], ["User", "ChenglongChen", "https://avatars3.githubusercontent.com/u/6316171?v=4", [["Kaggle_HomeDepot", "https://github.com/ChenglongChen/Kaggle_HomeDepot", "Turing Test's 3rd Place Solution for Home Depot Product Search Relevance Competition on Kaggle (https://www.kaggle.com/c/home-depot-product-search-relevance)", 328, "Python"], ["tensorflow-DeepFM", "https://github.com/ChenglongChen/tensorflow-DeepFM", "Tensorflow implementation of DeepFM for CTR prediction.", 307, "Python"], ["tensorflow-XNN", "https://github.com/ChenglongChen/tensorflow-XNN", "4th Place Solution for Mercari Price Suggestion Challenge on Kaggle (https://www.kaggle.com/c/mercari-price-suggestion-challenge)", 107, "Python"], ["pytorch-madrl", "https://github.com/ChenglongChen/pytorch-madrl", "PyTorch implementations of various DRL algorithms for both single agent and multi-agent.", 102, "Python"]]], ["User", "tualatrix", "https://avatars1.githubusercontent.com/u/35811?v=4", [["ubuntu-tweak", "https://github.com/tualatrix/ubuntu-tweak", "Ubuntu Tweak is a tool that makes it easy to configure your system and desktop settings. (This project is no longer under maintenance)", 603, "Python"], ["tools", "https://github.com/tualatrix/tools", "A lot of my tools", 72, "Python"], ["fcitx-gimpanel", "https://github.com/tualatrix/fcitx-gimpanel", "The GTK+ frontend of Fcitx input method framework", 42, "Python"]]], ["User", "FeeiCN", "https://avatars1.githubusercontent.com/u/1611552?v=4", [["GSIL", "https://github.com/FeeiCN/GSIL", "GitHub Sensitive Information Leakage\uff08GitHub\u654f\u611f\u4fe1\u606f\u6cc4\u9732\uff09", 642, "Python"], ["ESD", "https://github.com/FeeiCN/ESD", "Enumeration sub domains(\u679a\u4e3e\u5b50\u57df\u540d)", 223, "Python"], ["dict", "https://github.com/FeeiCN/dict", "Chinese and English translation tools in the command line\uff08\u547d\u4ee4\u884c\u4e0b\u4e2d\u82f1\u6587\u7ffb\u8bd1\u5de5\u5177\uff09", 169, "Python"]]], ["User", "wklken", "https://avatars3.githubusercontent.com/u/2002216?v=4", [["py-patterns", "https://github.com/wklken/py-patterns", "\u8bbe\u8ba1\u6a21\u5f0f\u7684python\u5b9e\u73b0", 94, "Python"], ["pytools", "https://github.com/wklken/pytools", "Some powerful scripts and tools  wrote by Python! Impressive", 58, "Python"]]], ["User", "chenjiandongx", "https://avatars2.githubusercontent.com/u/19553554?v=4", [["torrent-cli", "https://github.com/chenjiandongx/torrent-cli", "\ud83d\udd28 \u78c1\u529b\u83b7\u53d6\u5668\u547d\u4ee4\u884c\u5de5\u5177", 407, "Python"], ["cup-size", "https://github.com/chenjiandongx/cup-size", "\ud83d\udc40 \u5173\u4e8e\u5973\u6027\u6587\u80f8\u5c3a\u7801\u7684\u6df1\u5165\u63a2\u8ba8", 380, "Python"], ["mzitu", "https://github.com/chenjiandongx/mzitu", "\ud83d\udc67 \u7f8e\u5973\u5199\u771f\u5957\u56fe\u722c\u866b\uff08\u4e8c\uff09", 377, "Python"], ["mmjpg", "https://github.com/chenjiandongx/mmjpg", "\ud83d\udc69 \u7f8e\u5973\u5199\u771f\u5957\u56fe\u722c\u866b\uff08\u4e00\uff09", 156, "Python"], ["51job-spider", "https://github.com/chenjiandongx/51job-spider", "\ud83d\udd0e \u524d\u7a0b\u65e0\u5fe7 Python \u62db\u8058\u5c97\u4f4d\u4fe1\u606f\u722c\u53d6\u548c\u5206\u6790", 122, "Python"], ["bili-spider", "https://github.com/chenjiandongx/bili-spider", "\ud83d\udcfa B \u7ad9\u5168\u7ad9\u89c6\u9891\u4fe1\u606f\u722c\u866b", 119, "Python"], ["stackoverflow-spider", "https://github.com/chenjiandongx/stackoverflow-spider", "\ud83d\udcd6 \u722c\u53d6 Stackoverflow 100\u4e07 \u6761\u95ee\u7b54\u5e76\u7b80\u5355\u5206\u6790", 86, "Python"], ["Github-spider", "https://github.com/chenjiandongx/Github-spider", "Github \u4ed3\u5e93\u53ca\u7528\u6237\u5206\u6790\u722c\u866b", 81, "Python"], ["async-proxy-pool", "https://github.com/chenjiandongx/async-proxy-pool", "\ud83d\udd05 Pyhton3 \u5f02\u6b65\u722c\u866b\u4ee3\u7406\u6c60", 65, "Python"], ["soksaccounts", "https://github.com/chenjiandongx/soksaccounts", "\ud83d\udd25 Shadowsocks \u8d26\u53f7\u722c\u866b", 60, "Python"], ["HupuLive", "https://github.com/chenjiandongx/HupuLive", "\ud83c\udfc0 \u864e\u6251\u7bee\u7403\u76f4\u64ad\u547d\u4ee4\u884c\u7248", 43, "Python"]]], ["User", "Jack-Cherish", "https://avatars1.githubusercontent.com/u/16872370?v=4", [["python-spider", "https://github.com/Jack-Cherish/python-spider", ":rainbow:Python3\u7f51\u7edc\u722c\u866b\u5b9e\u6218\uff1aVIP\u89c6\u9891\u7834\u89e3\u52a9\u624b\uff1bGEETEST\u9a8c\u8bc1\u7801\u7834\u89e3\uff1b\u5c0f\u8bf4\u3001\u52a8\u6f2b\u4e0b\u8f7d\uff1b\u624b\u673aAPP\u722c\u53d6\uff1b\u8d22\u52a1\u62a5\u8868\u5165\u5e93\uff1b\u706b\u8f66\u7968\u62a2\u7968\uff1b\u6296\u97f3APP\u89c6\u9891\u4e0b\u8f7d\uff1b\u767e\u4e07\u82f1\u96c4\u8f85\u52a9\uff1b\u7f51\u6613\u4e91\u97f3\u4e50\u4e0b\u8f7d\uff1bB\u7ad9\u89c6\u9891\u548c\u5f39\u5e55\u4e0b\u8f7d", 3118, "Python"], ["Deep-Learning", "https://github.com/Jack-Cherish/Deep-Learning", ":computer:Tensorflow\u5b9e\u6218\uff1a\u624b\u5199\u6570\u5b57\u8bc6\u522b\u3001Discuz\u9a8c\u8bc1\u7801\u8bc6\u522b", 44, "Python"]]], ["User", "0x5e", "https://avatars3.githubusercontent.com/u/5144674?v=4", [["wechat-deleted-friends", "https://github.com/0x5e/wechat-deleted-friends", "\u67e5\u770b\u88ab\u5220\u7684\u5fae\u4fe1\u597d\u53cb", 4888, "Python"]]], ["User", "Hawstein", "https://avatars0.githubusercontent.com/u/2238491?v=4", [["snake-ai", "https://github.com/Hawstein/snake-ai", "a snake AI written in python", 574, "Python"], ["PyMinecraft", "https://github.com/Hawstein/PyMinecraft", "Minecraft\u6e90\u7801\u9605\u8bfb\u4e0e\u5206\u6790", 342, "Python"]]], ["User", "felixonmars", "https://avatars3.githubusercontent.com/u/1006477?v=4", [["dnsmasq-china-list", "https://github.com/felixonmars/dnsmasq-china-list", "Chinese-specific configuration to improve your favorite DNS server. Best partner for chnroutes.", 2142, "Python"], ["ydcv", "https://github.com/felixonmars/ydcv", "YouDao Console Version - Simple wrapper for Youdao online translate (Chinese <-> English) service API, as an alternative to the StarDict Console Version(sdcv).", 255, "Python"]]], ["User", "RicterZ", "https://avatars1.githubusercontent.com/u/5282759?v=4", [["BGmi", "https://github.com/RicterZ/BGmi", "BGmi is a cli tool for subscribed bangumi.", 345, "Python"], ["genpAss", "https://github.com/RicterZ/genpAss", "\u4e2d\u56fd\u7279\u8272\u7684\u5f31\u53e3\u4ee4\u751f\u6210\u5668", 314, "Python"], ["nhentai", "https://github.com/RicterZ/nhentai", "nhentai doujinshi downloader", 164, "Python"], ["websocket-injection", "https://github.com/RicterZ/websocket-injection", "WebSocket \u4e2d\u8f6c\u6ce8\u5165\u5de5\u5177", 74, "Python"]]], ["User", "geekan", "https://avatars1.githubusercontent.com/u/2707039?v=4", [["scrapy-examples", "https://github.com/geekan/scrapy-examples", "Multifarious Scrapy examples. Spiders for alexa / amazon / douban / douyu / github / linkedin etc.", 1963, "Python"], ["insane_crawler", "https://github.com/geekan/insane_crawler", "Download best ox videos, and sort them by our rank", 360, "Python"]]], ["User", "laike9m", "https://avatars1.githubusercontent.com/u/2592205?v=4", [["pdir2", "https://github.com/laike9m/pdir2", "Pretty dir() printing with joy:beer:", 942, "Python"], ["PyPunchP2P", "https://github.com/laike9m/PyPunchP2P", "Python\u5b9e\u73b0NAT\u7a7f\u900f+STUN+TURN+P2P\u804a\u5929 | Python P2P chat", 196, "Python"], ["ezcf", "https://github.com/laike9m/ezcf", "Import configuration file for Pythonista", 151, "Python"]]], ["User", "isnowfy", "https://avatars2.githubusercontent.com/u/596274?v=4", [["snownlp", "https://github.com/isnowfy/snownlp", "Python library for processing Chinese text", 3263, "Python"], ["pydown", "https://github.com/isnowfy/pydown", "An HTML5 presentation builder written by python", 690, "Python"], ["collaborative-editor", "https://github.com/isnowfy/collaborative-editor", "a real time online collaborative editor written by python", 84, "Python"]]], ["User", "yidao620c", "https://avatars3.githubusercontent.com/u/1510785?v=4", [["python3-cookbook", "https://github.com/yidao620c/python3-cookbook", "\u300aPython Cookbook\u300b 3rd Edition Translation", 4354, "Python"], ["core-scrapy", "https://github.com/yidao620c/core-scrapy", "python-scrapy demo", 570, "Python"], ["core-algorithm", "https://github.com/yidao620c/core-algorithm", "\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b(\u7b2c3\u7248) \u7b97\u6cd5\u96c6\u9526", 301, "Python"]]], ["User", "hongqn", "https://avatars3.githubusercontent.com/u/405587?v=4", [["umysqldb", "https://github.com/hongqn/umysqldb", "A DB-API compatible wrapper for umysql", 114, "Python"]]], ["User", "Urinx", "https://avatars0.githubusercontent.com/u/5365195?v=4", [["WeixinBot", "https://github.com/Urinx/WeixinBot", "\u7f51\u9875\u7248\u5fae\u4fe1API\uff0c\u5305\u542b\u7ec8\u7aef\u7248\u5fae\u4fe1\u53ca\u5fae\u4fe1\u673a\u5668\u4eba", 4938, "Python"]]], ["User", "gnemoug", "https://avatars3.githubusercontent.com/u/1902153?v=4", [["distribute_crawler", "https://github.com/gnemoug/distribute_crawler", "\u4f7f\u7528scrapy,redis, mongodb,graphite\u5b9e\u73b0\u7684\u4e00\u4e2a\u5206\u5e03\u5f0f\u7f51\u7edc\u722c\u866b,\u5e95\u5c42\u5b58\u50a8mongodb\u96c6\u7fa4,\u5206\u5e03\u5f0f\u4f7f\u7528redis\u5b9e\u73b0,\u722c\u866b\u72b6\u6001\u663e\u793a\u4f7f\u7528graphite\u5b9e\u73b0", 2786, "Python"], ["sina_reptile", "https://github.com/gnemoug/sina_reptile", "\u83b7\u53d6\u65b0\u6d6a\u5fae\u535a1000w\u7528\u6237\u7684\u57fa\u672c\u4fe1\u606f\u548c\u6bcf\u4e2a\u722c\u53d6\u7528\u6237\u6700\u8fd1\u53d1\u8868\u768450\u6761\u5fae\u535a,\u4f7f\u7528python\u7f16\u5199\uff0c\u591a\u8fdb\u7a0b\u722c\u53d6\uff0c\u5c06\u6570\u636e\u5b58\u50a8\u5728\u4e86mongodb\u4e2d", 432, "Python"]]], ["User", "naturomics", "https://avatars2.githubusercontent.com/u/19428529?v=4", [["CapsNet-Tensorflow", "https://github.com/naturomics/CapsNet-Tensorflow", "A Tensorflow implementation of CapsNet(Capsules Net) in Hinton's paper Dynamic Routing Between Capsules", 2901, "Python"], ["CapsLayer", "https://github.com/naturomics/CapsLayer", "CapsLayer: An advanced library for capsule theory", 190, "Python"]]], ["User", "lining0806", "https://avatars2.githubusercontent.com/u/2107245?v=4", [["PythonSpiderNotes", "https://github.com/lining0806/PythonSpiderNotes", "Python\u5165\u95e8\u7f51\u7edc\u722c\u866b\u4e4b\u7cbe\u534e\u7248", 2382, "Python"], ["TextMining", "https://github.com/lining0806/TextMining", "Python\u6587\u672c\u6316\u6398\u7cfb\u7edf Research of Text Mining System", 131, "Python"], ["Naive-Bayes-Classifier", "https://github.com/lining0806/Naive-Bayes-Classifier", "\u6734\u7d20\u8d1d\u53f6\u65af\u6587\u672c\u5206\u7c7b\u5668", 48, "Python"], ["MachineLearningAlgorithm", "https://github.com/lining0806/MachineLearningAlgorithm", "\u4e00\u4e9b\u5e38\u7528\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5b9e\u73b0", 47, "Python"]]], ["User", "the5fire", "https://avatars0.githubusercontent.com/u/1171349?v=4", [["django-practice-book", "https://github.com/the5fire/django-practice-book", "\u89c6\u9891\u914d\u5957\u6559\u6750", 57, "Python"]]], ["User", "chenyuntc", "https://avatars2.githubusercontent.com/u/9301117?v=4", [["PyTorchText", "https://github.com/chenyuntc/PyTorchText", "1st Place Solution for Zhihu Machine Learning Challenge . Implementation of various text-classification models.(\u77e5\u4e4e\u770b\u5c71\u676f\u7b2c\u4e00\u540d\u89e3\u51b3\u65b9\u6848)", 478, "Python"], ["pytorch-best-practice", "https://github.com/chenyuntc/pytorch-best-practice", "A Guidance on PyTorch Coding Style Based on Kaggle Dogs vs. Cats ", 150, "Python"], ["scene-baseline", "https://github.com/chenyuntc/scene-baseline", "PyTorch baseline for AI challenger Scene classification", 53, "Python"]]], ["User", "Xyntax", "https://avatars1.githubusercontent.com/u/12861404?v=4", [["POC-T", "https://github.com/Xyntax/POC-T", "\u6e17\u900f\u6d4b\u8bd5\u63d2\u4ef6\u5316\u5e76\u53d1\u6846\u67b6", 735, "Python"], ["FileSensor", "https://github.com/Xyntax/FileSensor", "Dynamic file detection tool based on crawler \u57fa\u4e8e\u722c\u866b\u7684\u52a8\u6001\u654f\u611f\u6587\u4ef6\u63a2\u6d4b\u5de5\u5177 ", 136, "Python"], ["DirBrute", "https://github.com/Xyntax/DirBrute", "\u591a\u7ebf\u7a0bWEB\u76ee\u5f55\u7206\u7834\u5de5\u5177 [Multi-thread WEB directory blasting tool(with dics inside) ]", 111, "Python"], ["baiduyun-brute", "https://github.com/Xyntax/baiduyun-brute", "[\u5df2\u5931\u6548] \u591a\u7ebf\u7a0b\u767e\u5ea6\u4e91(\u79c1\u5bc6\u5206\u4eab)\u5bc6\u7801\u7206\u7834\u5de5\u5177 pan.baidu.com", 77, "Python"], ["BingC", "https://github.com/Xyntax/BingC", "\u57fa\u4e8eBing\u641c\u7d22\u5f15\u64ce\u7684C\u6bb5/\u65c1\u7ad9\u67e5\u8be2\uff0c\u591a\u7ebf\u7a0b\uff0c\u652f\u6301API", 62, "Python"]]], ["User", "fanpei91", "https://avatars0.githubusercontent.com/u/5484841?v=4", [["simDHT", "https://github.com/fanpei91/simDHT", "A very simple DHT crawler, written in Python.", 571, "Python"], ["doubanspiders", "https://github.com/fanpei91/doubanspiders", "\u8c46\u74e3\u7535\u5f71\u3001\u4e66\u7c4d\u3001\u5c0f\u7ec4\u3001\u76f8\u518c\u3001\u4e1c\u897f\u7b49\u722c\u866b", 499, "Python"]]], ["User", "Andrew-liu", "https://avatars0.githubusercontent.com/u/7943725?v=4", [["my_blog_tutorial", "https://github.com/Andrew-liu/my_blog_tutorial", "It's the example of the development of blog by Django and Pure.", 377, "Python"], ["scrapy_example", "https://github.com/Andrew-liu/scrapy_example", "This repository store some example  to learn scrapy better", 158, "Python"], ["dou_ban_spider", "https://github.com/Andrew-liu/dou_ban_spider", "A Simple spider that use to crawl the douban Top 100 moive name and input all list", 135, "Python"]]], ["User", "wnzhang", "https://avatars2.githubusercontent.com/u/2649287?v=4", [["deep-ctr", "https://github.com/wnzhang/deep-ctr", "An attempt of training DNN models to predict ad click-through rate, implemented with Theano.", 297, "Python"], ["optimal-rtb", "https://github.com/wnzhang/optimal-rtb", "A benchmarking framework supporting the experiments in KDD'14 paper \"Optimal Real-Time Bidding for Display Advertising\"", 59, "Python"], ["make-ipinyou-data", "https://github.com/wnzhang/make-ipinyou-data", "This project is to formalise the iPinYou RTB data into a standard format for further researches.", 42, "Python"]]], ["User", "darknessomi", "https://avatars1.githubusercontent.com/u/6939375?v=4", [["musicbox", "https://github.com/darknessomi/musicbox", "\u7f51\u6613\u4e91\u97f3\u4e50\u547d\u4ee4\u884c\u7248\u672c", 6111, "Python"]]], ["User", "xxg1413", "https://avatars1.githubusercontent.com/u/1381803?v=4", [["python", "https://github.com/xxg1413/python", "Python\u5b66\u4e60", 1461, "Python"]]], ["User", "sunnyelf", "https://avatars1.githubusercontent.com/u/24275308?v=4", [["cheetah", "https://github.com/sunnyelf/cheetah", "a very fast brute force webshell password tool", 315, "Python"]]], ["User", "philsong", "https://avatars2.githubusercontent.com/u/1390304?v=4", []], ["User", "brightmart", "https://avatars0.githubusercontent.com/u/19634224?v=4", [["text_classification", "https://github.com/brightmart/text_classification", "all kinds of text classificaiton models and more with deep learning", 2212, "Python"], ["nlu_sim", "https://github.com/brightmart/nlu_sim", "all kinds of baseline models for sentence similarity", 100, "Python"], ["slot_filling_intent_joint_model", "https://github.com/brightmart/slot_filling_intent_joint_model", "attention based joint model for intent detection and slot filling ", 48, "Python"]]], ["User", "yihui-he", "https://avatars2.githubusercontent.com/u/10027339?v=4", [["channel-pruning", "https://github.com/yihui-he/channel-pruning", "Channel Pruning for Accelerating Very Deep Neural Networks", 488, "Python"], ["u-net", "https://github.com/yihui-he/u-net", "U-Net: Convolutional Networks for Biomedical Image Segmentation", 201, "Python"], ["GAN-MNIST", "https://github.com/yihui-he/GAN-MNIST", "Generative Adversarial Network for MNIST with tensorflow", 126, "Python"], ["resnet-cifar10-caffe", "https://github.com/yihui-he/resnet-cifar10-caffe", "ResNet 20 32 44 56 110 for CIFAR10 with caffe", 85, "Python"]]], ["User", "whtsky", "https://avatars3.githubusercontent.com/u/876694?v=4", [["Catsup", "https://github.com/whtsky/Catsup", "A lightweight static website generator which aims to be simple and elegant.", 131, "Python"], ["maga", "https://github.com/whtsky/maga", "Another DHT crawler written in Python using asyncio", 88, "Python"], ["PyWapFetion", "https://github.com/whtsky/PyWapFetion", "A simple Fetion lib for Python.", 72, "Python"], ["WeRoBot-SAE-demo", "https://github.com/whtsky/WeRoBot-SAE-demo", null, 42, "Python"]]], ["User", "yueyoum", "https://avatars3.githubusercontent.com/u/2081686?v=4", [["social-oauth", "https://github.com/yueyoum/social-oauth", "OAuth2 for Chinese social sites", 334, "Python"], ["django-siteuser", "https://github.com/yueyoum/django-siteuser", "Register, Login, OAuth2, Upload avatar...", 233, "Python"], ["renren-relationship", "https://github.com/yueyoum/renren-relationship", "\u4eba\u4eba\u597d\u53cb\u5173\u7cfb", 182, "Python"], ["seven-cow", "https://github.com/yueyoum/seven-cow", "Yet another qiniu cloud storage Python SDK. More Pythonic, More simple to use", 130, "Python"], ["django-social-login", "https://github.com/yueyoum/django-social-login", "[DISCARDED]A Django APP for Social accounts login via OAuth2 Service", 111, "Python"], ["django-upload-avatar", "https://github.com/yueyoum/django-upload-avatar", "A django app for upload avatars", 44, "Python"]]], ["User", "WangYihang", "https://avatars0.githubusercontent.com/u/16917636?v=4", [["Webshell-Sniper", "https://github.com/WangYihang/Webshell-Sniper", ":hammer: Manage your website via terminal", 200, "Python"], ["Reverse-Shell-Manager", "https://github.com/WangYihang/Reverse-Shell-Manager", ":hammer: A reverse shell manager via terminal", 116, "Python"], ["SourceLeakHacker", "https://github.com/WangYihang/SourceLeakHacker", ":bug: A multi threads web application source leak scanner", 61, "Python"], ["Exploit-Framework", "https://github.com/WangYihang/Exploit-Framework", ":fire: A Exploit framework for Web Vulnerabilities written in Python", 60, "Python"]]], ["User", "lcatro", "https://avatars1.githubusercontent.com/u/10431717?v=4", [["Machine-Learning-Note", "https://github.com/lcatro/Machine-Learning-Note", "\u673a\u5668\u5b66\u4e60\u7b14\u8bb0", 348, "Python"], ["PHP_Source_Audit_Tools", "https://github.com/lcatro/PHP_Source_Audit_Tools", "PHP \u767d\u76d2\u5206\u6790\u5de5\u5177,\u7ed3\u5408AST \u548c\u6570\u636e\u6d41\u8ddf\u8e2a\u5206\u6790\u4ee3\u7801,\u8fbe\u5230\u81ea\u52a8\u5316\u767d\u76d2\u5ba1\u8ba1\u529f\u80fd", 70, "Python"], ["browser_vuln_check", "https://github.com/lcatro/browser_vuln_check", "browser_vuln_check ,\u5229\u7528\u5df2\u77e5\u7684\u6d4f\u89c8\u5668\u6f0f\u6d1ePoC \u6765\u5feb\u901f\u68c0\u6d4bWebview \u548c\u6d4f\u89c8\u5668\u73af\u5883\u662f\u5426\u5b58\u5728\u5b89\u5168\u6f0f\u6d1e,\u53ea\u9700\u8981\u8bbf\u95eerun.html \u5373\u53ef\u83b7\u53d6\u6240\u6709\u626b\u63cf\u7ed3\u679c,\u9002\u7528\u573a\u666f\u5305\u542b:APP \u53d1\u5e03\u4e4b\u524d\u7684\u5185\u90e8\u5b89\u5168\u6d4b\u8bd5,\u7b2c\u4e09\u65b9Webview \u6f0f\u6d1e\u68c0\u6d4b\u7b49(browser_vuln_check framework using some known browser vulnerabilities PoC to quick automate aduit WebView or Browser security ,apply to application security before issue and detecting third-part WebView security)..", 61, "Python"], ["WebShell-Detect-By-Machine-Learning", "https://github.com/lcatro/WebShell-Detect-By-Machine-Learning", "\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u8bc6\u522bWebShell", 59, "Python"], ["CVE-2017-7269-Echo-PoC", "https://github.com/lcatro/CVE-2017-7269-Echo-PoC", "CVE-2017-7269 \u56de\u663ePoC ,\u7528\u4e8e\u8fdc\u7a0b\u6f0f\u6d1e\u68c0\u6d4b..", 57, "Python"]]], ["User", "xlzd", "https://avatars1.githubusercontent.com/u/5506906?v=4", [["img2html", "https://github.com/xlzd/img2html", "Convert image to HTML", 653, "Python"], ["zhihu.photo", "https://github.com/xlzd/zhihu.photo", "zhihu.photo Web \u53ca\u722c\u866b\u90e8\u5206\u6e90\u7801", 168, "Python"], ["xart", "https://github.com/xlzd/xart", " generate art ascii texts", 117, "Python"], ["xtls", "https://github.com/xlzd/xtls", "xtls: awesome tools by xlzd. ->", 62, "Python"]]], ["User", "mozillazg", "https://avatars2.githubusercontent.com/u/485054?v=4", [["python-pinyin", "https://github.com/mozillazg/python-pinyin", "\u6c49\u5b57\u8f6c\u62fc\u97f3(pypinyin)", 1065, "Python"], ["baidu-pcs-python-sdk", "https://github.com/mozillazg/baidu-pcs-python-sdk", "\u767e\u5ea6\u4e2a\u4eba\u4e91\u5b58\u50a8\uff08PCS\uff09Python SDK. \uff08\u56e0\u4e3a PCS \u670d\u52a1\u5df2\u5173\u95ed\uff0c\u63a8\u8350\u6539\u7528\u767e\u5ea6\u7f51\u76d8 API\uff1a https://github.com/ly0/baidupcsapi \uff09", 148, "Python"], ["pinyin-data", "https://github.com/mozillazg/pinyin-data", "\u6c49\u5b57\u62fc\u97f3\u6570\u636e", 136, "Python"], ["ShortURL", "https://github.com/mozillazg/ShortURL", "A URL  Shortener Site \u77ed\u7f51\u5740\u751f\u6210\u7f51\u7ad9\uff08web.py\uff09", 121, "Python"], ["bustard", "https://github.com/mozillazg/bustard", "A tiny WSGI web framework", 43, "Python"], ["random-avatar", "https://github.com/mozillazg/random-avatar", "Random Avatar(Identicon) Service.", 43, "Python"], ["python-shanbay", "https://github.com/mozillazg/python-shanbay", "\u63d0\u4f9b\u4e00\u7cfb\u5217\u64cd\u4f5c\u6247\u8d1d\u7f51 (www.shanbay.com) \u7684 API", 41, "Python"]]], ["User", "tonyseek", "https://avatars2.githubusercontent.com/u/624598?v=4", [["simple-rbac", "https://github.com/tonyseek/simple-rbac", "A simple role based access control utility for Python.", 202, "Python"], ["rsocks", "https://github.com/tonyseek/rsocks", "A SOCKS 4/5 reverse proxy server", 79, "Python"]]], ["User", "coffeehb", "https://avatars2.githubusercontent.com/u/5829776?v=4", [["Some-PoC-oR-ExP", "https://github.com/coffeehb/Some-PoC-oR-ExP", "\u5404\u79cd\u6f0f\u6d1epoc\u3001Exp\u7684\u6536\u96c6\u6216\u7f16\u5199", 654, "Python"], ["tools", "https://github.com/coffeehb/tools", "\u4e00\u4e9b\u5b9e\u7528\u7684python\u811a\u672c", 183, "Python"], ["struts2_check", "https://github.com/coffeehb/struts2_check", "\u4e00\u4e2a\u7528\u4e8e\u8bc6\u522b\u76ee\u6807\u7f51\u7ad9\u662f\u5426\u91c7\u7528Struts2\u6846\u67b6\u5f00\u53d1\u7684\u5de5\u5177demo", 78, "Python"], ["OCIFT", "https://github.com/coffeehb/OCIFT", "\u4e00\u4e2a\u534a\u81ea\u52a8\u5316\u547d\u4ee4\u6ce8\u5165\u6f0f\u6d1eFuzz\u5de5\u5177(One Semi-automation command injection vulnerability Fuzz tool)", 53, "Python"], ["SSTIF", "https://github.com/coffeehb/SSTIF", "\u4e00\u4e2aFuzzing\u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165\u6f0f\u6d1e\u7684\u534a\u81ea\u52a8\u5316\u5de5\u5177", 51, "Python"]]], ["User", "lexdene", "https://avatars3.githubusercontent.com/u/694227?v=4", []], ["User", "waylybaye", "https://avatars2.githubusercontent.com/u/596620?v=4", []], ["User", "shanzi", "https://avatars0.githubusercontent.com/u/557294?v=4", []], ["User", "egrcc", "https://avatars3.githubusercontent.com/u/6469953?v=4", [["zhihu-python", "https://github.com/egrcc/zhihu-python", "\u83b7\u53d6\u77e5\u4e4e\u5185\u5bb9\u4fe1\u606f\uff0c\u5305\u62ec\u95ee\u9898\uff0c\u7b54\u6848\uff0c\u7528\u6237\uff0c\u6536\u85cf\u5939\u4fe1\u606f", 1918, "Python"]]], ["User", "aploium", "https://avatars3.githubusercontent.com/u/15957250?v=4", [["zmirror", "https://github.com/aploium/zmirror", "The next-gen reverse proxy for full site mirroring", 1257, "Python"], ["shootback", "https://github.com/aploium/shootback", "a reverse TCP tunnel let you access target behind NAT or firewall", 486, "Python"], ["zmirror-onekey", "https://github.com/aploium/zmirror-onekey", "\u4e00\u952e\u90e8\u7f72zmirror\u955c\u50cf", 271, "Python"]]], ["User", "xchaoinfo", "https://avatars3.githubusercontent.com/u/10547442?v=4", [["fuck-login", "https://github.com/xchaoinfo/fuck-login", "\u6a21\u62df\u767b\u5f55\u4e00\u4e9b\u77e5\u540d\u7684\u7f51\u7ad9\uff0c\u4e3a\u4e86\u65b9\u4fbf\u722c\u53d6\u9700\u8981\u767b\u5f55\u7684\u7f51\u7ad9", 4205, "Python"]]], ["User", "lawlite19", "https://avatars3.githubusercontent.com/u/14356062?v=4", [["MachineLearning_Python", "https://github.com/lawlite19/MachineLearning_Python", "\u673a\u5668\u5b66\u4e60\u7b97\u6cd5python\u5b9e\u73b0", 881, "Python"], ["PythonCrawler-Scrapy-Mysql-File-Template", "https://github.com/lawlite19/PythonCrawler-Scrapy-Mysql-File-Template", "scrapy\u722c\u866b\u6846\u67b6\u6a21\u677f\uff0c\u5c06\u6570\u636e\u4fdd\u5b58\u5230Mysql\u6570\u636e\u5e93\u6216\u8005\u6587\u4ef6\u4e2d\u3002", 79, "Python"]]], ["User", "Flowerowl", "https://avatars3.githubusercontent.com/u/1586995?v=4", [["ici", "https://github.com/Flowerowl/ici", ":boom:A dictionary used by programmers in the command line", 170, "Python"]]], ["User", "lanbing510", "https://avatars1.githubusercontent.com/u/6869284?v=4", [["DouBanSpider", "https://github.com/lanbing510/DouBanSpider", "\u8c46\u74e3\u8bfb\u4e66\u7684\u722c\u866b", 1185, "Python"], ["LianJiaSpider", "https://github.com/lanbing510/LianJiaSpider", "\u94fe\u5bb6\u722c\u866b", 319, "Python"]]], ["User", "zTrix", "https://avatars3.githubusercontent.com/u/471934?v=4", [["zio", "https://github.com/zTrix/zio", "unified io lib for pwning development written in python", 270, "Python"]]], ["User", "tg123", "https://avatars1.githubusercontent.com/u/170430?v=4", []], ["User", "shiyanhui", "https://avatars0.githubusercontent.com/u/7406269?v=4", [["Young", "https://github.com/shiyanhui/Young", "A full-featured forum software built on Tornado and MongoDB.", 601, "Python"], ["FileHeader", "https://github.com/shiyanhui/FileHeader", "A powerful file templating plugin for Sublime Text", 170, "Python"], ["Compiler", "https://github.com/shiyanhui/Compiler", "Compiler for C language in python", 141, "Python"]]], ["User", "az0ne", "https://avatars1.githubusercontent.com/u/8131223?v=4", [["Github_Nuggests", "https://github.com/az0ne/Github_Nuggests", "\u81ea\u52a8\u722c\u53d6Github\u4e0a\u6587\u4ef6\u654f\u611f\u4fe1\u606f\u6cc4\u9732\uff0c\u6293\u53d6\u90ae\u7bb1\u5bc6\u7801\u5e76\u81ea\u52a8\u767b\u5f55\u90ae\u7bb1\u9a8c\u8bc1\uff0c\u652f\u6301126\uff0cqq\uff0csina\uff0c163\u90ae\u7bb1", 102, "Python"], ["python_backdoor", "https://github.com/az0ne/python_backdoor", "\u8fc7360\u4e3b\u52a8\u9632\u5fa1360\u6740\u6bd2\u4ee5\u524d99%\u6740\u8f6f\u7684python\u540e\u95e8", 50, "Python"]]], ["User", "CaledoniaProject", "https://avatars0.githubusercontent.com/u/1357701?v=4", []], ["User", "9miao", "https://avatars1.githubusercontent.com/u/5196133?v=4", [["Firefly", "https://github.com/9miao/Firefly", "Distributed Game Server Framework", 978, "Python"], ["G-Firefly", "https://github.com/9miao/G-Firefly", "Firefly's gevent version, with better perfromance than its previous twisted version", 108, "Python"]]], ["User", "m13253", "https://avatars3.githubusercontent.com/u/1808930?v=4", [["BiliDan", "https://github.com/m13253/BiliDan", "Play videos on Bilibili.com with MPV and Danmaku2ASS", 521, "Python"], ["danmaku2ass", "https://github.com/m13253/danmaku2ass", "Convert comments from Niconico/AcFun/bilibili to ASS format", 210, "Python"]]], ["User", "huxiaoman7", "https://avatars1.githubusercontent.com/u/19527386?v=4", [["PaddlePaddle_code", "https://github.com/huxiaoman7/PaddlePaddle_code", "\u7528PaddlePaddle\u548cTensorflow\u5b9e\u73b0\u5e38\u7528\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5", 140, "Python"]]], ["User", "OneSourceCat", "https://avatars0.githubusercontent.com/u/9295957?v=4", [["scan-framework", "https://github.com/OneSourceCat/scan-framework", "A framework used for Vulnerability scanning", 91, "Python"], ["sqli-proxy", "https://github.com/OneSourceCat/sqli-proxy", null, 77, "Python"]]], ["User", "youfou", "https://avatars0.githubusercontent.com/u/16631068?v=4", [["wxpy", "https://github.com/youfou/wxpy", "\u5fae\u4fe1\u673a\u5668\u4eba / \u53ef\u80fd\u662f\u6700\u4f18\u96c5\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7 API \u2728\u2728", 5754, "Python"], ["liaoxuefeng-tutorials", "https://github.com/youfou/liaoxuefeng-tutorials", "\u7528 Python \u81ea\u52a8\u6574\u7406\u5ed6\u96ea\u5cf0\u7684 Git, Python 2/3, JavaScript \u6559\u7a0b\uff0c\u4fdd\u5b58\u4e3a HTML \u683c\u5f0f\uff0c\u53ef\u7528\u4e8e\u5236\u4f5c\u7535\u5b50\u4e66", 75, "Python"], ["hsdata", "https://github.com/youfou/hsdata", "\u7528\u6570\u636e\u73a9\u7089\u77f3\uff01\u5feb\u901f\u6536\u96c6\u548c\u5206\u6790\u7089\u77f3\u4f20\u8bf4\u7684\u5361\u724c\u53ca\u5361\u7ec4\u6570\u636e", 66, "Python"]]], ["User", "boy-hack", "https://avatars0.githubusercontent.com/u/18695984?v=4", [["w9scan", "https://github.com/boy-hack/w9scan", "\u5b66\u4e60python\uff0c\u5b66\u4e60\u9ed1\u5ba2", 364, "Python"], ["gwhatweb", "https://github.com/boy-hack/gwhatweb", "CMS\u8bc6\u522b python gevent\u5b9e\u73b0", 116, "Python"], ["pythonwebhack", "https://github.com/boy-hack/pythonwebhack", "\u7528python\u5b9e\u73b0\u7684web\u6846\u67b6\u5efa\u7acb\u7684\u5728\u7ebf\u6e17\u900f\u5e73\u53f0", 73, "Python"], ["w8fuckcdn", "https://github.com/boy-hack/w8fuckcdn", "Get website IP address by scanning the entire net  \u901a\u8fc7\u626b\u63cf\u5168\u7f51\u7ed5\u8fc7CDN\u83b7\u53d6\u7f51\u7ad9IP\u5730\u5740", 66, "Python"]]], ["User", "chineking", "https://avatars1.githubusercontent.com/u/357506?v=4", [["cola", "https://github.com/chineking/cola", "A high-level distributed crawling framework.", 1262, "Python"]]], ["User", "seisman", "https://avatars2.githubusercontent.com/u/3974108?v=4", [["how-to-write-makefile", "https://github.com/seisman/how-to-write-makefile", "\u8ddf\u6211\u4e00\u8d77\u5199Makefile\u91cd\u5236\u7248", 425, "Python"]]], ["User", "PytLab", "https://avatars1.githubusercontent.com/u/8553710?v=4", [["gaft", "https://github.com/PytLab/gaft", "A Genetic Algorithm Framework in Python", 201, "Python"], ["VASPy", "https://github.com/PytLab/VASPy", "Manipulating VASP files with Python.", 74, "Python"], ["simpleflow", "https://github.com/PytLab/simpleflow", "A simple TensorFlow-like graph computation framework in Python for learning purpose", 71, "Python"]]], ["User", "tengzhangchao", "https://avatars1.githubusercontent.com/u/16537831?v=4", [["BaiDuPan", "https://github.com/tengzhangchao/BaiDuPan", "\u767e\u5ea6\u7f51\u76d8\u81ea\u52a8\u6dfb\u52a0\u8d44\u6e90\u811a\u672c", 132, "Python"], ["Struts2_045-Poc", "https://github.com/tengzhangchao/Struts2_045-Poc", "Struts2-045 POC", 96, "Python"], ["microsoftSpider", "https://github.com/tengzhangchao/microsoftSpider", "\u722c\u53d6\u5fae\u8f6f\u6f0f\u6d1e\u4fe1\u606f\uff0cMS\u5bf9\u5e94\u7684\u6bcf\u4e2a\u7248\u672c\u64cd\u4f5c\u7cfb\u7edfKB\u53f7\u4ee5\u53ca\u8865\u4e01\u4e0b\u8f7d\u5730\u5740\u3002", 45, "Python"]]], ["User", "Chyroc", "https://avatars3.githubusercontent.com/u/15604894?v=4", [["WechatSogou", "https://github.com/Chyroc/WechatSogou", "\u57fa\u4e8e\u641c\u72d7\u5fae\u4fe1\u641c\u7d22\u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u722c\u866b\u63a5\u53e3", 2185, "Python"], ["JDong", "https://github.com/Chyroc/JDong", "\u4eac\u4e1c\u6570\u636e\u722c\u866b\u63a5\u53e3", 110, "Python"]]], ["User", "ferventdesert", "https://avatars3.githubusercontent.com/u/5305722?v=4", [["etlpy", "https://github.com/ferventdesert/etlpy", "a smart stream-like crawler & etl python library", 322, "Python"], ["Hawk-Projects", "https://github.com/ferventdesert/Hawk-Projects", "Project configurations of Hawk and etlpy.  xml-format workflow define", 125, "Python"], ["tnpy", "https://github.com/ferventdesert/tnpy", "a text analyzing (match, rewrite, extract) engine  (python edition)", 55, "Python"]]], ["User", "vicalloy", "https://avatars2.githubusercontent.com/u/43507?v=4", [["LBForum", "https://github.com/vicalloy/LBForum", "LBForum is a forum engine written in Python using Django", 547, "Python"], ["DPress", "https://github.com/vicalloy/DPress", "A simple blog powered by Django", 83, "Python"], ["lbforum-site", "https://github.com/vicalloy/lbforum-site", "LBForum's Demo Site", 61, "Python"], ["django-lb-workflow", "https://github.com/vicalloy/django-lb-workflow", "Reusable workflow library for Django", 59, "Python"]]], ["User", "kamikat", "https://avatars3.githubusercontent.com/u/1108801?v=4", []], ["User", "cedricporter", "https://avatars1.githubusercontent.com/u/1559563?v=4", [["url-shorten", "https://github.com/cedricporter/url-shorten", "The 163.gs url shorten service written by python.", 83, "Python"]]], ["User", "lxyu", "https://avatars3.githubusercontent.com/u/678685?v=4", [["17monip", "https://github.com/lxyu/17monip", "IP search based on 17mon.cn, the best IP database for China.", 265, "Python"], ["weibo", "https://github.com/lxyu/weibo", "Python sina weibo sdk. More simpler and cleaner than the official one.", 215, "Python"], ["pinyin", "https://github.com/lxyu/pinyin", "A simple python script to translate chinese to pinyin based on Mandarin.dat", 127, "Python"], ["kindle-clippings", "https://github.com/lxyu/kindle-clippings", "A simple python script to extract clippings from 'My Clippings.txt', organize, store and output them in a more elegant way.", 62, "Python"]]], ["User", "liuwons", "https://avatars2.githubusercontent.com/u/9864950?v=4", [["wxBot", "https://github.com/liuwons/wxBot", "Python\u7f51\u9875\u5fae\u4fe1API", 3934, "Python"], ["green", "https://github.com/liuwons/green", "\u5fae\u4fe1\u516c\u4f17\u53f7\u6e90\u7801 - \u5fae\u4fe1\u53f7Ms_haoqi", 48, "Python"]]], ["User", "Yikun", "https://avatars2.githubusercontent.com/u/1736354?v=4", []], ["User", "hubo1016", "https://avatars3.githubusercontent.com/u/14069404?v=4", [["vlcp", "https://github.com/hubo1016/vlcp", "A production-ready SDN controller, and a highly-extensible SDN framework.", 124, "Python"], ["aiogrpc", "https://github.com/hubo1016/aiogrpc", "asyncio wrapper for grpc.io", 48, "Python"]]], ["User", "wooparadog", "https://avatars2.githubusercontent.com/u/1130984?v=4", [["pystack", "https://github.com/wooparadog/pystack", "Tool to dump python thread and greenlet stacks.", 59, "Python"]]], ["User", "gaojiuli", "https://avatars1.githubusercontent.com/u/15275188?v=4", [["toapi", "https://github.com/gaojiuli/toapi", "Every web site provides APIs.", 2517, "Python"], ["gain", "https://github.com/gaojiuli/gain", "Web crawling framework  based on asyncio.", 1532, "Python"], ["tomd", "https://github.com/gaojiuli/tomd", "Convert HTML to Markdown.", 313, "Python"], ["xweb", "https://github.com/gaojiuli/xweb", "Web framework for the zen of python.", 277, "Python"]]], ["User", "aisk", "https://avatars0.githubusercontent.com/u/699636?v=4", [["pic2ascii", "https://github.com/aisk/pic2ascii", "convert pictrue to ascii code", 52, "Python"]]], ["User", "liluo", "https://avatars1.githubusercontent.com/u/741755?v=4", [["py-oauth2", "https://github.com/liluo/py-oauth2", "A Python wrapper for the OAuth 2.0 specification", 100, "Python"]]], ["User", "Nyloner", "https://avatars2.githubusercontent.com/u/9510902?v=4", [["Nyspider", "https://github.com/Nyloner/Nyspider", "\u5404\u79cd\u722c\u866b---\u5927\u4f17\u70b9\u8bc4,\u5b89\u5c45\u5ba2\uff0c58\uff0c\u4eba\u4eba\u8d37\uff0c\u62cd\u62cd\u8d37, IT\u6854\u5b50,\u62c9\u52fe\u7f51\uff0c\u8c46\u74e3,\u641c\u623f\u7f51,ASO100,\u6c14\u8c61\u6570\u636e,\u732b\u773c\u7535\u5f71,\u94fe\u5bb6,PM25.in...", 823, "Python"]]], ["User", "zihaolucky", "https://avatars3.githubusercontent.com/u/4514568?v=4", []], ["User", "messense", "https://avatars0.githubusercontent.com/u/1556054?v=4", [["wechat-bot", "https://github.com/messense/wechat-bot", "A robot of wechat based on python (Not maintained)", 155, "Python"]]], ["User", "reorx", "https://avatars2.githubusercontent.com/u/405972?v=4", [["httpstat", "https://github.com/reorx/httpstat", "curl statistics made simple", 3151, "Python"], ["torext", "https://github.com/reorx/torext", "[WORKING ON] The missing tornado mate", 57, "Python"]]], ["User", "BeginMan", "https://avatars0.githubusercontent.com/u/4414032?v=4", [["newBlog", "https://github.com/BeginMan/newBlog", "simple django blog.", 71, "Python"], ["pytool", "https://github.com/BeginMan/pytool", "Python tools focus on modern tools and idioms.", 48, "Python"]]], ["User", "huxuan", "https://avatars2.githubusercontent.com/u/726061?v=4", [["xiami_auto_checkin", "https://github.com/huxuan/xiami_auto_checkin", "A python script implement auto checkin on xiami.com", 46, "Python"]]], ["User", "Skycrab", "https://avatars2.githubusercontent.com/u/1755025?v=4", [["weixin-knife", "https://github.com/Skycrab/weixin-knife", "weixin python framework", 312, "Python"], ["wzhifuSDK", "https://github.com/Skycrab/wzhifuSDK", "\u5fae\u4fe1\u652f\u4ed8SDK", 169, "Python"]]], ["User", "jimenbian", "https://avatars2.githubusercontent.com/u/6119538?v=4", [["DataMining", "https://github.com/jimenbian/DataMining", "My data mining code\uff01", 113, "Python"]]], ["User", "atupal", "https://avatars2.githubusercontent.com/u/1540389?v=4", [["webqq", "https://github.com/atupal/webqq", "urllib2\u6a21\u62df\u767b\u9646webqq\u63a5\u6536\u53d1\u6d88\u606f\uff0c \u8fd8\u6709\u4e00\u4e2acli\u7248\u672c\u7684\u5728github\u4e0a", 58, "Python"]]], ["User", "JackonYang", "https://avatars0.githubusercontent.com/u/3008778?v=4", [["captcha-tensorflow", "https://github.com/JackonYang/captcha-tensorflow", "Image Captcha Solving Using TensorFlow and CNN Model. Accuracy 90%+", 264, "Python"], ["renren", "https://github.com/JackonYang/renren", "\u4eba\u4eba\u7f51\u4fe1\u606f\u6293\u53d6\u4e0e\u6570\u636e\u6316\u6398\u3002social network analysis", 71, "Python"], ["bookhub", "https://github.com/JackonYang/bookhub", "eBook manager and sharing tools", 63, "Python"]]], ["User", "SilverRainZ", "https://avatars0.githubusercontent.com/u/8090459?v=4", []], ["User", "adyliu", "https://avatars3.githubusercontent.com/u/1171396?v=4", []], ["User", "neargle", "https://avatars0.githubusercontent.com/u/7868679?v=4", [["ver-observer", "https://github.com/neargle/ver-observer", "Detection version of framework \\ CMS \\ dev-dependence on target website.", 81, "Python"]]], ["User", "kelwin", "https://avatars3.githubusercontent.com/u/1547008?v=4", [["apkil", "https://github.com/kelwin/apkil", "An APK instrumentation library and DroidBox APIMonitor", 51, "Python"]]], ["User", "Q2h1Cg", "https://avatars2.githubusercontent.com/u/3953030?v=4", [["CMS-Exploit-Framework", "https://github.com/Q2h1Cg/CMS-Exploit-Framework", "CMS Exploit Framework", 120, "Python"], ["xss_scan", "https://github.com/Q2h1Cg/xss_scan", "XSS Scan", 63, "Python"]]], ["User", "fy0", "https://avatars1.githubusercontent.com/u/1579850?v=4", [["fpage", "https://github.com/fy0/fpage", "Tornado project generator. Start a project with tornado, mako/jinjia2 and sqlalchemy/peewee in a minute.", 202, "Python"]]], ["User", "coderzh", "https://avatars0.githubusercontent.com/u/329164?v=4", [["coderzh-hugo-blog", "https://github.com/coderzh/coderzh-hugo-blog", "My Perfect Hugo Blog", 53, "Python"]]], ["User", "fantix", "https://avatars1.githubusercontent.com/u/1751601?v=4", [["gino", "https://github.com/fantix/gino", "GINO Is Not ORM - a Python asyncio ORM on SQLAlchemy core.", 365, "Python"]]], ["User", "Rockyzsu", "https://avatars3.githubusercontent.com/u/7868260?v=4", [["zhihuToKindle", "https://github.com/Rockyzsu/zhihuToKindle", "\u6a21\u62df\u767b\u9646\u77e5\u4e4e\uff0c\u83b7\u53d6\u5173\u6ce8\u95ee\u9898\u7684id\u4e0b \u6240\u6709\u7b54\u6848\uff0c\u5e76\u63a8\u9001\u5230kindle\u7535\u5b50\u4e66", 118, "Python"], ["getProxy", "https://github.com/Rockyzsu/getProxy", "\u722c\u866b\u83b7\u53d6http://www.xicidaili.com/ \u4ee3\u7406\u670d\u52a1\u5668", 62, "Python"], ["xueqiu", "https://github.com/Rockyzsu/xueqiu", "\u767b\u5f55\u5e76\u722c\u53d6\u96ea\u7403\u4e0a\u7684\u6240\u6709\u6587\u7ae0", 48, "Python"]]], ["User", "piglei", "https://avatars1.githubusercontent.com/u/731266?v=4", [["uwsgi-sloth", "https://github.com/piglei/uwsgi-sloth", "Realtime uwsgi log file analyzer, slow requests analyzer.", 194, "Python"], ["django-qiniu", "https://github.com/piglei/django-qiniu", "Qiniu(http://www.qiniu.com) is a cloud storage service, this package interages it with django framework.", 49, "Python"], ["nowater", "https://github.com/piglei/nowater", "\"zhikanlz.com\" for baidu, douban, tianya (spiders and long polling part, by twisted)", 41, "Python"]]], ["User", "wofeiwo", "https://avatars0.githubusercontent.com/u/1016470?v=4", [["webshell-find-tools", "https://github.com/wofeiwo/webshell-find-tools", "\u5206\u6790web\u8bbf\u95ee\u65e5\u5fd7\u4ee5\u53caweb\u76ee\u5f55\u6587\u4ef6\u5c5e\u6027\uff0c\u7528\u4e8e\u6839\u636e\u67e5\u627e\u53ef\u7591\u540e\u95e8\u6587\u4ef6\u7684\u76f8\u5173\u811a\u672c\u3002", 69, "Python"]]], ["User", "jiajunhuang", "https://avatars2.githubusercontent.com/u/5924269?v=4", [["blog", "https://github.com/jiajunhuang/blog", "Jiajun's Blog", 408, "Python"]]], ["User", "younghz", "https://avatars2.githubusercontent.com/u/3347697?v=4", [["TBBKAnalysis", "https://github.com/younghz/TBBKAnalysis", "\u5173\u4e8e\u6dd8\u5b9d\u201c\u7206\u6b3e\u201d\u6570\u636e\u722c\u53d6\u4e0e\u5206\u6790\u3002\u5177\u4f53\u5206\u6790\u89c1  \u2014", 121, "Python"]]], ["User", "sylnsfar", "https://avatars1.githubusercontent.com/u/21075976?v=4", [["qrcode", "https://github.com/sylnsfar/qrcode", "artistic QR Code in Python \uff08Animated GIF qr code\uff09- Python \u827a\u672f\u4e8c\u7ef4\u7801\u751f\u6210\u5668 \uff08GIF\u52a8\u6001\u4e8c\u7ef4\u7801\u3001\u56fe\u7247\u4e8c\u7ef4\u7801\uff09", 4108, "Python"]]], ["User", "MoyanZitto", "https://avatars0.githubusercontent.com/u/10725096?v=4", [["keras-scripts", "https://github.com/MoyanZitto/keras-scripts", "This is my keras-scripts", 74, "Python"]]], ["User", "nladuo", "https://avatars0.githubusercontent.com/u/13132077?v=4", [["taobao_bra_crawler", "https://github.com/nladuo/taobao_bra_crawler", "a taobao web crawler just for fun.", 175, "Python"], ["novelRS", "https://github.com/nladuo/novelRS", "\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7edc\u5c0f\u8bf4\u63a8\u8350\u7cfb\u7edf(\u57fa\u4e8e\u76f8\u4f3c\u5ea6)", 49, "Python"]]], ["User", "mmmwhy", "https://avatars3.githubusercontent.com/u/11297491?v=4", [["ss-panel-and-ss-py-mu", "https://github.com/mmmwhy/ss-panel-and-ss-py-mu", "ss-panel \u548css-panel v3 mod\u9b54\u6539\u7248\u4e00\u952e\u811a\u672c", 613, "Python"]]], ["User", "buke", "https://avatars2.githubusercontent.com/u/1013738?v=4", [["GreenOdoo", "https://github.com/buke/GreenOdoo", "Portable Odoo (formerly OpenERP)", 130, "Python"], ["openerp-taobao", "https://github.com/buke/openerp-taobao", "Taobao OpenERP Connector", 115, "Python"]]], ["User", "lxneng", "https://avatars1.githubusercontent.com/u/112606?v=4", [["xpinyin", "https://github.com/lxneng/xpinyin", "translate chinese hanzi to pinyin by python", 566, "Python"], ["alipay", "https://github.com/lxneng/alipay", "An Unofficial Alipay API for Python", 289, "Python"]]], ["User", "huhamhire", "https://avatars2.githubusercontent.com/u/1697264?v=4", [["huhamhire-hosts", "https://github.com/huhamhire/huhamhire-hosts", "hosts for Internet Freedom", 1481, "Python"]]], ["User", "shenweichen", "https://avatars3.githubusercontent.com/u/18311786?v=4", [["DeepCTR", "https://github.com/shenweichen/DeepCTR", "This project contains several DNN models for  for pCTR/pCVR ,item recommendation.", 123, "Python"], ["IJCAI_2018_Competition_baseline", "https://github.com/shenweichen/IJCAI_2018_Competition_baseline", "IJCAI2018\u963f\u91cc\u5988\u5988\u641c\u7d22\u5e7f\u544a\u8f6c\u5316\u7387\u9884\u4f30baseline LB 0.0831", 72, "Python"]]], ["User", "BruceDone", "https://avatars2.githubusercontent.com/u/12979090?v=4", [["scrapy_demo", "https://github.com/BruceDone/scrapy_demo", "all kinds of scrapy demo ", 80, "Python"], ["tensorflow-demos", "https://github.com/BruceDone/tensorflow-demos", "all kinds of demos of tensorflow code ", 74, "Python"]]], ["User", "candlewill", "https://avatars1.githubusercontent.com/u/4916563?v=4", [["Dialog_Corpus", "https://github.com/candlewill/Dialog_Corpus", "\u7528\u4e8e\u8bad\u7ec3\u4e2d\u82f1\u6587\u5bf9\u8bdd\u7cfb\u7edf\u7684\u8bed\u6599\u5e93 Datasets for Training Chatbot System", 598, "Python"]]], ["User", "cloudaice", "https://avatars1.githubusercontent.com/u/747028?v=4", [["simple-data", "https://github.com/cloudaice/simple-data", "make data simple", 97, "Python"]]], ["User", "fate0", "https://avatars1.githubusercontent.com/u/6829628?v=4", [["getproxy", "https://github.com/fate0/getproxy", "getproxy \u662f\u4e00\u4e2a\u6293\u53d6\u53d1\u653e\u4ee3\u7406\u7f51\u7ad9\uff0c\u83b7\u53d6 http/https \u4ee3\u7406\u7684\u7a0b\u5e8f", 312, "Python"], ["pychrome", "https://github.com/fate0/pychrome", "A Python Package for the Google Chrome Dev Protocol [threading base]", 210, "Python"]]], ["User", "jasonding1354", "https://avatars1.githubusercontent.com/u/5493159?v=4", [["pyDataScienceToolkits_Base", "https://github.com/jasonding1354/pyDataScienceToolkits_Base", "\u4f7f\u7528Python\u8fdb\u884c\u6570\u636e\u5206\u6790\u5b9e\u9a8c\u5de5\u5177NumPy\u3001Pandas\u3001Matplotlib\u3001Scikit-learn\u7684\u5165\u95e8\u4ecb\u7ecd\uff0c\u4f7f\u7528IPython Notebook\u683c\u5f0f", 256, "Python"]]], ["User", "kxxoling", "https://avatars2.githubusercontent.com/u/1227139?v=4", [["PTable", "https://github.com/kxxoling/PTable", "PrettyTable is a simple Python library designed to make it quick and easy to represent tabular data in visually appealing ASCII tables.", 78, "Python"]]], ["User", "yongluo2013", "https://avatars3.githubusercontent.com/u/6010002?v=4", [["osf-openstack-training", "https://github.com/yongluo2013/osf-openstack-training", null, 148, "Python"]]], ["User", "shonenada", "https://avatars1.githubusercontent.com/u/2056489?v=4", [["flask-rbac", "https://github.com/shonenada/flask-rbac", "Flask-RBAC", 121, "Python"]]], ["User", "lc-soft", "https://avatars3.githubusercontent.com/u/1730073?v=4", []], ["User", "liushuaikobe", "https://avatars3.githubusercontent.com/u/2098020?v=4", [["littlesnail", "https://github.com/liushuaikobe/littlesnail", "A YouDao Translation WeChat Robot Demo with Django.", 57, "Python"]]], ["User", "FutunnOpen", "https://avatars1.githubusercontent.com/u/25790136?v=4", [["futuquant", "https://github.com/FutunnOpen/futuquant", "\u5bcc\u9014\u91cf\u5316\u5e73\u53f0 API", 583, "Python"]]], ["User", "nanshihui", "https://avatars0.githubusercontent.com/u/6913510?v=4", [["PocCollect", "https://github.com/nanshihui/PocCollect", "a plenty of poc based on python", 275, "Python"], ["normal_hark_lite", "https://github.com/nanshihui/normal_hark_lite", "\u901a\u7528\u7684POC\u68c0\u6d4b\u6846\u67b6\uff0c\u6709\u8db3\u591f\u7684POC\uff0c\u5c31\u53ef\u4ee5\u627e\u51fa\u76f8\u5e94\u7684\u6f0f\u6d1e", 41, "Python"]]], ["User", "staugur", "https://avatars2.githubusercontent.com/u/10270930?v=4", [["SwarmOps", "https://github.com/staugur/SwarmOps", "Manage swarm clusters to provide a more concise and compact intermediate layer web application with swarm ui.", 60, "Python"]]], ["User", "twocucao", "https://avatars3.githubusercontent.com/u/5625783?v=4", [["danmu.fm", "https://github.com/twocucao/danmu.fm", "douyutv danmu \u6597\u9c7cTV \u5f39\u5e55\u52a9\u624b", 281, "Python"], ["YaDjangoBlog", "https://github.com/twocucao/YaDjangoBlog", "\u4e00\u4e2a Django Best Practice \u6700\u4f73\u5b9e\u8df5", 113, "Python"]]], ["User", "felinx", "https://avatars2.githubusercontent.com/u/127191?v=4", [["d3status", "https://github.com/felinx/d3status", "Diablo3 server status notification APP, a RESTful API demo powered by Tornado", 191, "Python"]]], ["User", "ZhangBohan", "https://avatars0.githubusercontent.com/u/2317407?v=4", [["fun_crawler", "https://github.com/ZhangBohan/fun_crawler", "Crawl some picture for fun", 159, "Python"]]], ["User", "pangolulu", "https://avatars2.githubusercontent.com/u/5796671?v=4", [["rnn-from-scratch", "https://github.com/pangolulu/rnn-from-scratch", "Implementing Recurrent Neural Network from Scratch", 257, "Python"], ["neural-network-from-scratch", "https://github.com/pangolulu/neural-network-from-scratch", "Implementing Multiple Layer Neural Network from Scratch", 207, "Python"]]], ["User", "pengyao", "https://avatars3.githubusercontent.com/u/919816?v=4", [["salt-zabbix", "https://github.com/pengyao/salt-zabbix", "\u57fa\u4e8esaltstack,\u7ed3\u5408zabbix\u5b8c\u6210\u670d\u52a1\u81ea\u52a8\u5316\u90e8\u7f72\u53ca\u76d1\u63a7", 90, "Python"]]], ["User", "adieu", "https://avatars1.githubusercontent.com/u/17115?v=4", []], ["User", "ihciah", "https://avatars0.githubusercontent.com/u/1707505?v=4", [["deep-fashion-retrieval", "https://github.com/ihciah/deep-fashion-retrieval", "Simple image retrival on deep-fashion dataset with pytorch - A course project", 42, "Python"]]], ["User", "twz915", "https://avatars2.githubusercontent.com/u/5609468?v=4", []], ["User", "wangxiaomo", "https://avatars1.githubusercontent.com/u/1225272?v=4", [["TTFRender", "https://github.com/wangxiaomo/TTFRender", "Dynamic Generate TTF FILE For WebFont", 56, "Python"]]], ["User", "doraemonext", "https://avatars3.githubusercontent.com/u/4290737?v=4", [["wechat-python-sdk", "https://github.com/doraemonext/wechat-python-sdk", "\u5fae\u4fe1\u516c\u4f17\u5e73\u53f0 Python \u5f00\u53d1\u5305 [DEPRECATED]", 1374, "Python"]]], ["User", "eyounx", "https://avatars3.githubusercontent.com/u/4124365?v=4", [["ZOOpt", "https://github.com/eyounx/ZOOpt", "A python package of Zeroth-Order Optimization (ZOOpt)", 210, "Python"], ["RetroCodes", "https://github.com/eyounx/RetroCodes", "Codes of our team for the OpenAI Retro Contest of reinforcement learning", 45, "Python"]]], ["User", "LandGrey", "https://avatars3.githubusercontent.com/u/16769779?v=4", [["pydictor", "https://github.com/LandGrey/pydictor", "A powerful and useful hacker dictionary builder for a brute-force attack", 467, "Python"]]], ["User", "fengxuangit", "https://avatars2.githubusercontent.com/u/9276329?v=4", [["Fox-scan", "https://github.com/fengxuangit/Fox-scan", "Fox-scan is a initiative and passive SQL Injection vulnerable Test tools.", 305, "Python"], ["dede_exp_collect", "https://github.com/fengxuangit/dede_exp_collect", "collection dedecms exp use pocsuite framework \u6536\u96c6\u7ec7\u68a6\u7684\u4e00\u4e9b\u6f0f\u6d1e\uff0c\u5e76\u7528pocsuite\u6846\u67b6\u5199\u51fa\u5229\u7528\u7a0b\u5e8f\u3002\u6253\u9020\u4e00\u952e\u65e5dede", 64, "Python"]]], ["User", "JmPotato", "https://avatars3.githubusercontent.com/u/1446531?v=4", [["Pomash", "https://github.com/JmPotato/Pomash", "A Lightweight Blog System", 50, "Python"]]], ["User", "PENGZhaoqing", "https://avatars0.githubusercontent.com/u/11887913?v=4", [["TimeSeriesPrediction", "https://github.com/PENGZhaoqing/TimeSeriesPrediction", "\u5929\u6c60\u667a\u6167\u4ea4\u901a\u9884\u6d4b\u6311\u6218\u8d5b\u89e3\u51b3\u65b9\u6848", 72, "Python"]]], ["User", "yinian1992", "https://avatars1.githubusercontent.com/u/435060?v=4", [["flask-docs-cn", "https://github.com/yinian1992/flask-docs-cn", "Flask \u6587\u6863\u7ffb\u8bd1", 70, "Python"]]], ["User", "gumblex", "https://avatars0.githubusercontent.com/u/6681934?v=4", [["ptproxy", "https://github.com/gumblex/ptproxy", "Turn any pluggable transport for Tor into an obfuscating TCP tunnel.", 127, "Python"], ["tg-export", "https://github.com/gumblex/tg-export", "Export Telegram messages.", 42, "Python"]]], ["User", "greyli", "https://avatars3.githubusercontent.com/u/12967000?v=4", [["flask-dropzone", "https://github.com/greyli/flask-dropzone", "Upload file in Flask with Dropzone.js", 62, "Python"]]], ["User", "grasses", "https://avatars0.githubusercontent.com/u/5513110?v=4", []], ["User", "ifduyue", "https://avatars3.githubusercontent.com/u/568900?v=4", [["pyssdb", "https://github.com/ifduyue/pyssdb", "An SSDB Client Library for Python", 75, "Python"], ["wet", "https://github.com/ifduyue/wet", "sync twitter status to other sites (sina weibo, renren, douban, facebook,  etc..)", 52, "Python"]]], ["User", "roxma", "https://avatars0.githubusercontent.com/u/4538941?v=4", [["nvim-completion-manager", "https://github.com/roxma/nvim-completion-manager", ":warning: NOT MAINTAINING. Read  https://github.com/roxma/nvim-completion-manager/issues/12#issuecomment-382334422 and https://github.com/ncm2/ncm2", 1004, "Python"], ["vim-hug-neovim-rpc", "https://github.com/roxma/vim-hug-neovim-rpc", "EXPERIMENTAL", 108, "Python"]]], ["User", "thsheep", "https://avatars1.githubusercontent.com/u/13295079?v=4", [["mzitu", "https://github.com/thsheep/mzitu", "\u4e00\u4e2a\u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\u7684mzitu\u4e0b\u8f7d\u811a\u672c", 62, "Python"], ["mzitu_scrapy", "https://github.com/thsheep/mzitu_scrapy", "\u57fa\u4e8eScrapy\u7684www.mzitu.com\u7684\u5168\u7ad9\u56fe\u7247\u4e0b\u8f7d\u811a\u672c", 52, "Python"]]], ["User", "kulovecc", "https://avatars1.githubusercontent.com/u/8711418?v=4", [["jandan_spider", "https://github.com/kulovecc/jandan_spider", "\u4f7f\u7528Python3 \u722c\u53d6\u714e\u86cb\u59b9\u7eb8\u56fe\u7247", 98, "Python"]]], ["User", "WarBean", "https://avatars2.githubusercontent.com/u/5501392?v=4", [["tps_stn_pytorch", "https://github.com/WarBean/tps_stn_pytorch", "PyTorch implementation of Spatial Transformer Network (STN) with Thin Plate Spline (TPS)", 134, "Python"]]], ["User", "chenzhiwei", "https://avatars2.githubusercontent.com/u/672668?v=4", [["linux", "https://github.com/chenzhiwei/linux", "Linux related notes.", 562, "Python"]]], ["User", "kingname", "https://avatars3.githubusercontent.com/u/5440523?v=4", [["MarkdownPicPicker", "https://github.com/kingname/MarkdownPicPicker", "MarkdownPicPicker is a tool to upload a picture in clipboard to cloud and write a markdown format url of the picture to clipboard", 99, "Python"], ["RemoteControl", "https://github.com/kingname/RemoteControl", "Mail Control Computer", 42, "Python"]]], ["User", "lalor", "https://avatars2.githubusercontent.com/u/1710494?v=4", [["todolist", "https://github.com/lalor/todolist", null, 262, "Python"], ["python_for_linux_system_administration", "https://github.com/lalor/python_for_linux_system_administration", null, 156, "Python"], ["headlines", "https://github.com/lalor/headlines", null, 151, "Python"]]], ["User", "TsingJyujing", "https://avatars2.githubusercontent.com/u/7792749?v=4", [["DataSpider", "https://github.com/TsingJyujing/DataSpider", "Spider cluster of several data source", 77, "Python"]]], ["User", "hjptriplebee", "https://avatars3.githubusercontent.com/u/22477665?v=4", [["Chinese_poem_generator", "https://github.com/hjptriplebee/Chinese_poem_generator", "\u5510\u8bd7\u3001\u5b8b\u8bcd\u751f\u6210\u5668\uff0c\u6709\u8be6\u7ec6\u8bf4\u660e", 126, "Python"], ["VGG19_with_tensorflow", "https://github.com/hjptriplebee/VGG19_with_tensorflow", "An easy implement of VGG19 with tensorflow, which has a detailed explanation.", 121, "Python"], ["AlexNet_with_tensorflow", "https://github.com/hjptriplebee/AlexNet_with_tensorflow", "an implement of AlexNet with tensorflow, which has a detailed explanation.", 77, "Python"]]], ["User", "zhanghe06", "https://avatars0.githubusercontent.com/u/8669309?v=4", [["python", "https://github.com/zhanghe06/python", "Python\u4f7f\u7528\u8bb0\u5f55", 369, "Python"]]], ["User", "NKUCodingCat", "https://avatars2.githubusercontent.com/u/8611032?v=4", [["gogotester_python", "https://github.com/NKUCodingCat/gogotester_python", "Tools Powered by Python to Find available Google IP for Goagent and GoProxy", 82, "Python"]]], ["User", "gangchen", "https://avatars0.githubusercontent.com/u/431516?v=4", []], ["User", "virink", "https://avatars2.githubusercontent.com/u/15978207?v=4", []], ["User", "SerhoLiu", "https://avatars0.githubusercontent.com/u/1080404?v=4", [["serholiu.com", "https://github.com/SerhoLiu/serholiu.com", "\u6211\u7684\u535a\u5ba2", 98, "Python"], ["CodeShare", "https://github.com/SerhoLiu/CodeShare", "A simple code share site by Tornado runing SAE.", 70, "Python"]]], ["User", "lieanu", "https://avatars2.githubusercontent.com/u/3104641?v=4", [["LibcSearcher", "https://github.com/lieanu/LibcSearcher", "glibc offset search for ctf.", 54, "Python"]]], ["User", "vacancy", "https://avatars2.githubusercontent.com/u/4904336?v=4", [["Synchronized-BatchNorm-PyTorch", "https://github.com/vacancy/Synchronized-BatchNorm-PyTorch", "Synchronized Batch Normalization implementation in PyTorch.", 143, "Python"], ["TensorArtist", "https://github.com/vacancy/TensorArtist", "Lightweight neural network library for Tensorflow.", 43, "Python"]]], ["User", "liuslevis", "https://avatars2.githubusercontent.com/u/3361154?v=4", [["weiquncrawler", "https://github.com/liuslevis/weiquncrawler", "This is a crawler for Sina Weiqun website(WAP) information, including given Weiqun's posts, replies, users and their follow relation. Written in Python 2.7.1, store data in SQLite3. Relation-crawling part customized on Github Project sina_reptile.", 148, "Python"]]], ["User", "upbit", "https://avatars2.githubusercontent.com/u/302680?v=4", [["pixivpy", "https://github.com/upbit/pixivpy", "Pixiv API for Python", 386, "Python"], ["lldb-capstone-arm", "https://github.com/upbit/lldb-capstone-arm", "Capstone disassemble scripts for lldb", 53, "Python"]]], ["User", "TTyb", "https://avatars3.githubusercontent.com/u/20573808?v=4", [["Baiduindex", "https://github.com/TTyb/Baiduindex", "\u767e\u5ea6\u6307\u6570-\u56fe\u50cf\u8bc6\u522b\u6293\u53d6\uff0c\u903b\u8f91\u4e0d\u96be\uff0c\u4ee3\u7801\u5199\u5f97\u6e23\u6e23", 119, "Python"], ["AmazonCaptcha", "https://github.com/TTyb/AmazonCaptcha", "Amazon\u9a8c\u8bc1\u7801\u673a\u5668\u5b66\u4e60\u7834\u89e3", 49, "Python"]]], ["User", "JoneXiong", "https://avatars0.githubusercontent.com/u/2276625?v=4", [["oejia_wx", "https://github.com/JoneXiong/oejia_wx", "Odoo \u7684\u5fae\u4fe1\u6a21\u5757", 201, "Python"], ["YouPBX", "https://github.com/JoneXiong/YouPBX", "A great GUI manager for FreeSwitch", 67, "Python"]]], ["User", "hrwhisper", "https://avatars2.githubusercontent.com/u/10042217?v=4", [["twitterDataMining", "https://github.com/hrwhisper/twitterDataMining", "Twitter\u6570\u636e\u6316\u6398\u53ca\u5176\u53ef\u89c6\u5316", 57, "Python"], ["algorithm_course", "https://github.com/hrwhisper/algorithm_course", "\u56fd\u79d1\u5927 \u7b97\u6cd5\u5206\u6790\u4e0e\u8bbe\u8ba1 \u535c\u4e1c\u6ce2 \u4f5c\u4e1a\u7b54\u6848\u6574\u7406", 44, "Python"]]], ["User", "guoylyy", "https://avatars1.githubusercontent.com/u/3021588?v=4", [["uband-python-s1", "https://github.com/guoylyy/uband-python-s1", null, 138, "Python"], ["SSE-Compiling-Course", "https://github.com/guoylyy/SSE-Compiling-Course", "\u540c\u6d4e\u8f6f\u9662\u7f16\u8bd1\u539f\u7406\u8bfe\u7a0bRepository @2014", 52, "Python"]]], ["User", "maralla", "https://avatars3.githubusercontent.com/u/2238118?v=4", [["completor.vim", "https://github.com/maralla/completor.vim", "Async completion framework made ease.", 783, "Python"], ["validator.vim", "https://github.com/maralla/validator.vim", "Check syntax on the fly asynchronously.", 192, "Python"]]], ["User", "stayliv3", "https://avatars2.githubusercontent.com/u/9264080?v=4", [["burpsuite-changeU", "https://github.com/stayliv3/burpsuite-changeU", null, 53, "Python"]]], ["User", "timonwong", "https://avatars1.githubusercontent.com/u/1398228?v=4", [["OmniMarkupPreviewer", "https://github.com/timonwong/OmniMarkupPreviewer", "Sublime Text 2&3 plugin to live preview markup files, supported (not limited to) markup formats are markdown, reStructuredText, WikiCreole and textile.", 453, "Python"], ["SublimeAStyleFormatter", "https://github.com/timonwong/SublimeAStyleFormatter", "SublimeAStyleFormatter is a code formatter/beautifier for Sublime Text 2 & 3. It provides ability to format C/C++/C#/Java files.", 261, "Python"]]], ["User", "zijundeng", "https://avatars1.githubusercontent.com/u/23656747?v=4", [["pytorch-semantic-segmentation", "https://github.com/zijundeng/pytorch-semantic-segmentation", "PyTorch for Semantic Segmentation", 511, "Python"]]], ["User", "tao12345666333", "https://avatars2.githubusercontent.com/u/3264292?v=4", [["tornado-zh", "https://github.com/tao12345666333/tornado-zh", "\u4e2d\u6587\u7248 Tornado  \u6587\u6863\u3010WIP\u3011", 111, "Python"]]], ["User", "JimChengLin", "https://avatars1.githubusercontent.com/u/16563096?v=4", [["JimCollection", "https://github.com/JimChengLin/JimCollection", "Algorithms and Other Things", 58, "Python"], ["AsyncDB", "https://github.com/JimChengLin/AsyncDB", "Coroutine + AsyncIO + B-Tree = AsyncDB", 52, "Python"]]], ["User", "SunnyMarkLiu", "https://avatars0.githubusercontent.com/u/16421565?v=4", [["NaiveBayesSpamFilter", "https://github.com/SunnyMarkLiu/NaiveBayesSpamFilter", ":email: Implement Naive Bayes and Adaboost from scratch and use them filter spam emails.", 101, "Python"]]], ["User", "huntzhan", "https://avatars3.githubusercontent.com/u/5213906?v=4", [["img2url", "https://github.com/huntzhan/img2url", "upload image to remote and return corresponding url.", 68, "Python"], ["magic-constraints", "https://github.com/huntzhan/magic-constraints", "Magic Type Introspection And Runtime Parameter Type/Value Checking.", 41, "Python"]]], ["User", "yinhm", "https://avatars1.githubusercontent.com/u/14960?v=4", [["datafeed", "https://github.com/yinhm/datafeed", "A Datafeed System for Financial Data.", 125, "Python"]]], ["User", "jasonlvhit", "https://avatars0.githubusercontent.com/u/5202391?v=4", []], ["User", "caspartse", "https://avatars3.githubusercontent.com/u/2293538?v=4", [["wechat-toolbox", "https://github.com/caspartse/wechat-toolbox", "WeChat toolbox\uff08\u5fae\u4fe1\u5de5\u5177\u7bb1\uff09", 49, "Python"]]], ["User", "LKI", "https://avatars0.githubusercontent.com/u/3286092?v=4", [["chinese-calendar", "https://github.com/LKI/chinese-calendar", "\u5224\u65ad\u4e00\u5929\u662f\u4e0d\u662f\u6cd5\u5b9a\u8282\u5047\u65e5/\u6cd5\u5b9a\u5de5\u4f5c\u65e5\uff08\u67e5\u770b\u8282\u5047\u65e5\u5b89\u6392\uff09", 54, "Python"]]], ["User", "qq547276542", "https://avatars3.githubusercontent.com/u/17894585?v=4", [["Agriculture_KnowledgeGraph", "https://github.com/qq547276542/Agriculture_KnowledgeGraph", "\u519c\u4e1a\u77e5\u8bc6\u56fe\u8c31(KG)\uff1a\u519c\u4e1a\u9886\u57df\u7684\u4fe1\u606f\u68c0\u7d22\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff0c\u5173\u7cfb\u62bd\u53d6\uff0c\u5206\u7c7b\u6811\u6784\u5efa\uff0c\u6570\u636e\u6316\u6398", 481, "Python"]]], ["User", "felix021", "https://avatars2.githubusercontent.com/u/367085?v=4", [["ssocks5", "https://github.com/felix021/ssocks5", "socks5 proxy simplified from shadowsocks.", 60, "Python"]]], ["User", "dantangfan", "https://avatars1.githubusercontent.com/u/4002837?v=4", [["ddos", "https://github.com/dantangfan/ddos", "ddos attact", 59, "Python"]]], ["User", "NoviceLive", "https://avatars0.githubusercontent.com/u/7678237?v=4", [["bintut", "https://github.com/NoviceLive/bintut", "Teach you a binary exploitation for great good.", 265, "Python"]]], ["User", "zhangyangyu", "https://avatars1.githubusercontent.com/u/3690895?v=4", [["tornado-cn-auth", "https://github.com/zhangyangyu/tornado-cn-auth", "\u63d0\u4f9b\u4e2d\u56fd\u4e3b\u6d41\u7f51\u7ad9\u7684tornado OAuth2\u6269\u5c55", 75, "Python"]]], ["User", "wuhuikai", "https://avatars0.githubusercontent.com/u/6862805?v=4", [["DeepGuidedFilter", "https://github.com/wuhuikai/DeepGuidedFilter", "Official Implementation for Deep Guided Filter, CVPR 2018", 233, "Python"], ["MSC", "https://github.com/wuhuikai/MSC", "MSC: A Dataset for Macro-Management in StarCraft II", 89, "Python"], ["TF-A2RL", "https://github.com/wuhuikai/TF-A2RL", "The official implementation for A2-RL: Aesthetics Aware Rinforcement Learning for Automatic Image Cropping", 76, "Python"]]], ["User", "ltoddy", "https://avatars0.githubusercontent.com/u/20920763?v=4", []], ["User", "tolerious", "https://avatars0.githubusercontent.com/u/2922120?v=4", [["django-wechat", "https://github.com/tolerious/django-wechat", "Django\u5b9e\u73b0\u5fae\u4fe1\u516c\u4f17\u53f7\u5f00\u53d1,\u5c01\u88c5\u5b98\u65b9API,\u53ef\u901a\u8fc7pip\u8fdb\u884c\u5b89\u88c5.", 53, "Python"]]], ["User", "winkidney", "https://avatars1.githubusercontent.com/u/4109722?v=4", [["weixin2py", "https://github.com/winkidney/weixin2py", "weixin2py-\u817e\u8baf\u5fae\u4fe1\u516c\u4f17\u5e73\u53f0\u81ea\u52a8\u6d88\u606f\u5904\u7406\u7a0b\u5e8f+SDK\uff08python+django\uff09", 137, "Python"], ["cmdtree", "https://github.com/winkidney/cmdtree", "Yet another cli library , click-like but sub-command friendly and designed for cli auto-generating.", 54, "Python"]]], ["User", "Wildog", "https://avatars1.githubusercontent.com/u/4702071?v=4", [["Ariafred", "https://github.com/Wildog/Ariafred", "Manage Aria2 downloads with Alfred", 145, "Python"], ["douban-exporter", "https://github.com/Wildog/douban-exporter", "An online service to export \u8c46\u74e3 (douban) data to Excel files.", 140, "Python"]]], ["User", "billvsme", "https://avatars1.githubusercontent.com/u/3324744?v=4", [["videoSpider", "https://github.com/billvsme/videoSpider", "\u5206\u5e03\u5f0f\u89c6\u9891\u4fe1\u606f\u722c\u866b\uff0c\u6293\u53d6\u8c46\u74e3\uff0cbilibili\u7b49\u4e2d\u7684\u7535\u89c6\u5267\u3001\u7535\u5f71\u3001\u52a8\u6f2b\u6f14\u5458\u7b49\u4fe1\u606f", 134, "Python"]]], ["User", "Jackeriss", "https://avatars0.githubusercontent.com/u/7183428?v=4", [["Email_My_PC", "https://github.com/Jackeriss/Email_My_PC", " [EOL] \u901a\u8fc7\u90ae\u4ef6\u8fdc\u7a0b\u76d1\u63a7\u4f60\u7684\u7535\u8111", 183, "Python"]]], ["User", "ymcui", "https://avatars1.githubusercontent.com/u/16095339?v=4", [["cmrc2017", "https://github.com/ymcui/cmrc2017", "The First Evaluation Workshop on Chinese Machine Reading Comprehension (CMRC 2017)", 56, "Python"]]], ["User", "timothyqiu", "https://avatars3.githubusercontent.com/u/372476?v=4", [["xiami-downloader", "https://github.com/timothyqiu/xiami-downloader", "A simple tool for downloading music previews from Xiami.", 67, "Python"]]], ["User", "ExplorerFreda", "https://avatars0.githubusercontent.com/u/16744148?v=4", [["Structured-Self-Attentive-Sentence-Embedding", "https://github.com/ExplorerFreda/Structured-Self-Attentive-Sentence-Embedding", "An open-source implementation of the paper ``A Structured Self-Attentive Sentence Embedding'' published by IBM and MILA. ", 236, "Python"]]], ["User", "blackgear", "https://avatars1.githubusercontent.com/u/4780199?v=4", [["ingrex_lib", "https://github.com/blackgear/ingrex_lib", "A python lib for Google Ingress including intel api, message process, portal process, map process.", 59, "Python"]]], ["User", "findmyway", "https://avatars0.githubusercontent.com/u/5612003?v=4", [["Data-Structures-and-Algorithms-in-Python", "https://github.com/findmyway/Data-Structures-and-Algorithms-in-Python", "my solutions to the exercises in book Data Structures and Algorithms in Python", 44, "Python"]]], ["User", "WuLC", "https://avatars0.githubusercontent.com/u/14886130?v=4", [["ThesaurusSpider", "https://github.com/WuLC/ThesaurusSpider", "\u4e0b\u8f7d\u641c\u72d7\u3001\u767e\u5ea6\u3001QQ\u8f93\u5165\u6cd5\u7684\u8bcd\u5e93\u6587\u4ef6\u7684 python \u722c\u866b", 53, "Python"]]], ["User", "ManyFace", "https://avatars3.githubusercontent.com/u/13110852?v=4", [["ExtractDexFromOat", "https://github.com/ManyFace/ExtractDexFromOat", "This tool is used to extract dex files from oat file.", 93, "Python"]]], ["User", "corenel", "https://avatars3.githubusercontent.com/u/8099273?v=4", [["pytorch-adda", "https://github.com/corenel/pytorch-adda", "A PyTorch implementation for Adversarial Discriminative Domain Adaptation", 71, "Python"]]], ["User", "tevino", "https://avatars1.githubusercontent.com/u/1027300?v=4", []], ["User", "X-Mars", "https://avatars1.githubusercontent.com/u/18095822?v=4", [["Zabbix-Alert-WeChat", "https://github.com/X-Mars/Zabbix-Alert-WeChat", "zabbix Alert WeChat zabbix \u5fae\u4fe1 \u62a5\u8b66", 151, "Python"], ["UpgradeDNS", "https://github.com/X-Mars/UpgradeDNS", "\u7528\u4e8e\u5c06\u963f\u91cc\u4e91\u57df\u540d\u89e3\u6790\u5230\u52a8\u6001ip", 63, "Python"]]], ["User", "binhe22", "https://avatars3.githubusercontent.com/u/2442353?v=4", [["pullword", "https://github.com/binhe22/pullword", "A Python package for pullword.com", 73, "Python"]]], ["User", "protream", "https://avatars0.githubusercontent.com/u/7698837?v=4", [["iquery", "https://github.com/protream/iquery", "Various information query via command line.", 716, "Python"], ["tickets", "https://github.com/protream/tickets", "Train tickets query via CLI.", 43, "Python"]]], ["User", "solos", "https://avatars1.githubusercontent.com/u/542246?v=4", [["baidupan", "https://github.com/solos/baidupan", "A baidu netdisk api sdk", 161, "Python"], ["regexdict", "https://github.com/solos/regexdict", "regex dict \u6b63\u5219\u8868\u8fbe\u5f0f\u8bcd\u5178", 49, "Python"]]], ["User", "wzyonggege", "https://avatars1.githubusercontent.com/u/28620881?v=4", [["RNN_poetry_generator", "https://github.com/wzyonggege/RNN_poetry_generator", "\u57fa\u4e8eRNN\u751f\u6210\u53e4\u8bd7", 93, "Python"], ["python-wechat-itchat", "https://github.com/wzyonggege/python-wechat-itchat", null, 59, "Python"], ["Mzitu-Crawler", "https://github.com/wzyonggege/Mzitu-Crawler", null, 44, "Python"]]], ["User", "wwq0327", "https://avatars1.githubusercontent.com/u/357507?v=4", [["django-web-app-book", "https://github.com/wwq0327/django-web-app-book", "Django Web \u5f00\u53d1\u5b9e\u6218", 86, "Python"]]], ["User", "spin6lock", "https://avatars0.githubusercontent.com/u/734304?v=4", []], ["User", "samrayleung", "https://avatars0.githubusercontent.com/u/14180681?v=4", [["jd_spider", "https://github.com/samrayleung/jd_spider", "\u4e24\u53ea\u8822\u840c\u4eac\u4e1c\u7684\u5206\u5e03\u5f0f\u722c\u866b. ", 569, "Python"]]], ["User", "huoxy", "https://avatars3.githubusercontent.com/u/1237528?v=4", [["farmer", "https://github.com/huoxy/farmer", "an asynchronous task execution web app based on ansible", 53, "Python"]]], ["User", "Vayn", "https://avatars1.githubusercontent.com/u/224407?v=4", []], ["User", "nilboy", "https://avatars2.githubusercontent.com/u/17962699?v=4", [["tensorflow-yolo", "https://github.com/nilboy/tensorflow-yolo", "tensorflow implementation of 'YOLO : Real-Time Object Detection'(train and test)", 614, "Python"], ["pixel-recursive-super-resolution", "https://github.com/nilboy/pixel-recursive-super-resolution", "Tensorflow implementation of pixel-recursive-super-resolution(Google Brain paper: https://arxiv.org/abs/1702.00783)", 251, "Python"], ["colorization-tf", "https://github.com/nilboy/colorization-tf", "A Tensorflow implementation of ECCV2016 paper([Colorful Image Colorization](https://arxiv.org/pdf/1603.08511.pdf))", 51, "Python"]]], ["User", "TheWaWaR", "https://avatars0.githubusercontent.com/u/1160419?v=4", [["python-chat", "https://github.com/TheWaWaR/python-chat", "\u6a21\u4effQQ (\u57fa\u4e8eGevent+Websocket)", 47, "Python"]]], ["User", "damnever", "https://avatars3.githubusercontent.com/u/6223594?v=4", [["pigar", "https://github.com/damnever/pigar", ":coffee: A fantastic tool to generate requirements file for your Python project, and more than that.", 607, "Python"]]], ["User", "huangshiyu13", "https://avatars3.githubusercontent.com/u/14996449?v=4", [["RPNplus", "https://github.com/huangshiyu13/RPNplus", "RPN+(Tensorflow) for people detection", 143, "Python"]]], ["User", "lvyaojia", "https://avatars3.githubusercontent.com/u/559386?v=4", [["crawler", "https://github.com/lvyaojia/crawler", "a web crawler", 127, "Python"], ["weibo-raspberrypi-arduino", "https://github.com/lvyaojia/weibo-raspberrypi-arduino", "use raspberry pi to get real-time mentions(weibo), the mentions will be as the commands to control arduino.", 42, "Python"]]], ["User", "xsank", "https://avatars3.githubusercontent.com/u/1661334?v=4", [["cabbird", "https://github.com/xsank/cabbird", "A set of algorithms written in python.", 45, "Python"]]], ["User", "smilejay", "https://avatars1.githubusercontent.com/u/1243264?v=4", [["python", "https://github.com/smilejay/python", "some of Jay's shared python codes", 87, "Python"]]], ["User", "leeyiw", "https://avatars2.githubusercontent.com/u/3157740?v=4", [["cgdb-manual-in-chinese", "https://github.com/leeyiw/cgdb-manual-in-chinese", "\u300aCGDB\u4e2d\u6587\u624b\u518c\u300b", 155, "Python"], ["dnspod_ddns", "https://github.com/leeyiw/dnspod_ddns", "a Python tool to dynamic update DNS record at DNSPod", 44, "Python"]]], ["User", "SeaHOH", "https://avatars1.githubusercontent.com/u/8470820?v=4", [["GotoX", "https://github.com/SeaHOH/GotoX", "\u672c\u5730\u81ea\u52a8\u4ee3\u7406\uff0c\u4fee\u6539\u81ea goagent\u3002", 130, "Python"]]], ["User", "meijieru", "https://avatars1.githubusercontent.com/u/9511136?v=4", [["crnn.pytorch", "https://github.com/meijieru/crnn.pytorch", "Convolutional recurrent network in pytorch", 436, "Python"]]], ["User", "ruiminshen", "https://avatars3.githubusercontent.com/u/8234244?v=4", [["yolo2-pytorch", "https://github.com/ruiminshen/yolo2-pytorch", "PyTorch implementation of the YOLO (You Only Look Once) v2", 356, "Python"], ["yolo-tf", "https://github.com/ruiminshen/yolo-tf", "TensorFlow implementation of the YOLO (You Only Look Once)", 176, "Python"]]], ["User", "nikoloss", "https://avatars0.githubusercontent.com/u/5944184?v=4", [["rose-dewdrop", "https://github.com/nikoloss/rose-dewdrop", "websocket\u6d88\u606f\u53d1\u5e03\u96c6\u7fa4 Rose&Dewdrop is a solution of websocket cluster", 96, "Python"], ["iceworld", "https://github.com/nikoloss/iceworld", "tonado\u7684multi-thread \u591a\u7ebf\u7a0b\u5c01\u88c5", 91, "Python"]]], ["User", "kaito-kidd", "https://avatars0.githubusercontent.com/u/9117028?v=4", [["markdown-image-alfred", "https://github.com/kaito-kidd/markdown-image-alfred", "\u590d\u5236\u672c\u5730\u56fe\u7247\u6216\u622a\u56fe\uff0c\u5feb\u901f\u4e0a\u4f20\u56fe\u7247\u5230\u4e03\u725b\u4e91\u7a7a\u95f4\uff0c\u5e76\u83b7\u53d6Markdown\u683c\u5f0f\u7684\u56fe\u7247\u5730\u5740\u3002", 49, "Python"]]], ["User", "dylanninin", "https://avatars3.githubusercontent.com/u/550518?v=4", [["blog", "https://github.com/dylanninin/blog", "blog developed with web.py, posted with raw markdown files", 122, "Python"]]], ["User", "MarkWuNLP", "https://avatars2.githubusercontent.com/u/14267648?v=4", [["MultiTurnResponseSelection", "https://github.com/MarkWuNLP/MultiTurnResponseSelection", "This repo contains our ACL paper data and source code ", 178, "Python"]]], ["User", "wkcn", "https://avatars1.githubusercontent.com/u/3415417?v=4", []], ["User", "Sorosliu1029", "https://avatars1.githubusercontent.com/u/8862646?v=4", [["Jike-Metro", "https://github.com/Sorosliu1029/Jike-Metro", ":metro: \u5373\u523b \u24bf SDK", 71, "Python"]]], ["User", "dogear-cn", "https://avatars2.githubusercontent.com/u/74476?v=4", [["kindlereader", "https://github.com/dogear-cn/kindlereader", "Push your Google reader to your Kindle", 411, "Python"]]], ["User", "JinnLynn", "https://avatars3.githubusercontent.com/u/1592603?v=4", [["genpac", "https://github.com/JinnLynn/genpac", "PAC/Dnsmasq/Wingy file Generator,  working with gfwlist, support custom rules.", 1157, "Python"], ["alfred-workflows", "https://github.com/JinnLynn/alfred-workflows", "Alfred 2 Workflows", 104, "Python"]]], ["User", "ladder1984", "https://avatars2.githubusercontent.com/u/3875374?v=4", [["updateHosts", "https://github.com/ladder1984/updateHosts", "\u81ea\u52a8\u66f4\u65b0hosts", 185, "Python"]]], ["User", "wnagzihxa1n", "https://avatars1.githubusercontent.com/u/13830250?v=4", []], ["User", "Jessicamidi", "https://avatars1.githubusercontent.com/u/26340791?v=4", [["IJCAI17_Tianchi_Rank4", "https://github.com/Jessicamidi/IJCAI17_Tianchi_Rank4", null, 149, "Python"]]], ["User", "klb3713", "https://avatars1.githubusercontent.com/u/1397699?v=4", [["sentence2vec", "https://github.com/klb3713/sentence2vec", "Tools for mapping a sentence with arbitrary length to vector space", 621, "Python"], ["word2vec", "https://github.com/klb3713/word2vec", "Multiple version of word2vec. https://code.google.com/p/word2vec/", 50, "Python"]]], ["User", "wuzheng-sjtu", "https://avatars3.githubusercontent.com/u/20312117?v=4", [["FastFPN", "https://github.com/wuzheng-sjtu/FastFPN", "Tensorflow implementation for \"Feature Pyramid Networks for Object Detection\"", 101, "Python"]]], ["User", "tmpbook", "https://avatars3.githubusercontent.com/u/1560985?v=4", []], ["User", "edvardHua", "https://avatars3.githubusercontent.com/u/4105217?v=4", [["Articles", "https://github.com/edvardHua/Articles", " :notebook_with_decorative_cover: \u7b80\u4e66\u6587\u7ae0\u4e2d\u7684\u6750\u6599", 45, "Python"]]], ["User", "jamiesun", "https://avatars0.githubusercontent.com/u/377938?v=4", [["SublimeEvernote", "https://github.com/jamiesun/SublimeEvernote", "Sublime text 2 Evernote tools ", 273, "Python"]]], ["User", "xibijj", "https://avatars0.githubusercontent.com/u/8131156?v=4", []], ["User", "zhwei", "https://avatars3.githubusercontent.com/u/1446459?v=4", []], ["User", "luosch", "https://avatars1.githubusercontent.com/u/6956493?v=4", []], ["User", "mayflaver", "https://avatars3.githubusercontent.com/u/1642040?v=4", [["AsyncTorndb", "https://github.com/mayflaver/AsyncTorndb", "async mysql client for tornado", 156, "Python"]]], ["User", "aipengjie", "https://avatars0.githubusercontent.com/u/13042405?v=4", [["sensitivefilescan", "https://github.com/aipengjie/sensitivefilescan", null, 113, "Python"]]], ["User", "restran", "https://avatars3.githubusercontent.com/u/2862915?v=4", [["fomalhaut", "https://github.com/restran/fomalhaut", "\ud83d\ude80 A simple API gateway for building safe and flexible microservices.", 189, "Python"]]], ["User", "romangol", "https://avatars2.githubusercontent.com/u/616814?v=4", []], ["User", "jasonwbw", "https://avatars2.githubusercontent.com/u/3417170?v=4", [["DensityPeakCluster", "https://github.com/jasonwbw/DensityPeakCluster", "A cluster framework for 'Clustering by fast search and find of density peaks' in science 2014.", 150, "Python"]]], ["User", "yhlleo", "https://avatars0.githubusercontent.com/u/13311630?v=4", [["mnist", "https://github.com/yhlleo/mnist", "Some samples of the MNIST classifier.", 77, "Python"], ["tensorflow.cifar10", "https://github.com/yhlleo/tensorflow.cifar10", "The examples of image recognition with the dataset CIFAR10 via tensorflow.", 74, "Python"]]], ["User", "tonnie17", "https://avatars2.githubusercontent.com/u/7101967?v=4", [["pkyx", "https://github.com/tonnie17/pkyx", "\u4e00\u4e2a\u4f7f\u7528Flask & MongoDB\u5f00\u53d1\u7684\u6bd4\u8f83\u7f51\u7ad9", 47, "Python"]]], ["User", "dengzhp", "https://avatars1.githubusercontent.com/u/103518?v=4", [["lusernews", "https://github.com/dengzhp/lusernews", "A HN style news web site written in python", 72, "Python"]]], ["User", "honmaple", "https://avatars1.githubusercontent.com/u/12235570?v=4", [["maple-bbs", "https://github.com/honmaple/maple-bbs", "a forums system based on flask", 289, "Python"], ["maple-blog", "https://github.com/honmaple/maple-blog", "a blog website based on flask ", 75, "Python"], ["flask-msearch", "https://github.com/honmaple/flask-msearch", "Full text search for flask.", 45, "Python"]]], ["User", "Answeror", "https://avatars0.githubusercontent.com/u/323289?v=4", [["pyhook_py3k", "https://github.com/Answeror/pyhook_py3k", "A Python3 fork of pyHook (a python wrapper for global input hooks in Windows), fixed some bugs and compatible with cx-freeze.", 46, "Python"]]], ["User", "weilaihui", "https://avatars0.githubusercontent.com/u/6701259?v=4", []], ["User", "mathslinux", "https://avatars3.githubusercontent.com/u/849489?v=4", []], ["User", "Chenyao2333", "https://avatars0.githubusercontent.com/u/8429651?v=4", []], ["User", "crown-prince", "https://avatars3.githubusercontent.com/u/18098230?v=4", [["Python_PoC", "https://github.com/crown-prince/Python_PoC", "\u4e00\u6b3epython\u7f16\u5199\u7684Web\u5b89\u5168\u68c0\u6d4bPoC&&EXP\u6846\u67b6", 115, "Python"]]], ["User", "KIDJourney", "https://avatars0.githubusercontent.com/u/5558574?v=4", [["TiebaManager", "https://github.com/KIDJourney/TiebaManager", "Auto manage tool for baidu tieba", 44, "Python"]]], ["User", "monklof", "https://avatars1.githubusercontent.com/u/2393551?v=4", [["flaskproject-in-production", "https://github.com/monklof/flaskproject-in-production", "\u4e00\u4e2aFlask\u624b\u811a\u67b6\u5de5\u5177\uff0c\u96c6\u6210\u4e00\u4e9b\u5728\u5f00\u53d1\u751f\u4ea7\u65f6\u975e\u5e38\u6709\u7528\u7684\u529f\u80fd", 42, "Python"]]], ["User", "intohole", "https://avatars1.githubusercontent.com/u/2542323?v=4", [["moodstyle", "https://github.com/intohole/moodstyle", "machine learning alg write with pure python \uff0f \u673a\u5668\u5b66\u4e60", 224, "Python"], ["xspider", "https://github.com/intohole/xspider", "easy crawl web resource , extract web infomation/\u7b80\u5355\u7684\u722c\u866b\u6846\u67b6", 57, "Python"]]], ["User", "zqqf16", "https://avatars1.githubusercontent.com/u/655326?v=4", []], ["User", "wangqingbaidu", "https://avatars1.githubusercontent.com/u/5063297?v=4", [["aliMusic", "https://github.com/wangqingbaidu/aliMusic", "\ud83c\udfbc\u5929\u6c60\u963f\u91cc\u97f3\u4e50\u6d41\u884c\u8d8b\u52bf\u9884\u6d4b\u5927\u8d5b\uff0c\u9879\u76ee\u4e2d\u6db5\u76d6\u4e86\u4ece\u521d\u8d5b\u5230\u590d\u8d5b\u7684\u5168\u90e8\u6838\u5fc3\u4ee3\u7801\u3002\u590d\u8d5b\u7684\u805a\u5408\u6570\u636e\u53ef\u4ee5\u5728\u767e\u5ea6\u7f51\u76d8\u4e0b\u8f7d\uff0c\u66f4\u8be6\u7ec6\u7684\u601d\u8def\u4ecb\u7ecd\u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\u3002", 96, "Python"]]], ["User", "knitmesh", "https://avatars2.githubusercontent.com/u/15851881?v=4", [["servos-framework", "https://github.com/knitmesh/servos-framework", "\u91c7\u7528\u5206\u6563\u5f00\u53d1\u7edf\u4e00\u7ba1\u7406\u3002\u4ee5\u670d\u52a1\u4e3a\u5355\u4f4d\u8fdb\u884c\u5f00\u53d1\u3002\u6bcf\u4e2a\u670d\u52a1\u53ef\u4ee5\u5355\u72ec\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u591a\u4e2a\u670d\u52a1\u540c\u65f6\u542f\u52a8\uff0c\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u7ba1\u7406\u6307\u5b9a\u54ea\u4e9b\u670d\u52a1\u751f\u6548\uff0c\u90e8\u7f72\u65b9\u5f0f\u7075\u6d3b\u3002", 146, "Python"], ["jackaroo", "https://github.com/knitmesh/jackaroo", "That'll make this place look like a gopher hole.", 77, "Python"], ["licepy", "https://github.com/knitmesh/licepy", "Python library for generating certificate and TrueLicense licenses", 51, "Python"]]], ["User", "gzdaijie", "https://avatars2.githubusercontent.com/u/13294018?v=4", [["tensorflow-tutorial-samples", "https://github.com/gzdaijie/tensorflow-tutorial-samples", "tensorflow\u6559\u7a0b&\u793a\u4f8b\uff0c\u6709\u8be6\u7ec6\u7684\u4e2d\u6587\u6ce8\u91ca", 75, "Python"], ["leetcode-java", "https://github.com/gzdaijie/leetcode-java", "\u8bb0\u5f55\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u8bad\u7ec3\u9898\uff0c\u5206\u4eabjava\u9762\u8bd5\u9898", 49, "Python"]]], ["User", "BillBillBillBill", "https://avatars0.githubusercontent.com/u/5377863?v=4", [["Tickeys-linux", "https://github.com/BillBillBillBill/Tickeys-linux", "Instant audio feedback when typing. For Linux. ", 181, "Python"]]], ["User", "yoyzhou", "https://avatars3.githubusercontent.com/u/2084122?v=4", [["weibo_scrapy", "https://github.com/yoyzhou/weibo_scrapy", "WEIBO_SCRAPY is a Multi-Threading SINA WEIBO data extraction Framework in Python.", 152, "Python"], ["weibo_login", "https://github.com/yoyzhou/weibo_login", "A Python implementation of SINA WEIBO Login Simulator with RSA2 ", 69, "Python"]]], ["User", "Shawn1993", "https://avatars0.githubusercontent.com/u/11707976?v=4", [["cnn-text-classification-pytorch", "https://github.com/Shawn1993/cnn-text-classification-pytorch", "CNNs for Sentence Classification in PyTorch", 330, "Python"]]], ["User", "danfengcao", "https://avatars3.githubusercontent.com/u/5688262?v=4", [["binlog2sql", "https://github.com/danfengcao/binlog2sql", "Parse MySQL binlog to SQL you want", 665, "Python"]]], ["User", "liberize", "https://avatars0.githubusercontent.com/u/3303478?v=4", [["alfred-dict-workflow", "https://github.com/liberize/alfred-dict-workflow", "A multi-feature, fast and handy alfred dictionary workflow.", 358, "Python"]]], ["User", "Robot-Will", "https://avatars0.githubusercontent.com/u/2779082?v=4", [["Stino", "https://github.com/Robot-Will/Stino", "A Sublime Text Plugin for Arduino", 1506, "Python"]]], ["User", "shaoguangcheng", "https://avatars2.githubusercontent.com/u/5155578?v=4", []], ["User", "sowish", "https://avatars2.githubusercontent.com/u/8122929?v=4", [["LNScan", "https://github.com/sowish/LNScan", "\u8be6\u7ec6\u7684\u5185\u90e8\u7f51\u7edc\u4fe1\u606f\u626b\u63cf\u5668", 121, "Python"]]], ["User", "codeb2cc", "https://avatars2.githubusercontent.com/u/209767?v=4", []], ["User", "zhongyiio", "https://avatars2.githubusercontent.com/u/10026361?v=4", [["crack-geetest", "https://github.com/zhongyiio/crack-geetest", "\u6ed1\u52a8\u9a8c\u8bc1\u7801\u7834\u89e3\u793a\u4f8b\uff0c\u4ec5\u4f9b\u5b66\u4e60\u4f7f\u7528\u3002", 438, "Python"]]], ["User", "cforth", "https://avatars3.githubusercontent.com/u/1628077?v=4", [["toys", "https://github.com/cforth/toys", "\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u7ec3\u4e60\uff08\u4e3b\u8981\u662fPython3\uff09\u3002", 79, "Python"]]], ["User", "snowkylin", "https://avatars1.githubusercontent.com/u/9656107?v=4", [["ntm", "https://github.com/snowkylin/ntm", "TensorFlow implementation of Neural Turing Machines (NTM), with its application on one-shot learning (MANN)", 54, "Python"]]], ["User", "holyhao", "https://avatars1.githubusercontent.com/u/16329474?v=4", [["Baidu-Dogs", "https://github.com/holyhao/Baidu-Dogs", "Baidu competition for classifying dogs. More information is provided at http://js.baidu.com", 115, "Python"]]], ["User", "LUCY78765580", "https://avatars0.githubusercontent.com/u/25961027?v=4", [["Python-web-scraping", "https://github.com/LUCY78765580/Python-web-scraping", "python\u722c\u866b\uff0c\u5305\u542b\u5927\u5c0f\u9879\u76ee", 146, "Python"]]], ["User", "skyduy", "https://avatars0.githubusercontent.com/u/7315313?v=4", [["CNN_keras", "https://github.com/skyduy/CNN_keras", "CNN | Keras | CAPTCHA recognition\uff08\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3001Keras\u6846\u67b6\u3001\u9a8c\u8bc1\u7801\u8bc6\u522b\uff09", 125, "Python"], ["zfverify", "https://github.com/skyduy/zfverify", "\u6b63\u65b9\u9a8c\u8bc1\u7801\u8bc6\u522b\u5de5\u5177 \u63d0\u4f9b\u591a\u79cd\u65b9\u5f0f", 41, "Python"]]], ["User", "lucasxlu", "https://avatars3.githubusercontent.com/u/7823603?v=4", [["LagouJob", "https://github.com/lucasxlu/LagouJob", "Job data mining repo for lagou.com", 200, "Python"]]], ["User", "DarkSand", "https://avatars1.githubusercontent.com/u/8079289?v=4", [["Sasila", "https://github.com/DarkSand/Sasila", "\u4e00\u4e2a\u7075\u6d3b\u3001\u53cb\u597d\u7684\u722c\u866b\u6846\u67b6", 212, "Python"]]], ["User", "Leavingseason", "https://avatars3.githubusercontent.com/u/7477272?v=4", [["OpenLearning4DeepRecsys", "https://github.com/Leavingseason/OpenLearning4DeepRecsys", "Some deep learning based recsys for open learning.", 177, "Python"]]], ["User", "imiyoo2010", "https://avatars2.githubusercontent.com/u/2367267?v=4", [["teye_scanner_for_book", "https://github.com/imiyoo2010/teye_scanner_for_book", "\u300a\u767d\u5e3d\u5b50\u8bb2Web\u626b\u63cf\u300b\u4e66\u7c4d\u53c2\u8003\u4ee3\u7801", 41, "Python"]]], ["User", "hitalex", "https://avatars3.githubusercontent.com/u/1267462?v=4", [["PLSA", "https://github.com/hitalex/PLSA", "PLSA implementation via EM algorithm", 65, "Python"]]], ["User", "FortuneC00kie", "https://avatars0.githubusercontent.com/u/26539482?v=4", [["bug-monitor", "https://github.com/FortuneC00kie/bug-monitor", "Seebug\u3001structs\u3001cve\u6f0f\u6d1e\u5b9e\u65f6\u76d1\u63a7\u63a8\u9001\u7cfb\u7edf\ud83d\udd26", 133, "Python"]]], ["User", "SAPikachu", "https://avatars0.githubusercontent.com/u/653824?v=4", []], ["User", "HuberTRoy", "https://avatars3.githubusercontent.com/u/10172415?v=4", [["MusicBox", "https://github.com/HuberTRoy/MusicBox", ":blush: :musical_note: MusicPlayer \u6574\u5408\u591a\u5bb6\u5e73\u53f0\u8d44\u6e90(\u7f51\u6613\u4e91, \u867e\u7c73, QQ)\u7684\u8de8\u5e73\u53f0\u97f3\u4e50\u64ad\u653e\u5668\uff0c\u5c3d\u60c5\u4eab\u53d7\u5427~:sparkles:", 465, "Python"]]], ["User", "wujianguo", "https://avatars1.githubusercontent.com/u/1732474?v=4", []], ["User", "xhujoy", "https://avatars1.githubusercontent.com/u/15272722?v=4", [["CycleGAN-tensorflow", "https://github.com/xhujoy/CycleGAN-tensorflow", "Tensorflow implementation for learning an image-to-image translation without input-output pairs. https://arxiv.org/pdf/1703.10593.pdf", 262, "Python"], ["pysc2-agents", "https://github.com/xhujoy/pysc2-agents", "This is a simple implementation of DeepMind's PySC2 RL agents.", 170, "Python"]]], ["User", "tesseract2048", "https://avatars1.githubusercontent.com/u/4383952?v=4", []], ["User", "gorgiaxx", "https://avatars2.githubusercontent.com/u/9295584?v=4", [["qprotocal", "https://github.com/gorgiaxx/qprotocal", "\u5b89\u5353QQ\u534f\u8baePython\u5e93", 48, "Python"]]], ["User", "chengyumeng", "https://avatars1.githubusercontent.com/u/15684846?v=4", [["spider163", "https://github.com/chengyumeng/spider163", "\u6293\u53d6\u7f51\u6613\u4e91\u97f3\u4e50\u70ed\u95e8\u8bc4\u8bba", 365, "Python"]]], ["User", "xuanhan863", "https://avatars0.githubusercontent.com/u/35346?v=4", []], ["User", "yingnansong", "https://avatars1.githubusercontent.com/u/1737258?v=4", [["pydouyu", "https://github.com/yingnansong/pydouyu", "Python Wrapper for DouyuTV APIs, including support for accessing ChatRoom, e.g. DanMu/\u5f39\u5e55.", 46, "Python"]]], ["User", "nooperpudd", "https://avatars0.githubusercontent.com/u/1549732?v=4", [["chinastock", "https://github.com/nooperpudd/chinastock", "chinastock \u4e2d\u56fd\u80a1\u7968\u884c\u60c5\uff0c\u6570\u636e", 127, "Python"]]], ["User", "cls1991", "https://avatars1.githubusercontent.com/u/6747182?v=4", [["leetcode", "https://github.com/cls1991/leetcode", "leetcode\u5237\u9898", 140, "Python"], ["ng", "https://github.com/cls1991/ng", "Get password of the wifi you're connected, and your current ip address.", 130, "Python"], ["x-proxies", "https://github.com/cls1991/x-proxies", "Usable ip proxies,  crawling from some proxy websites. ", 51, "Python"]]], ["User", "Revolution1", "https://avatars1.githubusercontent.com/u/3241438?v=4", [["Flask-WhooshAlchemyPlus", "https://github.com/Revolution1/Flask-WhooshAlchemyPlus", "Whoosh indexing capabilities for Flask-SQLAlchemy, Flask-WhooshAlchemy plus some improvement", 48, "Python"]]], ["User", "imlonghao", "https://avatars1.githubusercontent.com/u/4951333?v=4", [["python-alipay-tool", "https://github.com/imlonghao/python-alipay-tool", "Python \u652f\u4ed8\u5b9d\u514d\u7b7e\u7ea6\u63a5\u53e3\u5de5\u5177", 41, "Python"]]], ["User", "mitcc", "https://avatars2.githubusercontent.com/u/1176832?v=4", []], ["User", "zthxxx", "https://avatars3.githubusercontent.com/u/15135943?v=4", [["python-Speech_Recognition", "https://github.com/zthxxx/python-Speech_Recognition", "A simple example for use speech recognition baidu api with python.", 62, "Python"]]], ["User", "ee0703", "https://avatars1.githubusercontent.com/u/8089095?v=4", [["console_video", "https://github.com/ee0703/console_video", "a tool based on ffmpeg that plays video in console!", 93, "Python"]]], ["User", "yiyuezhuo", "https://avatars0.githubusercontent.com/u/12798270?v=4", [["National-Data", "https://github.com/yiyuezhuo/National-Data", "\u56fd\u5bb6\u7edf\u8ba1\u5c40\u7684\u56fd\u5bb6\u6570\u636e\u7f51\u7ad9\u6570\u636e\u6293\u53d6\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u75281978-2016\u6240\u6709\u5e74\u9274\u6307\u6807\u7684csv\u6570\u636e", 60, "Python"]]], ["User", "dongxiexidian", "https://avatars0.githubusercontent.com/u/4476858?v=4", [["Chinese", "https://github.com/dongxiexidian/Chinese", "Tools and resources for Chinese texts preprocessing. Validated in two papers, one CCF C, EI indexing and one CCF B, SCI indexing.", 516, "Python"]]], ["User", "DingGuodong", "https://avatars3.githubusercontent.com/u/5717062?v=4", [["LinuxBashShellScriptForOps", "https://github.com/DingGuodong/LinuxBashShellScriptForOps", "Linux Bash Shell Script and Python Script For Ops and Devops", 88, "Python"]]], ["User", "ganliuzhuo", "https://avatars0.githubusercontent.com/u/6041694?v=4", [["Sebug", "https://github.com/ganliuzhuo/Sebug", "Sebug\u63d0\u4ea4\u7684\u6f0f\u6d1e\u8be6\u60c5\u548cPOC", 51, "Python"]]], ["User", "InnerPeace-Wu", "https://avatars2.githubusercontent.com/u/22615736?v=4", [["CapsNet-tensorflow", "https://github.com/InnerPeace-Wu/CapsNet-tensorflow", "With reconstruct, capsule representation, adversarial experiments. Implementation of NIPS2017 paper \"Dynamic Routing Between Capsules\" in tensorflow. ", 63, "Python"]]], ["User", "lujiaying", "https://avatars2.githubusercontent.com/u/5207337?v=4", [["MovieTaster-Open", "https://github.com/lujiaying/MovieTaster-Open", "\u4f7f\u7528Item2Vec\u505a\u7535\u5f71\u63a8\u8350", 58, "Python"]]], ["User", "Raytone-D", "https://avatars3.githubusercontent.com/u/13312557?v=4", [["puppet", "https://github.com/Raytone-D/puppet", "\u5c06\u4ea4\u6613\u7aef\u7684\u754c\u9762\u64cd\u4f5c\u5305\u88c5\u4e3a\u53ef\u7f16\u7a0b\u7684\u4ea4\u6613\u63a5\u53e3\uff0c\u517c\u5bb9THS\uff0cTDX\u3002UIAutomation API for trade client. QQgroup\uff1a624585416", 141, "Python"]]], ["User", "myzhan", "https://avatars2.githubusercontent.com/u/953781?v=4", []], ["User", "jcyk", "https://avatars0.githubusercontent.com/u/11582128?v=4", [["CWS", "https://github.com/jcyk/CWS", "Source code for an ACL2016 paper of Chinese word segmentation", 59, "Python"], ["greedyCWS", "https://github.com/jcyk/greedyCWS", "Source code for an ACL2017 paper on Chinese word segmentation", 55, "Python"]]], ["User", "lord63", "https://avatars0.githubusercontent.com/u/5268051?v=4", [["py-spin", "https://github.com/lord63/py-spin", "Terminal spinner package for Python. ", 155, "Python"], ["tldr.py", "https://github.com/lord63/tldr.py", "A python client for tldr: simplified and community-driven man pages.", 136, "Python"], ["pyhipku", "https://github.com/lord63/pyhipku", "Encode any IP address as a haiku, funny and lovely. TRY IT NOW: http://pyhipku.lord63.com", 96, "Python"]]], ["User", "DuinoDu", "https://avatars3.githubusercontent.com/u/6895453?v=4", [["mtcnn", "https://github.com/DuinoDu/mtcnn", "mtcnn in python", 170, "Python"]]], ["User", "taogeT", "https://avatars1.githubusercontent.com/u/6917395?v=4", [["livetv_mining", "https://github.com/taogeT/livetv_mining", "\u76f4\u64ad\u7f51\u7ad9\u6570\u636e\u91c7\u96c6", 165, "Python"]]], ["User", "tankle", "https://avatars3.githubusercontent.com/u/1207758?v=4", []], ["User", "chenbjin", "https://avatars2.githubusercontent.com/u/5526772?v=4", []], ["User", "han-cai", "https://avatars1.githubusercontent.com/u/18210440?v=4", [["EAS", "https://github.com/han-cai/EAS", "Efficient Architecture Search by Network Transformation, in AAAI 2018", 97, "Python"], ["rlb-dp", "https://github.com/han-cai/rlb-dp", "Real-Time Bidding by Reinforcement Learning in Display Advertising", 68, "Python"]]], ["User", "hitvoice", "https://avatars1.githubusercontent.com/u/13765633?v=4", [["DrQA", "https://github.com/hitvoice/DrQA", "A pytorch implementation of Reading Wikipedia to Answer Open-Domain Questions.", 208, "Python"]]], ["User", "chenditc", "https://avatars0.githubusercontent.com/u/3244845?v=4", []], ["User", "Ian09", "https://avatars1.githubusercontent.com/u/1275795?v=4", [["CF-NADE", "https://github.com/Ian09/CF-NADE", "A implementation of CF-NADE. Yin Zheng, et. al.  \"A Neural Autoregressive Approach to Collaborative Filtering\", accepted by ICML 2016.", 64, "Python"]]], ["User", "rieuse", "https://avatars1.githubusercontent.com/u/19484501?v=4", [["learnPython", "https://github.com/rieuse/learnPython", "Python\u7684\u57fa\u7840\u7ec3\u4e60\u4ee3\u7801\u4e0e\u5404\u79cd\u722c\u866b\u4ee3\u7801", 207, "Python"]]], ["User", "leenjewel", "https://avatars1.githubusercontent.com/u/121423?v=4", []], ["User", "hizzgdev", "https://avatars2.githubusercontent.com/u/1690290?v=4", []], ["User", "yuantailing", "https://avatars0.githubusercontent.com/u/8487114?v=4", [["ctw-baseline", "https://github.com/yuantailing/ctw-baseline", "Baseline methods for [CTW dataset](https://ctwdataset.github.io/)", 86, "Python"]]], ["User", "ictxiangxin", "https://avatars2.githubusercontent.com/u/3955842?v=4", []], ["User", "sinall", "https://avatars1.githubusercontent.com/u/1246382?v=4", [["ShiPanE-Python-SDK", "https://github.com/sinall/ShiPanE-Python-SDK", "\u5b9e\u76d8\u2660\u6613\uff08ShiPanE\uff09Python SDK\uff0c\u901a\u8fbe\u4fe1\u3001\u540c\u82b1\u987a\u81ea\u52a8\u5316\u4ea4\u6613 API \u53ca\u91cf\u5316\u5e73\u53f0\u3002", 398, "Python"]]], ["User", "caogang", "https://avatars1.githubusercontent.com/u/2537027?v=4", [["wgan-gp", "https://github.com/caogang/wgan-gp", "A pytorch implementation of Paper \"Improved Training of Wasserstein GANs\"", 403, "Python"]]], ["User", "wabyking", "https://avatars2.githubusercontent.com/u/9322285?v=4", [["TextClassificationBenchmark", "https://github.com/wabyking/TextClassificationBenchmark", "A Benchmark of Text Classification in PyTorch", 115, "Python"]]], ["User", "SeanLee97", "https://avatars0.githubusercontent.com/u/12824323?v=4", [["xmnlp", "https://github.com/SeanLee97/xmnlp", "A Lightweight Chinese Natural Language Processing Toolkit\uff0c\u63d0\u4f9b\u4e2d\u6587\u5206\u8bcd, \u4e2d\u6587\u8bcd\u6027\u6807\u6ce8, \u6587\u672c\u7ea0\u9519\uff0c\u6587\u672c\u8f6c\u62fc\u97f3\uff0c\u60c5\u611f\u5206\u6790...", 87, "Python"]]], ["User", "yufeiminds", "https://avatars2.githubusercontent.com/u/9150374?v=4", [["echarts-python", "https://github.com/yufeiminds/echarts-python", "Generate Echarts options with Python.", 319, "Python"]]], ["User", "zhengqm", "https://avatars2.githubusercontent.com/u/2503869?v=4", [["SongFinder", "https://github.com/zhengqm/SongFinder", "A spectrum analysis based music finder", 103, "Python"]]], ["User", "mcdona1d", "https://avatars2.githubusercontent.com/u/7844826?v=4", [["RaspberryWechatPi", "https://github.com/mcdona1d/RaspberryWechatPi", "\u57fa\u4e8e\u6811\u8393\u6d3e\u7684\u667a\u80fd\u5bb6\u5c45\u63a7\u5236\u5e73\u53f0 \u5fae\u4fe1\u670d\u52a1\u7aef \u53d1\u5e03\u7248", 344, "Python"]]], ["User", "wangheda", "https://avatars2.githubusercontent.com/u/1303182?v=4", [["youtube-8m", "https://github.com/wangheda/youtube-8m", "The 2nd place Solution to the Youtube-8M Video Understanding Challenge by Team Monkeytyping (based on tensorflow)", 98, "Python"]]], ["User", "meibenjin", "https://avatars3.githubusercontent.com/u/4006547?v=4", [["GoogleSearchCrawler", "https://github.com/meibenjin/GoogleSearchCrawler", "a tool for crawl Google search results", 175, "Python"]]], ["User", "dawndiy", "https://avatars1.githubusercontent.com/u/1512740?v=4", []], ["User", "chenjj", "https://avatars3.githubusercontent.com/u/2682905?v=4", [["CORScanner", "https://github.com/chenjj/CORScanner", "\ud83c\udf7b Fast CORS misconfiguration vulnerabilities scanner", 53, "Python"]]], ["User", "xiaochus", "https://avatars2.githubusercontent.com/u/16798444?v=4", [["YOLOv3", "https://github.com/xiaochus/YOLOv3", "Keras implementation of yolo v3 object detection.", 182, "Python"]]], ["User", "YCG09", "https://avatars1.githubusercontent.com/u/9940376?v=4", [["chinese_ocr", "https://github.com/YCG09/chinese_ocr", "CTPN + DenseNet + CTC based end-to-end Chinese OCR implemented using tensorflow and keras", 189, "Python"], ["tf-text-classification", "https://github.com/YCG09/tf-text-classification", "CNN and RNN with Attention for Chinese Text Classification in Tensorflow", 48, "Python"]]], ["User", "YvesChan", "https://avatars0.githubusercontent.com/u/1222198?v=4", []], ["User", "deepgully", "https://avatars0.githubusercontent.com/u/481894?v=4", [["me", "https://github.com/deepgully/me", "Personal website powered by Flask, supports GAE, SAE and BAE. ", 278, "Python"]]], ["User", "dbbbit", "https://avatars1.githubusercontent.com/u/8575796?v=4", [["ninja-search", "https://github.com/dbbbit/ninja-search", "[Deactived] search engine for v2ex ", 146, "Python"]]], ["User", "RitterHou", "https://avatars0.githubusercontent.com/u/11351442?v=4", [["music-163", "https://github.com/RitterHou/music-163", "\u722c\u53d6\u7f51\u6613\u4e91\u97f3\u4e50\u6240\u6709\u6b4c\u66f2\u7684\u8bc4\u8bba\u6570", 121, "Python"]]], ["User", "dev-techmoe", "https://avatars0.githubusercontent.com/u/7919562?v=4", [["python-dcdownloader", "https://github.com/dev-techmoe/python-dcdownloader", "\u7531Python\u7f16\u5199\u7684\u5168\u5f02\u6b65\u5b9e\u73b0\u7684\u52a8\u6f2b\u4e4b\u5bb6(dmzj)\u6f2b\u753b\u6279\u91cf\u4e0b\u8f7d\u5668\uff08\u722c\u866b\uff09", 63, "Python"]]], ["User", "yanzhou", "https://avatars2.githubusercontent.com/u/1528461?v=4", [["CnkiSpider", "https://github.com/yanzhou/CnkiSpider", "\u4e2d\u56fd\u77e5\u7f51\u722c\u866b", 156, "Python"]]], ["User", "JLUNeverMore", "https://avatars1.githubusercontent.com/u/12668968?v=4", [["easy_2048-in-200-lines", "https://github.com/JLUNeverMore/easy_2048-in-200-lines", "Implement game 2048 with python", 44, "Python"]]], ["User", "chenkkkk", "https://avatars3.githubusercontent.com/u/7328358?v=4", [["TianChi_YiDongTuiJian_forecast", "https://github.com/chenkkkk/TianChi_YiDongTuiJian_forecast", "\u963f\u91cc\u79fb\u52a8\u63a8\u8350\u7b97\u6cd5", 41, "Python"]]], ["User", "xsren", "https://avatars0.githubusercontent.com/u/4971925?v=4", [["wx_taobao_fanli", "https://github.com/xsren/wx_taobao_fanli", "\u5fae\u4fe1 \u6dd8\u5b9d \u8fd4\u5229", 138, "Python"]]], ["User", "WeikuiWang", "https://avatars2.githubusercontent.com/u/16658472?v=4", []], ["User", "SuperChenSSS", "https://avatars2.githubusercontent.com/u/17025439?v=4", []], ["User", "hailong0707-zz", "https://avatars3.githubusercontent.com/u/805090?v=4", [["spider_news_all", "https://github.com/hailong0707-zz/spider_news_all", "Scrapy Spider for \u5404\u79cd\u65b0\u95fb\u7f51\u7ad9", 79, "Python"]]], ["User", "animalize", "https://avatars2.githubusercontent.com/u/11244865?v=4", [["qqwry-python3", "https://github.com/animalize/qqwry-python3", "\u5728\u7eaf\u771fIP\u6570\u636e\u5e93\uff08qqwry.dat\uff09\u67e5\u8be2IP\u5f52\u5c5e\u5730\uff0c for python 3.0+\uff0c\u5df2\u4e0a\u4f20\u81f3pypi\u3002", 46, "Python"]]], ["User", "duduscript", "https://avatars1.githubusercontent.com/u/6694988?v=4", [["byr-sibi", "https://github.com/duduscript/byr-sibi", "\u4e13\u6ce8\u4e8e\u5317\u90ae\u4eba\u6495\u903c\uff0c\u8bb0\u5f55\u5317\u90ae\u4eba\u7684\u5404\u79cd\u4e11\u6001\uff0c\u6b22\u8fce\u5927\u5bb6fork", 42, "Python"]]], ["User", "CekerLee", "https://avatars3.githubusercontent.com/u/16758312?v=4", [["ImageKmeans", "https://github.com/CekerLee/ImageKmeans", "\u56fe\u7247\u805a\u7c7bDemo", 62, "Python"]]], ["User", "chanyipiaomiao", "https://avatars2.githubusercontent.com/u/1332794?v=4", []], ["User", "Mellcap", "https://avatars0.githubusercontent.com/u/11872712?v=4", [["MellPlayer", "https://github.com/Mellcap/MellPlayer", "A tiny terminal player based on Python3", 177, "Python"]]], ["User", "NeymarL", "https://avatars2.githubusercontent.com/u/12618657?v=4", [["ChineseChess-AlphaZero", "https://github.com/NeymarL/ChineseChess-AlphaZero", "Implement AlphaZero/AlphaGo Zero methods on Chinese chess.", 93, "Python"]]], ["User", "Azure-rong", "https://avatars0.githubusercontent.com/u/6489653?v=4", [["Review-Helpfulness-Prediction", "https://github.com/Azure-rong/Review-Helpfulness-Prediction", "Project of automatically detecting review helpfulness. Using", 100, "Python"]]], ["User", "xingjian-f", "https://avatars3.githubusercontent.com/u/18479064?v=4", [["DeepLearning-OCR", "https://github.com/xingjian-f/DeepLearning-OCR", "Build an Optical Character Recognition service using deep learning method", 46, "Python"]]], ["User", "ChengjinLi", "https://avatars1.githubusercontent.com/u/25836513?v=4", [["machine_learning", "https://github.com/ChengjinLi/machine_learning", "\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u3001NLP\u5b9e\u6218\u9879\u76ee", 62, "Python"]]], ["User", "simapple", "https://avatars0.githubusercontent.com/u/1817430?v=4", [["spider", "https://github.com/simapple/spider", "python web\u722c\u866b", 75, "Python"]]], ["User", "JobsDong", "https://avatars2.githubusercontent.com/u/4734959?v=4", [["zhihudaily", "https://github.com/JobsDong/zhihudaily", "\u57fa\u4e8etornado\uff0csae\u7684\u7f51\u9875\u7248\u77e5\u4e4e\u65e5\u62a5", 41, "Python"]]], ["User", "primetang", "https://avatars0.githubusercontent.com/u/7023014?v=4", [["pyflann", "https://github.com/primetang/pyflann", "python bindings for FLANN - Fast Library for Approximate Nearest Neighbors.", 49, "Python"]]], ["User", "lzane", "https://avatars3.githubusercontent.com/u/12814398?v=4", [["Fingers-Detection-using-OpenCV-and-Python", "https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python", "A simple Fingers Detection (or Gesture Recognition) using OpenCV and Python with background substraction \u7b80\u5355\u624b\u52bf\u8bc6\u522b", 95, "Python"]]], ["User", "yanwii", "https://avatars3.githubusercontent.com/u/15832673?v=4", [["dynamic-seq2seq", "https://github.com/yanwii/dynamic-seq2seq", "seq2seq\u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba", 131, "Python"], ["seq2seq", "https://github.com/yanwii/seq2seq", "\u57fa\u4e8ePytorch\u7684\u4e2d\u6587\u804a\u5929\u673a\u5668\u4eba \u96c6\u6210BeamSearch\u7b97\u6cd5", 67, "Python"], ["pet-chain", "https://github.com/yanwii/pet-chain", "\u767e\u5ea6\u83b1\u8328\u72d7\u8d2d\u4e70 baidu pet-chain \u7f51\u9875\u7aef\u62a2\u72d7", 60, "Python"], ["msxiaoiceapi", "https://github.com/yanwii/msxiaoiceapi", "\u5fae\u8f6f\u5c0f\u51b0\u5fae\u535aapi msxiaoice weibo api", 54, "Python"]]], ["User", "menduo", "https://avatars2.githubusercontent.com/u/13566062?v=4", []], ["User", "mike-zhang", "https://avatars2.githubusercontent.com/u/2386439?v=4", [["mikeBlogEssays", "https://github.com/mike-zhang/mikeBlogEssays", null, 45, "Python"]]], ["User", "JustinhoCHN", "https://avatars0.githubusercontent.com/u/24873787?v=4", [["SRGAN_Wasserstein", "https://github.com/JustinhoCHN/SRGAN_Wasserstein", "Apply Waseerstein GAN into SRGAN, a deep learning super resolution model", 123, "Python"]]], ["User", "autosquid", "https://avatars0.githubusercontent.com/u/758925?v=4", []], ["User", "ChestnutHeng", "https://avatars3.githubusercontent.com/u/11332712?v=4", [["Wudao-dict", "https://github.com/ChestnutHeng/Wudao-dict", "\u6709\u9053\u8bcd\u5178\u7684\u547d\u4ee4\u884c\u7248\u672c\uff0c\u652f\u6301\u82f1\u6c49\u4e92\u67e5\u548c\u5728\u7ebf\u67e5\u8be2\u3002", 224, "Python"]]], ["User", "ShiveryMoon", "https://avatars2.githubusercontent.com/u/22512882?v=4", [["Imooc-Algorithm-PythonEdition", "https://github.com/ShiveryMoon/Imooc-Algorithm-PythonEdition", "\u6155\u8bfe\u7f51\u7684\u5b9e\u6218\u8bfe\u7a0b\u201c\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u201c\u7684\u5168python\u5b9e\u73b0", 123, "Python"]]], ["User", "laserwave", "https://avatars1.githubusercontent.com/u/18577799?v=4", []], ["User", "bebound", "https://avatars3.githubusercontent.com/u/2227874?v=4", [["pixiv", "https://github.com/bebound/pixiv", "Pixiv Downloader - Batch download pictures from Pixiv", 69, "Python"], ["linovel", "https://github.com/bebound/linovel", "Generate EPUB from various websites", 55, "Python"]]], ["User", "wangzw", "https://avatars3.githubusercontent.com/u/1254826?v=4", []], ["User", "imzjy", "https://avatars3.githubusercontent.com/u/1628551?v=4", []], ["User", "lofyer", "https://avatars1.githubusercontent.com/u/6907706?v=4", [["InTheCloud", "https://github.com/lofyer/InTheCloud", "\u4e00\u672c\u4e91\u8ba1\u7b97\u5165\u95e8/\u8fdb\u9636\u624b\u518c\u3002", 80, "Python"]]], ["User", "goace", "https://avatars0.githubusercontent.com/u/1522449?v=4", [["personal-file-sharing-center", "https://github.com/goace/personal-file-sharing-center", "A simple web APP for shareing files", 188, "Python"]]], ["User", "jiffies", "https://avatars2.githubusercontent.com/u/1257256?v=4", [["GouYong", "https://github.com/jiffies/GouYong", "Youdao,Translate,Dict.Best experience of get word from screen in Linux.", 68, "Python"]]], ["User", "Feiox", "https://avatars3.githubusercontent.com/u/10361876?v=4", [["useless-websites", "https://github.com/Feiox/useless-websites", "Collect garbage website on the internet", 255, "Python"]]], ["User", "weipin", "https://avatars3.githubusercontent.com/u/390095?v=4", []], ["User", "moneyDboat", "https://avatars1.githubusercontent.com/u/11391316?v=4", [["wechat_jump_jump", "https://github.com/moneyDboat/wechat_jump_jump", "\u7528Python+Opencv\u8ba9\u7535\u8111\u5e2e\u4f60\u81ea\u52a8\u73a9\u5fae\u4fe1\u8df3\u4e00\u8df3", 240, "Python"]]], ["User", "kinegratii", "https://avatars0.githubusercontent.com/u/9875406?v=4", [["django-echarts", "https://github.com/kinegratii/django-echarts", "A django app for Echarts integration using pyecharts library as chart builder.", 54, "Python"]]], ["User", "chris-void", "https://avatars3.githubusercontent.com/u/6162221?v=4", [["pyway", "https://github.com/chris-void/pyway", "Learn Python The Hard Way", 106, "Python"]]], ["User", "wonderqs", "https://avatars0.githubusercontent.com/u/10720824?v=4", [["Blade", "https://github.com/wonderqs/Blade", "A webshell connection tool with customized WAF bypass payloads", 72, "Python"]]], ["User", "leebaok", "https://avatars0.githubusercontent.com/u/3748703?v=4", []], ["User", "zhaocq-nlp", "https://avatars2.githubusercontent.com/u/16274195?v=4", [["NJUNMT-tf", "https://github.com/zhaocq-nlp/NJUNMT-tf", "An open-source neural machine translation system developed by Natural Language Processing Group, Nanjing University.", 53, "Python"]]], ["User", "jessemelpolio", "https://avatars2.githubusercontent.com/u/5879276?v=4", [["non-stationary_texture_syn", "https://github.com/jessemelpolio/non-stationary_texture_syn", "Code used for texture synthesis using GAN", 135, "Python"], ["Faster_RCNN_for_DOTA", "https://github.com/jessemelpolio/Faster_RCNN_for_DOTA", "Code used for training Faster R-CNN on DOTA", 63, "Python"]]], ["User", "digglife", "https://avatars2.githubusercontent.com/u/1468378?v=4", [["cnbankcard", "https://github.com/digglife/cnbankcard", ":bank: \u7531\u94f6\u884c\u5361\u5361\u53f7\u89e3\u6790\u51fa\u53d1\u5361\u884c\u548c\u5361\u522b\uff0c\u9002\u7528\u4e8e\u4e2d\u56fd\u56fd\u5185\u591a\u6570\u94f6\u884c\uff0c\u8fd4\u56deJSON\u6570\u636e\u3002", 449, "Python"]]], ["User", "ybbz", "https://avatars2.githubusercontent.com/u/4158468?v=4", []], ["User", "opengit", "https://avatars1.githubusercontent.com/u/12468408?v=4", []], ["User", "Jackiexiao", "https://avatars2.githubusercontent.com/u/18050469?v=4", [["MTTS", "https://github.com/Jackiexiao/MTTS", "A Demo of Mandarin/Chinese TTS frontend", 46, "Python"]]], ["User", "yjmade", "https://avatars3.githubusercontent.com/u/1754190?v=4", [["django-pgjsonb", "https://github.com/yjmade/django-pgjsonb", "Django Postgres JSONB Fields support with lookups ", 60, "Python"]]], ["User", "hx173149", "https://avatars0.githubusercontent.com/u/5306116?v=4", [["C3D-tensorflow", "https://github.com/hx173149/C3D-tensorflow", null, 234, "Python"]]], ["User", "ly0", "https://avatars2.githubusercontent.com/u/1551736?v=4", [["baidupcsapi", "https://github.com/ly0/baidupcsapi", "\u767e\u5ea6\u7f51\u76d8api", 666, "Python"], ["baidu-fuse", "https://github.com/ly0/baidu-fuse", "\u57fa\u4e8e\u767e\u5ea6\u7f51\u76d8\u7684\u4e00\u4e2afuse\uff0c\u5b9e\u9a8c\u6027\u9879\u76ee", 42, "Python"]]], ["User", "changpingc", "https://avatars0.githubusercontent.com/u/303501?v=4", []], ["User", "hit9", "https://avatars0.githubusercontent.com/u/1687443?v=4", [["skylark", "https://github.com/hit9/skylark", "No longer maintained. A micro python orm for mysql and sqlite3.", 177, "Python"], ["rux", "https://github.com/hit9/rux", "Micro & Fast static blog generator (markdown => html).", 63, "Python"]]], ["User", "hanc00l", "https://avatars3.githubusercontent.com/u/12759172?v=4", [["weblogic_unserialize_exploit", "https://github.com/hanc00l/weblogic_unserialize_exploit", "java unserialize vul for weblogic exploit", 101, "Python"], ["wifitest", "https://github.com/hanc00l/wifitest", "\u4e00\u4e2a\u7b80\u5355\u7684wifi\u5f31\u53e3\u4ee4\u66b4\u7834\u7684python\u811a\u672c\uff0c\u53ef\u81ea\u52a8\u5b9e\u65f6\u7834\u89e3\uff0c\u4e0d\u9700\u8981\u4f7f\u7528aircrack-ng\u6293\u5305", 57, "Python"], ["captcha-python-test", "https://github.com/hanc00l/captcha-python-test", "\u5b66\u4e60\u9a8c\u8bc1\u7801\u8bc6\u522b\u7684\u76f8\u5173\u6280\u672f\uff0c\u5305\u62ecopencv\u3001tesseract\u3001\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff08kNN\u548cSVM\uff09\u7b49\uff0c\u5c06\u539f\u4f5c\u8005\u7684\u7b97\u6cd5\u6539\u4e3apython", 45, "Python"]]], ["User", "tclh123", "https://avatars3.githubusercontent.com/u/1311043?v=4", []], ["User", "Joker316701882", "https://avatars3.githubusercontent.com/u/18679821?v=4", [["Deep-Image-Matting", "https://github.com/Joker316701882/Deep-Image-Matting", "This is tensorflow implementation for paper \"Deep Image Matting\"", 304, "Python"], ["Salient-Object-Detection", "https://github.com/Joker316701882/Salient-Object-Detection", "This is tensorflow implementation for cvpr2017 paper \"Deeply Supervised Salient Object Detection with Short Connections\"", 151, "Python"]]], ["User", "v1cker", "https://avatars0.githubusercontent.com/u/10337420?v=4", [["src_edu", "https://github.com/v1cker/src_edu", "\u4e3a\u5404\u4f4d\u51fa\u8272\u7684\u6e17\u900f\u5de5\u7a0b\u5e08\u63d0\u4f9b\u653b\u51fb\u76ee\u6807\u3002", 44, "Python"]]], ["User", "zhengxiaowai", "https://avatars1.githubusercontent.com/u/8123309?v=4", []], ["User", "v55448330", "https://avatars3.githubusercontent.com/u/13160941?v=4", [["lazy-balancer", "https://github.com/v55448330/lazy-balancer", "nginx for balancer web ui", 248, "Python"]]], ["User", "v5est0r", "https://avatars3.githubusercontent.com/u/20334557?v=4", [["Python_FuckMySQL", "https://github.com/v5est0r/Python_FuckMySQL", "Using To MySQL Elevate Privileges.", 66, "Python"]]], ["User", "sintrb", "https://avatars1.githubusercontent.com/u/2967718?v=4", []], ["User", "ozmartian", "https://avatars0.githubusercontent.com/u/4241227?v=4", [["vidcutter", "https://github.com/ozmartian/vidcutter", "v6.0.0 released as flatpak available from Flathub (https://www.flathub.org) store... v6.0.0 release for all platforms and Linux distros coming soon! ... snap package available @ snapcraft store... see below for more details...  latest release: 5.5.0", 286, "Python"]]]]}